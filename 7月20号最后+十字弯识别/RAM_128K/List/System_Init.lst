###############################################################################
#                                                                             #
#                                                       30/Oct/2014  20:44:55 #
# IAR ANSI C/C++ Compiler V6.30.6.23336/W32 EVALUATION for ARM                #
# Copyright 1999-2012 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  thumb                                                    #
#    Endian       =  little                                                   #
#    Source file  =  E:\´´ÐÂ»î¶¯\ÖÇÄÜ³µ\µÚÊ®½ì\±¾³µ³ÌÐò\1029µ÷ÊÔ°æ\System_Ini #
#                    t\System_Init.c                                          #
#    Command line =  E:\´´ÐÂ»î¶¯\ÖÇÄÜ³µ\µÚÊ®½ì\±¾³µ³ÌÐò\1029µ÷ÊÔ°æ\System_Ini #
#                    t\System_Init.c -D IAR -lCN                              #
#                    E:\´´ÐÂ»î¶¯\ÖÇÄÜ³µ\µÚÊ®½ì\±¾³µ³ÌÐò\1029µ÷ÊÔ°æ\RAM_128K\L #
#                    ist\ -lB E:\´´ÐÂ»î¶¯\ÖÇÄÜ³µ\µÚÊ®½ì\±¾³µ³ÌÐò\1029µ÷ÊÔ°æ\R #
#                    AM_128K\List\ -o E:\´´ÐÂ»î¶¯\ÖÇÄÜ³µ\µÚÊ®½ì\±¾³µ³ÌÐò\1029 #
#                    µ÷ÊÔ°æ\RAM_128K\Obj\ --debug --endian=little             #
#                    --cpu=Cortex-M4 -e --fpu=None --dlib_config "C:\Program  #
#                    Files\IAR Systems\Embedded Workbench 6.0                 #
#                    Evaluation\arm\INC\c\DLib_Config_Normal.h" -I            #
#                    E:\´´ÐÂ»î¶¯\ÖÇÄÜ³µ\µÚÊ®½ì\±¾³µ³ÌÐò\1029µ÷ÊÔ°æ\Library\CP #
#                    U\ -I E:\´´ÐÂ»î¶¯\ÖÇÄÜ³µ\µÚÊ®½ì\±¾³µ³ÌÐò\1029µ÷ÊÔ°æ\Libr #
#                    ary\Drivers\ADC\ -I E:\´´ÐÂ»î¶¯\ÖÇÄÜ³µ\µÚÊ®½ì\±¾³µ³ÌÐò\1 #
#                    029µ÷ÊÔ°æ\Library\Drivers\FTM\ -I                        #
#                    E:\´´ÐÂ»î¶¯\ÖÇÄÜ³µ\µÚÊ®½ì\±¾³µ³ÌÐò\1029µ÷ÊÔ°æ\Library\Dr #
#                    ivers\GPIO\ -I E:\´´ÐÂ»î¶¯\ÖÇÄÜ³µ\µÚÊ®½ì\±¾³µ³ÌÐò\1029µ÷ #
#                    ÊÔ°æ\Library\Drivers\PIT\ -I                             #
#                    E:\´´ÐÂ»î¶¯\ÖÇÄÜ³µ\µÚÊ®½ì\±¾³µ³ÌÐò\1029µ÷ÊÔ°æ\System_Ini #
#                    t\ -I E:\´´ÐÂ»î¶¯\ÖÇÄÜ³µ\µÚÊ®½ì\±¾³µ³ÌÐò\1029µ÷ÊÔ°æ\Sour #
#                    ce\ -I E:\´´ÐÂ»î¶¯\ÖÇÄÜ³µ\µÚÊ®½ì\±¾³µ³ÌÐò\1029µ÷ÊÔ°æ\OLE #
#                    D\ -I E:\´´ÐÂ»î¶¯\ÖÇÄÜ³µ\µÚÊ®½ì\±¾³µ³ÌÐò\1029µ÷ÊÔ°æ\SD_S #
#                    ystem\ -I E:\´´ÐÂ»î¶¯\ÖÇÄÜ³µ\µÚÊ®½ì\±¾³µ³ÌÐò\1029µ÷ÊÔ°æ\ #
#                    Simple_AD\ -I E:\´´ÐÂ»î¶¯\ÖÇÄÜ³µ\µÚÊ®½ì\±¾³µ³ÌÐò\1029µ÷Ê #
#                    Ô°æ\Delay\ -I E:\´´ÐÂ»î¶¯\ÖÇÄÜ³µ\µÚÊ®½ì\±¾³µ³ÌÐò\1029µ÷Ê #
#                    Ô°æ\Make_Desicion\ -Oh                                   #
#    List file    =  E:\´´ÐÂ»î¶¯\ÖÇÄÜ³µ\µÚÊ®½ì\±¾³µ³ÌÐò\1029µ÷ÊÔ°æ\RAM_128K\L #
#                    ist\System_Init.lst                                      #
#    Object file  =  E:\´´ÐÂ»î¶¯\ÖÇÄÜ³µ\µÚÊ®½ì\±¾³µ³ÌÐò\1029µ÷ÊÔ°æ\RAM_128K\O #
#                    bj\System_Init.o                                         #
#                                                                             #
#                                                                             #
###############################################################################

E:\´´ÐÂ»î¶¯\ÖÇÄÜ³µ\µÚÊ®½ì\±¾³µ³ÌÐò\1029µ÷ÊÔ°æ\System_Init\System_Init.c
      1          #include "AllHeaders.h"
      2          
      3          /*******************************************************************************
      4          * º¯ÊýÃû£ºCCD_Init(void)
      5          * Ãè  Êö£ºÍê³É¶ÔCCDÓÐ¹ØÒý½ÅµÄ³õÊ¼»¯
      6          ********************************************************************************/

   \                                 In section .text, align 2, keep-with-next
      7          void CCD_Init(void)
      8          {
   \                     CCD_Init:
   \   00000000   0xB510             PUSH     {R4,LR}
      9            //CCD port init
     10            GPIO_SetPinMod(PORTB, 1,0);                               // ÅäÖÃÏàÓ¦Òý½ÅµÄ¹¦ÄÜºÅ,ADC0_SE9 ¶¨CCD²É¼¯
   \   00000002   0x2200             MOVS     R2,#+0
   \   00000004   0x2101             MOVS     R1,#+1
   \   00000006   0x....             LDR.N    R0,??DataTable5  ;; 0x400ff040
   \   00000008   0x.... 0x....      BL       GPIO_SetPinMod
     11            GPIO_SetPinMod(PORTC,16,1);                             
   \   0000000C   0x....             LDR.N    R4,??DataTable5_1  ;; 0x400ff080
   \   0000000E   0x2201             MOVS     R2,#+1
   \   00000010   0x2110             MOVS     R1,#+16
   \   00000012   0x4620             MOV      R0,R4
   \   00000014   0x.... 0x....      BL       GPIO_SetPinMod
     12            GPIO_SetPinDir(PORTC,16,1);                               // ÉèÖÃPTC16¿ÚÎªÊä³ö£¬SIÐÅºÅ
   \   00000018   0x2201             MOVS     R2,#+1
   \   0000001A   0x2110             MOVS     R1,#+16
   \   0000001C   0x4620             MOV      R0,R4
   \   0000001E   0x.... 0x....      BL       GPIO_SetPinDir
     13            GPIO_SetPinMod(PORTD,0,1);
   \   00000022   0x....             LDR.N    R4,??DataTable5_2  ;; 0x400ff0c0
   \   00000024   0x2201             MOVS     R2,#+1
   \   00000026   0x2100             MOVS     R1,#+0
   \   00000028   0x4620             MOV      R0,R4
   \   0000002A   0x.... 0x....      BL       GPIO_SetPinMod
     14            GPIO_SetPinDir(PORTD,0,1);                                // ÉèÖÃPTD0¿ÚÎªÊä³ö£¬CLKÐÅºÅ
   \   0000002E   0x2201             MOVS     R2,#+1
   \   00000030   0x2100             MOVS     R1,#+0
   \   00000032   0x4620             MOV      R0,R4
   \   00000034   0x.... 0x....      BL       GPIO_SetPinDir
     15            //CCD ADC module init
     16            ADC_ClockCtrl(ADC0);
   \   00000038   0x....             LDR.N    R4,??DataTable5_3  ;; 0x4003b000
   \   0000003A   0x4620             MOV      R0,R4
   \   0000003C   0x.... 0x....      BL       ADC_ClockCtrl
     17            ADC_SetCFG1(ADC0, 1, 0, 1);                        // ADC ²ÉÑù¾«¶È8Î»£¬Ê±ÖÓÆµÂÊ48MHZ£¨×ÜÏßÊ±ÖÓ£©
   \   00000040   0x2301             MOVS     R3,#+1
   \   00000042   0x2200             MOVS     R2,#+0
   \   00000044   0x2101             MOVS     R1,#+1
   \   00000046   0x4620             MOV      R0,R4
   \   00000048   0x.... 0x....      BL       ADC_SetCFG1
     18            ADC_SetCFG2(ADC0, 0, 0, 3);                        //µÚ¶þ¸ö²ÎÊýÑ¡ÔñADC A»òB
   \   0000004C   0x2200             MOVS     R2,#+0
   \   0000004E   0x2303             MOVS     R3,#+3
   \   00000050   0x4611             MOV      R1,R2
   \   00000052   0x4620             MOV      R0,R4
   \   00000054   0x.... 0x....      BL       ADC_SetCFG2
     19            ADC_SetSC(ADC0, 1, 0, 0);                          // Ó²¼þÆ½¾ùÂË²¨²ÉÑù´ÎÊýÎª 8£¬²éÑ¯·½Ê½ 8MHZ²ÉÑùÂÊ 6¸öÊ±ÖÓÖÜÆÚÍê³ÉÒ»´Î×ª»»
   \   00000058   0x4620             MOV      R0,R4
   \   0000005A   0xE8BD 0x4010      POP      {R4,LR}
   \   0000005E   0x2300             MOVS     R3,#+0
   \   00000060   0x461A             MOV      R2,R3
   \   00000062   0x2101             MOVS     R1,#+1
   \   00000064   0x.... 0x....      B.W      ADC_SetSC
     20          }
     21          
     22          /*******************************************************************************
     23          * º¯ÊýÃû³Æ£ºServo_Init(void)
     24          * Ãè    Êö£ºÉèÖÃ¶æ»ú¿ØÖÆ PWM Ä£¿é                                         
     25          *******************************************************************************/

   \                                 In section .text, align 2, keep-with-next
     26          void Servo_Init(void)                           //Íê³É¶ÔPWM0µÄ³õÊ¼»¯£¬ÓÃÓÚ¿ØÖÆ×ªÏò¶æ»ú
     27          {  
   \                     Servo_Init:
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0xB082             SUB      SP,SP,#+8
     28            GPIO_SetPinMod(PORTA, 13, 3);                       // ÅäÖÃÏàÓ¦Òý½ÅµÄ¹¦ÄÜºÅ,FTM1_CH1
   \   00000004   0x2203             MOVS     R2,#+3
   \   00000006   0x210D             MOVS     R1,#+13
   \   00000008   0x....             LDR.N    R0,??DataTable5_4  ;; 0x400ff000
   \   0000000A   0x.... 0x....      BL       GPIO_SetPinMod
     29            FTM_initPWM(FTM1, 1, 5);                           // ÅäÖÃ PWM Ê±ÖÓºÍ·ÖÆµÊý
   \   0000000E   0x....             LDR.N    R4,??DataTable5_5  ;; 0x40039000
   \   00000010   0x2205             MOVS     R2,#+5
   \   00000012   0x2101             MOVS     R1,#+1
   \   00000014   0x4620             MOV      R0,R4
   \   00000016   0x.... 0x....      BL       FTM_initPWM
     30            FTM_enablePWMCh(FTM1, 1, 0, 30000, 0);             // PWM  ÆµÂÊ 600-->10KHZ
   \   0000001A   0x2000             MOVS     R0,#+0
   \   0000001C   0x9000             STR      R0,[SP, #+0]
   \   0000001E   0xF247 0x5330      MOVW     R3,#+30000
   \   00000022   0x2200             MOVS     R2,#+0
   \   00000024   0x2101             MOVS     R1,#+1
   \   00000026   0x4620             MOV      R0,R4
   \   00000028   0x.... 0x....      BL       FTM_enablePWMCh
     31            FTM_setPWMDty(FTM1, 1, 0);                         // ÅäÖÃ PWM Õ¼¿Õ±È
   \   0000002C   0x4620             MOV      R0,R4
   \   0000002E   0xB002             ADD      SP,SP,#+8
   \   00000030   0xE8BD 0x4010      POP      {R4,LR}
   \   00000034   0x2200             MOVS     R2,#+0
   \   00000036   0x2101             MOVS     R1,#+1
   \   00000038   0x.... 0x....      B.W      FTM_setPWMDty
     32          }
     33          
     34          /*******************************************************************************
     35          * º¯ÊýÃû³Æ£ºMotor_Init
     36          * Ãè    Êö£ºÉèÖÃµç»ú¿ØÖÆ PWM Ä£¿é                                         
     37          *******************************************************************************/

   \                                 In section .text, align 2, keep-with-next
     38          void Motor_Init(void) 
     39          { 
   \                     Motor_Init:
   \   00000000   0xB538             PUSH     {R3-R5,LR}
     40            FTM_initPWM(FTM0, 1, 5);
   \   00000002   0x....             LDR.N    R4,??DataTable5_6  ;; 0x40038000
   \   00000004   0x2205             MOVS     R2,#+5
   \   00000006   0x2101             MOVS     R1,#+1
   \   00000008   0x4620             MOV      R0,R4
   \   0000000A   0x.... 0x....      BL       FTM_initPWM
     41            
     42            GPIO_SetPinMod(PORTD, 4, 4);                       // ÅäÖÃÏàÓ¦Òý½ÅµÄ¹¦ÄÜºÅ,FTM2_CH0
   \   0000000E   0x....             LDR.N    R5,??DataTable5_2  ;; 0x400ff0c0
   \   00000010   0x2204             MOVS     R2,#+4
   \   00000012   0x2104             MOVS     R1,#+4
   \   00000014   0x4628             MOV      R0,R5
   \   00000016   0x.... 0x....      BL       GPIO_SetPinMod
     43            GPIO_SetPinMod(PORTD, 6, 4);                       // ÅäÖÃÏàÓ¦Òý½ÅµÄ¹¦ÄÜºÅ,FTM2_CH1
   \   0000001A   0x2204             MOVS     R2,#+4
   \   0000001C   0x2106             MOVS     R1,#+6
   \   0000001E   0x4628             MOV      R0,R5
   \   00000020   0x.... 0x....      BL       GPIO_SetPinMod
     44            
     45            FTM_enablePWMCh(FTM0, 4, 0, 500, 0);               // PWM  ÆµÂÊ 600-->10KHZ
   \   00000024   0x2000             MOVS     R0,#+0
   \   00000026   0x9000             STR      R0,[SP, #+0]
   \   00000028   0x4602             MOV      R2,R0
   \   0000002A   0xF44F 0x73FA      MOV      R3,#+500
   \   0000002E   0x2104             MOVS     R1,#+4
   \   00000030   0x4620             MOV      R0,R4
   \   00000032   0x.... 0x....      BL       FTM_enablePWMCh
     46            FTM_enablePWMCh(FTM0, 6, 0, 500, 0);
   \   00000036   0x2000             MOVS     R0,#+0
   \   00000038   0x9000             STR      R0,[SP, #+0]
   \   0000003A   0x4602             MOV      R2,R0
   \   0000003C   0xF44F 0x73FA      MOV      R3,#+500
   \   00000040   0x2106             MOVS     R1,#+6
   \   00000042   0x4620             MOV      R0,R4
   \   00000044   0x.... 0x....      BL       FTM_enablePWMCh
     47            
     48            FTM_setPWMDty(FTM0, 4, 0);                         // ÅäÖÃ PWM Õ¼¿Õ±È
   \   00000048   0x2200             MOVS     R2,#+0
   \   0000004A   0x2104             MOVS     R1,#+4
   \   0000004C   0x4620             MOV      R0,R4
   \   0000004E   0x.... 0x....      BL       FTM_setPWMDty
     49            FTM_setPWMDty(FTM0, 6, 0);
   \   00000052   0x4620             MOV      R0,R4
   \   00000054   0xE8BD 0x4038      POP      {R3-R5,LR}
   \   00000058   0x2200             MOVS     R2,#+0
   \   0000005A   0x2106             MOVS     R1,#+6
   \   0000005C   0x.... 0x....      B.W      FTM_setPWMDty
     50          }
     51          
     52          /*******************************************************************************
     53          * º¯ÊýÃû³Æ£ºBuzzer_Init
     54          * Ãè    Êö£ºÉèÖÃ·äÃùÆ÷Ä£¿é                                         
     55          *******************************************************************************/

   \                                 In section .text, align 2, keep-with-next
     56          void Buzzer_Init(void)
     57          {
   \                     Buzzer_Init:
   \   00000000   0xB510             PUSH     {R4,LR}
     58            GPIO_SetPinMod(PORTD, 2, 1);                   // ÅäÖÃÏàÓ¦Òý½ÅµÄ¹¦ÄÜºÅ
   \   00000002   0x....             LDR.N    R4,??DataTable5_2  ;; 0x400ff0c0
   \   00000004   0x2201             MOVS     R2,#+1
   \   00000006   0x2102             MOVS     R1,#+2
   \   00000008   0x4620             MOV      R0,R4
   \   0000000A   0x.... 0x....      BL       GPIO_SetPinMod
     59            GPIO_SetPinDir(PORTD, 2, 1);
   \   0000000E   0x2201             MOVS     R2,#+1
   \   00000010   0x2102             MOVS     R1,#+2
   \   00000012   0x4620             MOV      R0,R4
   \   00000014   0x.... 0x....      BL       GPIO_SetPinDir
     60            GPIO_SetPinDriveStrgth(PORTD, 2, 1);           //ÉèÖÃÇ¿Çý¶¯Ä£Ê½
   \   00000018   0x4620             MOV      R0,R4
   \   0000001A   0xE8BD 0x4010      POP      {R4,LR}
   \   0000001E   0x2201             MOVS     R2,#+1
   \   00000020   0x2102             MOVS     R1,#+2
   \   00000022   0x.... 0x....      B.W      GPIO_SetPinDriveStrgth
     61          }
     62          
     63          /*******************************************************************************
     64          * º¯ÊýÃû³Æ£ºBuzzer_Init
     65          * Ãè    Êö£ºÉèÖÃ·äÃùÆ÷Ä£¿é                                         
     66          *******************************************************************************/

   \                                 In section .text, align 2, keep-with-next
     67          void Switch_Init(void)
     68          {
   \                     Switch_Init:
   \   00000000   0xB510             PUSH     {R4,LR}
     69            GPIO_SetPinMod(PORTA, 12, 1);                   // ÅäÖÃÏàÓ¦Òý½ÅµÄ¹¦ÄÜºÅ
   \   00000002   0x....             LDR.N    R4,??DataTable5_4  ;; 0x400ff000
   \   00000004   0x2201             MOVS     R2,#+1
   \   00000006   0x210C             MOVS     R1,#+12
   \   00000008   0x4620             MOV      R0,R4
   \   0000000A   0x.... 0x....      BL       GPIO_SetPinMod
     70            GPIO_SetPinDir(PORTA, 12, 1);                   // ÅäÖÃÏàÓ¦Òý½ÅµÄ·½Ïò
   \   0000000E   0x2201             MOVS     R2,#+1
   \   00000010   0x210C             MOVS     R1,#+12
   \   00000012   0x4620             MOV      R0,R4
   \   00000014   0x.... 0x....      BL       GPIO_SetPinDir
     71            
     72            GPIO_SetPinMod(PORTA, 14, 1);                   // ÅäÖÃÏàÓ¦Òý½ÅµÄ¹¦ÄÜºÅ
   \   00000018   0x2201             MOVS     R2,#+1
   \   0000001A   0x210E             MOVS     R1,#+14
   \   0000001C   0x4620             MOV      R0,R4
   \   0000001E   0x.... 0x....      BL       GPIO_SetPinMod
     73            GPIO_SetPinDir(PORTA, 14, 1);                   // ÅäÖÃÏàÓ¦Òý½ÅµÄ·½Ïò
   \   00000022   0x2201             MOVS     R2,#+1
   \   00000024   0x210E             MOVS     R1,#+14
   \   00000026   0x4620             MOV      R0,R4
   \   00000028   0x.... 0x....      BL       GPIO_SetPinDir
     74            
     75            GPIO_SetPinMod(PORTA, 16, 1);                   // ÅäÖÃÏàÓ¦Òý½ÅµÄ¹¦ÄÜºÅ
   \   0000002C   0x2201             MOVS     R2,#+1
   \   0000002E   0x2110             MOVS     R1,#+16
   \   00000030   0x4620             MOV      R0,R4
   \   00000032   0x.... 0x....      BL       GPIO_SetPinMod
     76            GPIO_SetPinDir(PORTA, 16, 1);                   // ÅäÖÃÏàÓ¦Òý½ÅµÄ·½Ïò
   \   00000036   0x2201             MOVS     R2,#+1
   \   00000038   0x2110             MOVS     R1,#+16
   \   0000003A   0x4620             MOV      R0,R4
   \   0000003C   0x.... 0x....      BL       GPIO_SetPinDir
     77            
     78            GPIO_SetPinMod(PORTA, 5, 1);                   // ÅäÖÃÏàÓ¦Òý½ÅµÄ¹¦ÄÜºÅ
   \   00000040   0x2201             MOVS     R2,#+1
   \   00000042   0x2105             MOVS     R1,#+5
   \   00000044   0x4620             MOV      R0,R4
   \   00000046   0x.... 0x....      BL       GPIO_SetPinMod
     79            GPIO_SetPinDir(PORTA, 5, 1);                   // ÅäÖÃÏàÓ¦Òý½ÅµÄ·½Ïò
   \   0000004A   0x4620             MOV      R0,R4
   \   0000004C   0xE8BD 0x4010      POP      {R4,LR}
   \   00000050   0x2201             MOVS     R2,#+1
   \   00000052   0x2105             MOVS     R1,#+5
   \   00000054   0x.... 0x....      B.W      GPIO_SetPinDir
     80          
     81          }
     82          
     83          /*******************************************************************************
     84          * º¯ÊýÃû³Æ£ºUser_Init
     85          * Ãè    Êö£ºÓÃ»§¸½¼ÓµÄ³õÊ¼»¯´úÂë                                         
     86          *******************************************************************************/

   \                                 In section .text, align 2, keep-with-next
     87          void User_Init(void)
     88          {
   \                     User_Init:
   \   00000000   0xB580             PUSH     {R7,LR}
     89            //¶¨Ê±Æ÷ÖÐ¶ÏÉè¶¨
     90            PIT_setTime(0,1000,1,2);        //ÔÊÐíÖÐ¶Ï£¬ÓÃµ½ÊµÊ±Ê±ÖÓ¶¨Ê±ÖÐ¶Ï¡¢¶¨Ê±Æ÷Òç³öÖÐ¶ÏµÈÖÐ¶ÏµÄ»°£¬±ØÐëÔÊÐí×ÜÖÐ¶Ï 
   \   00000002   0x2302             MOVS     R3,#+2
   \   00000004   0x2201             MOVS     R2,#+1
   \   00000006   0xF44F 0x717A      MOV      R1,#+1000
   \   0000000A   0x2000             MOVS     R0,#+0
   \   0000000C   0x.... 0x....      BL       PIT_setTime
     91            //¶æ»ú´òµ½ÖÐÖ¸
     92            ServeAction_(dutyMid);
   \   00000010   0xE8BD 0x4008      POP      {R3,LR}
   \   00000014   0xF640 0x52AC      MOVW     R2,#+3500
   \   00000018   0x2101             MOVS     R1,#+1
   \   0000001A   0x....             LDR.N    R0,??DataTable5_5  ;; 0x40039000
   \   0000001C   0x.... 0x....      B.W      FTM_setPWMDty
     93            
     94          }
     95          
     96          /*******************************************************************************
     97          * º¯ÊýÃû³Æ: System_Init                          
     98          * Ãè    Êö£ºµ÷ÓÃ¸÷Ä£¿é³õÊ¼»¯º¯Êý 
     99          *******************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    100          void System_Init(void)
    101          {
   \                     System_Init:
   \   00000000   0xB580             PUSH     {R7,LR}
    102            CCD_Init();
   \   00000002   0x.... 0x....      BL       CCD_Init
    103            Servo_Init();
   \   00000006   0x.... 0x....      BL       Servo_Init
    104            Motor_Init();
   \   0000000A   0x.... 0x....      BL       Motor_Init
    105            Buzzer_Init();
   \   0000000E   0x.... 0x....      BL       Buzzer_Init
    106            Switch_Init();
   \   00000012   0x.... 0x....      BL       Switch_Init
    107            User_Init();
   \   00000016   0xE8BD 0x4001      POP      {R0,LR}
   \   0000001A   0x....             B.N      User_Init
    108            
    109          }

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5:
   \   00000000   0x400FF040         DC32     0x400ff040

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_1:
   \   00000000   0x400FF080         DC32     0x400ff080

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_2:
   \   00000000   0x400FF0C0         DC32     0x400ff0c0

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_3:
   \   00000000   0x4003B000         DC32     0x4003b000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_4:
   \   00000000   0x400FF000         DC32     0x400ff000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_5:
   \   00000000   0x40039000         DC32     0x40039000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_6:
   \   00000000   0x40038000         DC32     0x40038000

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
        8  Buzzer_Init
              8 -> GPIO_SetPinDir
              0 -> GPIO_SetPinDriveStrgth
              8 -> GPIO_SetPinMod
        8  CCD_Init
              8 -> ADC_ClockCtrl
              8 -> ADC_SetCFG1
              8 -> ADC_SetCFG2
              0 -> ADC_SetSC
              8 -> GPIO_SetPinDir
              8 -> GPIO_SetPinMod
       16  Motor_Init
             16 -> FTM_enablePWMCh
             16 -> FTM_initPWM
              0 -> FTM_setPWMDty
             16 -> FTM_setPWMDty
             16 -> GPIO_SetPinMod
       16  Servo_Init
             16 -> FTM_enablePWMCh
             16 -> FTM_initPWM
              0 -> FTM_setPWMDty
             16 -> GPIO_SetPinMod
        8  Switch_Init
              0 -> GPIO_SetPinDir
              8 -> GPIO_SetPinDir
              8 -> GPIO_SetPinMod
        8  System_Init
              8 -> Buzzer_Init
              8 -> CCD_Init
              8 -> Motor_Init
              8 -> Servo_Init
              8 -> Switch_Init
              0 -> User_Init
        8  User_Init
              0 -> FTM_setPWMDty
              8 -> PIT_setTime


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable5
       4  ??DataTable5_1
       4  ??DataTable5_2
       4  ??DataTable5_3
       4  ??DataTable5_4
       4  ??DataTable5_5
       4  ??DataTable5_6
      38  Buzzer_Init
     104  CCD_Init
      96  Motor_Init
      60  Servo_Init
      88  Switch_Init
      28  System_Init
      32  User_Init

 
 474 bytes in section .text
 
 474 bytes of CODE memory

Errors: none
Warnings: none
