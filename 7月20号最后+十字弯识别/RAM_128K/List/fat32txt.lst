###############################################################################
#                                                                             #
#                                                       30/Oct/2014  20:23:35 #
# IAR ANSI C/C++ Compiler V6.30.6.23336/W32 EVALUATION for ARM                #
# Copyright 1999-2012 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  thumb                                                    #
#    Endian       =  little                                                   #
#    Source file  =  E:\´´ÐÂ»î¶¯\ÖÇÄÜ³µ\µÚÊ®½ì\±¾³µ³ÌÐò\1029µ÷ÊÔ°æ\SD_System\ #
#                    fat32txt.c                                               #
#    Command line =  E:\´´ÐÂ»î¶¯\ÖÇÄÜ³µ\µÚÊ®½ì\±¾³µ³ÌÐò\1029µ÷ÊÔ°æ\SD_System\ #
#                    fat32txt.c -D IAR -lCN E:\´´ÐÂ»î¶¯\ÖÇÄÜ³µ\µÚÊ®½ì\±¾³µ³ÌÐ #
#                    ò\1029µ÷ÊÔ°æ\RAM_128K\List\ -lB                          #
#                    E:\´´ÐÂ»î¶¯\ÖÇÄÜ³µ\µÚÊ®½ì\±¾³µ³ÌÐò\1029µ÷ÊÔ°æ\RAM_128K\L #
#                    ist\ -o E:\´´ÐÂ»î¶¯\ÖÇÄÜ³µ\µÚÊ®½ì\±¾³µ³ÌÐò\1029µ÷ÊÔ°æ\RA #
#                    M_128K\Obj\ --debug --endian=little --cpu=Cortex-M4 -e   #
#                    --fpu=None --dlib_config "C:\Program Files\IAR           #
#                    Systems\Embedded Workbench 6.0                           #
#                    Evaluation\arm\INC\c\DLib_Config_Normal.h" -I            #
#                    E:\´´ÐÂ»î¶¯\ÖÇÄÜ³µ\µÚÊ®½ì\±¾³µ³ÌÐò\1029µ÷ÊÔ°æ\Library\CP #
#                    U\ -I E:\´´ÐÂ»î¶¯\ÖÇÄÜ³µ\µÚÊ®½ì\±¾³µ³ÌÐò\1029µ÷ÊÔ°æ\Libr #
#                    ary\Drivers\ADC\ -I E:\´´ÐÂ»î¶¯\ÖÇÄÜ³µ\µÚÊ®½ì\±¾³µ³ÌÐò\1 #
#                    029µ÷ÊÔ°æ\Library\Drivers\FTM\ -I                        #
#                    E:\´´ÐÂ»î¶¯\ÖÇÄÜ³µ\µÚÊ®½ì\±¾³µ³ÌÐò\1029µ÷ÊÔ°æ\Library\Dr #
#                    ivers\GPIO\ -I E:\´´ÐÂ»î¶¯\ÖÇÄÜ³µ\µÚÊ®½ì\±¾³µ³ÌÐò\1029µ÷ #
#                    ÊÔ°æ\Library\Drivers\PIT\ -I                             #
#                    E:\´´ÐÂ»î¶¯\ÖÇÄÜ³µ\µÚÊ®½ì\±¾³µ³ÌÐò\1029µ÷ÊÔ°æ\System_Ini #
#                    t\ -I E:\´´ÐÂ»î¶¯\ÖÇÄÜ³µ\µÚÊ®½ì\±¾³µ³ÌÐò\1029µ÷ÊÔ°æ\Sour #
#                    ce\ -I E:\´´ÐÂ»î¶¯\ÖÇÄÜ³µ\µÚÊ®½ì\±¾³µ³ÌÐò\1029µ÷ÊÔ°æ\OLE #
#                    D\ -I E:\´´ÐÂ»î¶¯\ÖÇÄÜ³µ\µÚÊ®½ì\±¾³µ³ÌÐò\1029µ÷ÊÔ°æ\SD_S #
#                    ystem\ -I E:\´´ÐÂ»î¶¯\ÖÇÄÜ³µ\µÚÊ®½ì\±¾³µ³ÌÐò\1029µ÷ÊÔ°æ\ #
#                    Simple_AD\ -I E:\´´ÐÂ»î¶¯\ÖÇÄÜ³µ\µÚÊ®½ì\±¾³µ³ÌÐò\1029µ÷Ê #
#                    Ô°æ\Delay\ -I E:\´´ÐÂ»î¶¯\ÖÇÄÜ³µ\µÚÊ®½ì\±¾³µ³ÌÐò\1029µ÷Ê #
#                    Ô°æ\Make_Desicion\ -Oh                                   #
#    List file    =  E:\´´ÐÂ»î¶¯\ÖÇÄÜ³µ\µÚÊ®½ì\±¾³µ³ÌÐò\1029µ÷ÊÔ°æ\RAM_128K\L #
#                    ist\fat32txt.lst                                         #
#    Object file  =  E:\´´ÐÂ»î¶¯\ÖÇÄÜ³µ\µÚÊ®½ì\±¾³µ³ÌÐò\1029µ÷ÊÔ°æ\RAM_128K\O #
#                    bj\fat32txt.o                                            #
#                                                                             #
#                                                                             #
###############################################################################

E:\´´ÐÂ»î¶¯\ÖÇÄÜ³µ\µÚÊ®½ì\±¾³µ³ÌÐò\1029µ÷ÊÔ°æ\SD_System\fat32txt.c
      1          /******************************************************************************
      2          
      3          * fat32txt.c
      4          
      5          * fat32ÎÄ¼þÏµÍ³²Ù×÷£¨Ð´µ¥¸ö´óµÄTXTÎÄ¼þ£© 
      6          
      7          * µÚÒ»×÷Õß£º  ¼Í³É   (µÚËÄ½ìÉãÏñÍ·)
      8            ÍêÉÆÓëÕûÀí£ºËïÎÄ½¡ (µÚÁù½ìÉãÏñÍ·)
      9          * °æ±¾£ºV1.15 (ÓëV1.13¡¢v1.14°æÏà¼æÈÝ,²»Ê¹ÄÜË«»º´æÊ±ÓëV1.10Ö®ºóµÄ°æ±¾Ïà¼æÈÝ)
     10          * °æ±¾¸üÐÂÊ±¼ä£º2012Äê1ÔÂ30ÈÕ
     11           
     12          ******************************************************************************/
     13          
     14          #include "./SD_System.h"
     15                                            
     16          #ifdef EN_SD                 
     17          

   \                                 In section .text, align 4, keep-with-next
     18          static byte_sd const dir_sd[32]=                             /************By Sword************/
   \                     dir_sd:
   \   00000000   0x41 0x2C          DC8 65, 44, 123, 140, 78, 227, 78, 10, 78, 77, 79, 15, 0, 49, 58, 103
   \              0x7B 0x8C    
   \              0x4E 0xE3    
   \              0x4E 0x0A    
   \              0x4E 0x4D    
   \              0x4F 0x0F    
   \              0x00 0x31    
   \              0x3A 0x67    
   \   00000010   0x2E 0x00          DC8 46, 0, 108, 0, 110, 0, 107, 0, 0, 0, 0, 0, 255, 255, 255, 255
   \              0x6C 0x00    
   \              0x6E 0x00    
   \              0x6B 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0xFF 0xFF    
   \              0xFF 0xFF    
     19          {
     20          0x41,0x2c,0x7b,0x8c,0x4e,0xe3,0x4e,0x0a,0x4e,0x4d,0x4f,0x0f,0x00,0x31,0x3a,0x67,
     21          0x2e,0x00,0x6c,0x00,0x6e,0x00,0x6b,0x00,0x00,0x00,0x00,0x00,0xff,0xff,0xff,0xff 
     22          };
     23          //¾í±êÊôÐÔ,µ±¼ì²âµ½¸ùÄ¿Â¼µÄµÚÒ»¸öµ¥ÔªÎª¿ÕÊ±Ð´Èë¸ÃÄÚÈÝ

   \                                 In section .text, align 4, keep-with-next
     24          static byte_sd const file_property[15]=
   \                     file_property:
   \   00000000   0x20 0x18          DC8 32, 24, 0, 0, 0, 100, 59, 100, 59, 0, 0, 0, 0, 100, 59, 0
   \              0x00 0x00    
   \              0x00 0x64    
   \              0x3B 0x64    
   \              0x3B 0x00    
   \              0x00 0x00    
   \              0x00 0x64    
   \              0x3B 0x00    
     25          {0x20,0x18,0x00,0x00,0x00,0x64,0x3b,0x64,0x3b,0x00,0x00,0x00,0x00,0x64,0x3b};
     26          //ÎÄ¼þÊôÐÔ
     27          static byte_sd  file_name[11]=                               /************By Sword************/
     28          {'C','A','R','-','-','0','0','0',0x54,0x58,0x54};
     29          //ÎÄ¼þÃû³Æ(º¬À©Õ¹Ãû)
     30          //×¢,Ó¢ÎÄ×ÖÄ¸±ØÐë´óÐ´£¬·ñÔòÎÄ¼þ´ò²»¿ª£¡£¡£¡
     31          
     32          static dword_sd add_sta,add_dir,add_f1,add_f2;               /************By Sword************/
     33          //Æô¶¯ÉÈÇø¡¢¸ùÄ¿Â¼¡¢fat1¡¢fat2µÄÊ×µØÖ·£¨³õÊ¼Öµ£©
     34          static dword_sd p_datasector;      //Êý¾ÝÉÈÇøÖ¸Õë            /************By Sword************/
     35          static word_sd  p_sector;  //ÉÈÇøÖ¸Õë                        /************By Sword************/

   \                                 In section .bss, align 4
   \   00000000                      DS8 4
     36          static dword_sd file_size=0;
     37          static byte_sd  sector_cluster; //Ã¿ÉÈÇø¶ÔÓ¦µÄ´ØÊý

   \                                 In section .bss, align 4
   \   00000000                      DS8 4
     38          static dword_sd sector_sta;     //Æô¶¯ÉÈÇøÉÈÇøÊý

   \                                 In section .bss, align 4
   \   00000000                      DS8 4
     39          static dword_sd sector_fat;     //fat±íÉÈÇøÊý
     40          static word_sd  cluster_number,ram_number;
     41          static word_sd  cnt_cluster;
     42          static word_sd  p_segcluster;     //´Ø×éµÄÖ¸Õë
     43          static byte_sd  num_segcluster;   //µ±Ç°´Ø×éµÄ³¤¶È
     44          static byte_sd  p_cluster;        //Ö¸Ïòµ±Ç°´Ø×éÖÐ´ØµÄÎ»ÖÃµÄÖ¸Õë

   \                                 In section .bss, align 4
     45          static byte_sd  DBUF[512];        //¶¨Òå512×Ö½Ú»º³åÇø
   \                     DBUF:
   \   00000000                      DS8 512

   \                                 In section .bss, align 4
     46          static dword_sd  next_cluster[SD_MAX_segment]; 
   \                     next_cluster:
   \   00000000                      DS8 160

   \                                 In section .data, align 4
   \                     file_name:
   \   00000000   0x43 0x41          DC8 67, 65, 82, 45, 45, 48, 48, 48, 84, 88, 84, 0
   \              0x52 0x2D    
   \              0x2D 0x30    
   \              0x30 0x30    
   \              0x54 0x58    
   \              0x54 0x00    
   \   0000000C   0x00               DC8 0
   \   0000000D   0x00               DC8 0
   \   0000000E   0x00               DC8 0
   \   0000000F   0x00               DC8 0
   \   00000010   0x00 0x00          DC8 0, 0
   \   00000012   0x00 0x00          DC8 0, 0
   \   00000014   0x00 0x00          DC8 0, 0
   \   00000016   0x00 0x00          DC8 0, 0
   \   00000018   0x00 0x00          DC8 0, 0
   \   0000001A   0x00 0x00          DC8 0, 0
   \   0000001C   0x00 0x00          DC8 0, 0, 0, 0
   \              0x00 0x00    
   \   00000020   0x00 0x00          DC8 0, 0, 0, 0
   \              0x00 0x00    
   \   00000024   0x00 0x00          DC8 0, 0, 0, 0
   \              0x00 0x00    
   \   00000028   0x00 0x00          DC8 0, 0, 0, 0
   \              0x00 0x00    
   \   0000002C   0x00 0x00          DC8 0, 0, 0, 0
   \              0x00 0x00    
   \   00000030   0x00 0x00          DC8 0, 0, 0, 0
   \              0x00 0x00    
   \   00000034   0x00 0x00          DC8 0, 0, 0, 0
   \              0x00 0x00    
   \   00000038   0x00 0x00          DC8 0, 0, 0, 0
   \              0x00 0x00    
   \   0000003C   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   0000004C   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   0000005C   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   0000006C   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   0000007C   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   0000008C   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   0000009C   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000000AC   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000000BC   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000000CC   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000000DC   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000000EC   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000000FC   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   0000010C   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   0000011C   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   0000012C   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   0000013C   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   0000014C   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   0000015C   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   0000016C   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   0000017C   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   0000018C   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   0000019C   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000001AC   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000001BC   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000001CC   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000001DC   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000001EC   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000001FC   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   0000020C   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   0000021C   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   0000022C   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
     47          //±ê¼ÇÏÂÒ»¸ö´Ø×é:µÍ24Î»±íÊ¾¸Ã´Ø×éµÄÆðÊ¼µØÖ·,¸ß8Î»±íÊ¾´ØµÄ¸öÊý   
     48          /************By Sword************/ 
     49          
     50          
     51          #ifdef EN_SDbuf   //Ë«»º³åÄ£Ê½
     52          
     53          static byte_sd  DBUF2[512];   //SD¿¨µÚ¶þ»º³åÇø
     54          static dword_sd Sector_SDbuf; //µÚ¶þ»º´æÖÐÊý¾Ý¶ÔÓ¦µÄÄ¿µÄÉÈÇø
     55          static byte_sd  Stat_SDbuf;   //µÚ¶þ»º´æ×´Ì¬±êÖ¾(=0±íÊ¾Îª¿Õ)
     56          
     57          static byte_sd *pBuf_Now,*pBuf_2; //µ±Ç°»º´æÓëµÚ¶þ»º´æÖ¸Õë
     58          /*
     59          ×¢Òâ£º½«Êý¾Ý´æÈëµÚ¶þ»º³åµÄ¹ý³Ì²¢²»ÊÇ½«Êý¾Ý¸´ÖÆ¹ýÈ¥,
     60          ¶øÊÇ½»»»Á½¸ö»º³åÇøµÄÖ¸Õë,´Ó¶ø¿ÉÒÔ´ó´ó¼Ó¿ì³ÌÐòÖ´ÐÐËÙ¶È
     61          */
     62          
     63          #ifdef EN_Cnt_SDbuf
     64          word_sd Cnt_SDbufS1,Cnt_SDbufS2,Cnt_SDbufS3,Cnt_SDbufS4,Cnt_SDbufS5;
     65          /*»º´æÊ¹ÓÃ×´¿öÍ³¼Æ±äÁ¿*/
     66          /*
     67          Cnt_SDbufS1:Õý³£Çé¿öµÄÊýÁ¿(SD¿¨·ÇÃ¦,»º´æÎª¿Õ)
     68          Cnt_SDbufS2:SD¿¨·ÇÃ¦,»º´æ·Ç¿Õ,ÇÒÐ´Èë»º´æºó¿É¼ÌÐøÐ´ÈëÐÂÊý¾Ý
     69          Cnt_SDbufS3:SD¿¨·ÇÃ¦,»º´æ·Ç¿Õ,µ«Ð´Èë»º´æºóµÈ´ý³¬Ê±,²»ÄÜ¼ÌÐøÐ´ÈëÐÂÊý¾Ý
     70          Cnt_SDbufS4:SD¿¨Ã¦,µ«»º´æÎª¿Õ,¿ÉÒÔ½«ÐÂÊý¾Ý´æÈë»º´æ
     71          Cnt_SDbufS5:SD¿¨Ã¦,ÇÒ»º´æ·Ç¿Õ,Ö»ÄÜ¸ÉµÈ
     72          */
     73          #endif
     74          
     75          /***********************************************************
     76          * function:SD_WriteBlock_UserBuf
     77          * description:sd¿¨Ë«»º³å¶ÁÐ´º¯Êý
     78          ************************************************************/

   \                                 In section .text, align 2, keep-with-next
     79          static byte_sd SD_WriteBlock_UserBuf(void)
     80          {
   \                     SD_WriteBlock_UserBuf:
   \   00000000   0xB570             PUSH     {R4-R6,LR}
     81            byte_sd r1=0,retry;
   \   00000002   0x2400             MOVS     R4,#+0
     82            byte_sd *pTmp;
     83            
     84            Wait_SDRdy(SD_SHORT_Wait);
   \   00000004   0xF241 0x3088      MOVW     R0,#+5000
   \   00000008   0x.... 0x....      BL       Wait_SDRdy
     85            if(Flag_SDRdy == 0)
   \   0000000C   0x.... 0x....      LDR.W    R5,??DataTable14
   \   00000010   0x.... 0x....      LDR.W    R6,??DataTable14_1
   \   00000014   0x7BE8             LDRB     R0,[R5, #+15]
   \   00000016   0x7831             LDRB     R1,[R6, #+0]
   \   00000018   0xB9E9             CBNZ.N   R1,??SD_WriteBlock_UserBuf_0
     86            { //SD¿¨Ã¦
     87              if(Stat_SDbuf == 0)
   \   0000001A   0xB940             CBNZ.N   R0,??SD_WriteBlock_UserBuf_1
     88              { //»º´æÎª¿Õ
     89              //½«Êý¾ÝÏÈ´æÈë»º´æ(ËùÎ½´æÈë¾ÍÊÇ½»»»Á½¸ö»º´æµÄÖ¸Õë)
     90                pTmp=pBuf_Now;
   \   0000001C   0x6B68             LDR      R0,[R5, #+52]
     91                pBuf_Now=pBuf_2;
   \   0000001E   0x6BA9             LDR      R1,[R5, #+56]
     92                pBuf_2=pTmp;
   \   00000020   0x63A8             STR      R0,[R5, #+56]
     93                Sector_SDbuf=p_datasector;
   \   00000022   0x6AE8             LDR      R0,[R5, #+44]
   \   00000024   0x6369             STR      R1,[R5, #+52]
   \   00000026   0x6328             STR      R0,[R5, #+48]
     94                Stat_SDbuf=1; //ÖÃÎ»»º´æ±êÖ¾
   \   00000028   0x2001             MOVS     R0,#+1
   \   0000002A   0x73E8             STRB     R0,[R5, #+15]
   \   0000002C   0xE041             B.N      ??SD_WriteBlock_UserBuf_2
     95          #ifdef EN_Cnt_SDbuf      
     96                Cnt_SDbufS4++;
     97          #endif
     98              }
     99              else
    100              { //»º´æ·Ç¿Õ(×îÎÞÓïµÄÇé¿ö,Ä¿Ç°µÄËã·¨Ã»ÓÐ°ì·¨ÓÅ»¯)
    101              //»º´æ·Ç¿Õ,Ö»ÄÜ¸ÉµÈ  
    102                Wait_SDRdy(SD_LONG_Wait);
   \                     ??SD_WriteBlock_UserBuf_1:
   \   0000002E   0x.... 0x....      LDR.W    R0,??DataTable14_2  ;; 0x1e8480
   \   00000032   0x.... 0x....      BL       Wait_SDRdy
    103                retry=0;
    104                do //½«»º´æÖÐ´æµÄÊý¾ÝÐ´ÈëSD¿¨
    105                {  
    106                  r1=sd_writesingleblock(pBuf_2,Sector_SDbuf);
   \   00000036   0x6B29             LDR      R1,[R5, #+48]
   \   00000038   0x6BA8             LDR      R0,[R5, #+56]
   \   0000003A   0x.... 0x....      BL       sd_writesingleblock
   \   0000003E   0x0004             MOVS     R4,R0
    107                } while(r1!=0 && (++retry)<3);
   \   00000040   0xD01F             BEQ.N    ??SD_WriteBlock_UserBuf_3
   \   00000042   0x6B29             LDR      R1,[R5, #+48]
   \   00000044   0x6BA8             LDR      R0,[R5, #+56]
   \   00000046   0x.... 0x....      BL       sd_writesingleblock
   \   0000004A   0x6B29             LDR      R1,[R5, #+48]
   \   0000004C   0x6BA8             LDR      R0,[R5, #+56]
   \   0000004E   0x.... 0x....      BL       sd_writesingleblock
   \   00000052   0x4604             MOV      R4,R0
   \   00000054   0xE015             B.N      ??SD_WriteBlock_UserBuf_3
    108              //½«Êý¾ÝÔÙ´æÈë»º´æ
    109                pTmp=pBuf_Now;
    110                pBuf_Now=pBuf_2;
    111                pBuf_2=pTmp;
    112                Sector_SDbuf=p_datasector;
    113          #ifdef EN_Cnt_SDbuf   
    114                Cnt_SDbufS5++;
    115          #endif      
    116              }
    117            }
    118            else
    119            { //SD¿¨·ÇÃ¦
    120              if(Stat_SDbuf == 0)
   \                     ??SD_WriteBlock_UserBuf_0:
   \   00000056   0xB1E8             CBZ.N    R0,??SD_WriteBlock_UserBuf_4
    121              { //»º´æÎª¿Õ(×îÀíÏëµÄ×´¿ö)
    122                retry=0;
    123                do //½«Êý¾ÝÐ´ÈëSD¿¨
    124                {  
    125                  r1=sd_writesingleblock(pBuf_Now,p_datasector);
    126                } while(r1!=0 && (++retry)<3);
    127          #ifdef EN_Cnt_SDbuf      
    128                Cnt_SDbufS1++;
    129          #endif
    130              }
    131              else
    132              { //»º´æ·Ç¿Õ
    133                retry=0;
    134                do //½«»º´æÖÐ´æµÄÊý¾ÝÐ´ÈëSD¿¨
    135                {  
    136                  r1=sd_writesingleblock(pBuf_2,Sector_SDbuf);
   \   00000058   0x6B29             LDR      R1,[R5, #+48]
   \   0000005A   0x6BA8             LDR      R0,[R5, #+56]
   \   0000005C   0x.... 0x....      BL       sd_writesingleblock
   \   00000060   0x0004             MOVS     R4,R0
    137                } while(r1!=0 && (++retry)<3);
   \   00000062   0xD008             BEQ.N    ??SD_WriteBlock_UserBuf_5
   \   00000064   0x6B29             LDR      R1,[R5, #+48]
   \   00000066   0x6BA8             LDR      R0,[R5, #+56]
   \   00000068   0x.... 0x....      BL       sd_writesingleblock
   \   0000006C   0x6B29             LDR      R1,[R5, #+48]
   \   0000006E   0x6BA8             LDR      R0,[R5, #+56]
   \   00000070   0x.... 0x....      BL       sd_writesingleblock
   \   00000074   0x4604             MOV      R4,R0
    138               //Ð´Íê»º´æÖÐÊý¾Ý½øÐÐ¼«¶ÌÊ±¼äµÄµÈ´ý,¸ù¾ÝµÈ´ýºóµÄ½á¹ûÅÐ¶¨ÊÇ·ñÐ´ÈëÐÂÊý¾Ý
    139                Wait_SDRdy(SD_VST_Wait);
   \                     ??SD_WriteBlock_UserBuf_5:
   \   00000076   0xF44F 0x607A      MOV      R0,#+4000
   \   0000007A   0x.... 0x....      BL       Wait_SDRdy
    140                if(Flag_SDRdy == 0)
   \   0000007E   0x7830             LDRB     R0,[R6, #+0]
   \   00000080   0xB930             CBNZ.N   R0,??SD_WriteBlock_UserBuf_6
    141                { //SD¿¨Ã¦
    142                //½«Êý¾ÝÔÙ´æÈë»º´æ
    143                  pTmp=pBuf_Now;
   \                     ??SD_WriteBlock_UserBuf_3:
   \   00000082   0x6B68             LDR      R0,[R5, #+52]
    144                  pBuf_Now=pBuf_2;
   \   00000084   0x6BA9             LDR      R1,[R5, #+56]
    145                  pBuf_2=pTmp;
   \   00000086   0x63A8             STR      R0,[R5, #+56]
    146                  Sector_SDbuf=p_datasector;
   \   00000088   0x6AE8             LDR      R0,[R5, #+44]
   \   0000008A   0x6369             STR      R1,[R5, #+52]
   \   0000008C   0x6328             STR      R0,[R5, #+48]
   \   0000008E   0xE010             B.N      ??SD_WriteBlock_UserBuf_2
    147          #ifdef EN_Cnt_SDbuf        
    148                  Cnt_SDbufS3++;
    149          #endif
    150                }
    151                else
    152                { //SD¿¨·ÇÃ¦
    153                //»º´æÖÕÓÚ½âÍÑÁË,½øÈëÕý³£Çé¿ö
    154                  Stat_SDbuf=0; //Çå³ý»º´æ±êÖ¾
   \                     ??SD_WriteBlock_UserBuf_6:
   \   00000090   0x2000             MOVS     R0,#+0
   \   00000092   0x73E8             STRB     R0,[R5, #+15]
    155                  retry=0;
    156                  do //½«Êý¾ÝÐ´ÈëSD¿¨
    157                  {  
    158                    r1=sd_writesingleblock(pBuf_Now,p_datasector);
   \                     ??SD_WriteBlock_UserBuf_4:
   \   00000094   0x6AE9             LDR      R1,[R5, #+44]
   \   00000096   0x6B68             LDR      R0,[R5, #+52]
   \   00000098   0x.... 0x....      BL       sd_writesingleblock
   \   0000009C   0x0004             MOVS     R4,R0
    159                  } while(r1!=0 && (++retry)<3);
   \   0000009E   0xD008             BEQ.N    ??SD_WriteBlock_UserBuf_2
   \   000000A0   0x6AE9             LDR      R1,[R5, #+44]
   \   000000A2   0x6B68             LDR      R0,[R5, #+52]
   \   000000A4   0x.... 0x....      BL       sd_writesingleblock
   \   000000A8   0x6AE9             LDR      R1,[R5, #+44]
   \   000000AA   0x6B68             LDR      R0,[R5, #+52]
   \   000000AC   0x.... 0x....      BL       sd_writesingleblock
   \   000000B0   0x4604             MOV      R4,R0
    160          #ifdef EN_Cnt_SDbuf        
    161                  Cnt_SDbufS2++;
    162          #endif
    163                }
    164              }
    165            }
    166            
    167            return r1;
   \                     ??SD_WriteBlock_UserBuf_2:
   \   000000B2   0x4620             MOV      R0,R4
   \   000000B4   0xBD70             POP      {R4-R6,PC}       ;; return
    168          }
    169          /***********************************************************
    170          * function:SD_ClrBuf
    171          * description:Çå¿Õ»º´æÖÐÊý¾Ý(½«»º´æÖÐÊý¾ÝÐ´ÈëSD¿¨)
    172          ************************************************************/
    173          static void SD_ClrBuf(void)
    174          {
    175            byte_sd r1=0,retry=0;
    176            
    177            if(Stat_SDbuf != 0)
    178            {
    179              Wait_SDRdy(SD_LONG_Wait);
    180              do //½«»º´æÖÐ´æµÄÊý¾ÝÐ´ÈëSD¿¨
    181              {  
    182                r1=sd_writesingleblock(pBuf_2,Sector_SDbuf);
    183              } while(r1!=0 && (++retry)<5);
    184              Stat_SDbuf=0; //Çå³ý»º´æ±êÖ¾
    185            }
    186          }
    187          
    188          #endif
    189          /*********************************************************/
    190          //function:write_dir
    191          //description:Ð´¸ùÄ¿Â¼º¯Êý
    192          //ÐÞ¸Ä£º Sword
    193          /***********************************************************/

   \                                 In section .text, align 4, keep-with-next
    194          void write_dir(void)
    195          {
   \                     write_dir:
   \   00000000   0xE92D 0x4FF8      PUSH     {R3-R11,LR}
    196            word_sd i=0,j,k,flag,retry=0;
   \   00000004   0x2500             MOVS     R5,#+0
    197            word_sd h_add,l_add,sum;
    198            word_sd addr=0,addh=0,max=0;
   \   00000006   0x46A9             MOV      R9,R5
   \   00000008   0x46CA             MOV      R10,R9
   \   0000000A   0x46CB             MOV      R11,R9
   \   0000000C   0x.... 0x....      LDR.W    R7,??DataTable14_3  ;; 0x4005200c
   \   00000010   0x.... 0x....      LDR.W    R8,??DataTable14_4
   \   00000014   0x.... 0x....      LDR.W    R4,??DataTable14
    199            byte_sd r1;
    200            
    201            do     //¿´¸ùÄ¿Â¼µÄµÚÒ»¸öµ¥Ôª(¾í±ê)ÊÇ·ñÎª¿Õ
    202             {
    203               r1=sd_readsingleblock(DBUF,add_dir);
   \                     ??write_dir_0:
   \   00000018   0x6A21             LDR      R1,[R4, #+32]
   \   0000001A   0x4640             MOV      R0,R8
   \   0000001C   0x.... 0x....      BL       sd_readsingleblock
    204               C_WDOG();
   \   00000020   0xB672             CPSID i          
   \   00000022   0xF24A 0x6102      MOVW     R1,#+42498
   \   00000026   0x8039             STRH     R1,[R7, #+0]
   \   00000028   0xF24B 0x4180      MOVW     R1,#+46208
   \   0000002C   0x8039             STRH     R1,[R7, #+0]
   \   0000002E   0x.... 0x....      LDR.W    R1,??DataTable14_5
   \   00000032   0x7809             LDRB     R1,[R1, #+0]
   \   00000034   0xB101             CBZ.N    R1,??write_dir_1
   \   00000036   0xB662             CPSIE i          
    205               retry++;
   \                     ??write_dir_1:
   \   00000038   0x1C69             ADDS     R1,R5,#+1
    206             } while(r1!=0x00&&retry<100);
   \   0000003A   0xB110             CBZ.N    R0,??write_dir_2
   \   0000003C   0xB28D             UXTH     R5,R1
   \   0000003E   0x2D64             CMP      R5,#+100
   \   00000040   0xD3EA             BCC.N    ??write_dir_0
    207            retry=0;
   \                     ??write_dir_2:
   \   00000042   0x2600             MOVS     R6,#+0
    208            
    209            if(DBUF[0]==0x00)   //Èç¹û¸ùÄ¿Â¼µÚÒ»¸öµ¥ÔªÎª¿ÕÔòÐ´Èë¾í±ê
   \   00000044   0xF898 0x0000      LDRB     R0,[R8, #+0]
   \   00000048   0xB9E8             CBNZ.N   R0,??write_dir_3
    210             {
    211               for(i=0;i<32;i++) DBUF[i]=dir_sd[i];
   \   0000004A   0x2220             MOVS     R2,#+32
   \   0000004C   0x.... 0x....      ADR.W    R1,dir_sd
   \   00000050   0x4640             MOV      R0,R8
   \   00000052   0x.... 0x....      BL       __aeabi_memcpy4
   \   00000056   0xE00C             B.N      ??write_dir_4
    212               while(sd_writesingleblock(DBUF,add_dir)&&retry<1000) //Ð´¾í±ê
    213                {                            
    214                  C_WDOG(); //Çå¿ªÃÅ¹· 
   \                     ??write_dir_5:
   \   00000058   0xB672             CPSID i          
   \   0000005A   0xF24A 0x6002      MOVW     R0,#+42498
   \   0000005E   0x8038             STRH     R0,[R7, #+0]
   \   00000060   0xF24B 0x4080      MOVW     R0,#+46208
   \   00000064   0x8038             STRH     R0,[R7, #+0]
   \   00000066   0x.... 0x....      LDR.W    R0,??DataTable14_5
   \   0000006A   0x7800             LDRB     R0,[R0, #+0]
   \   0000006C   0xB100             CBZ.N    R0,??write_dir_6
   \   0000006E   0xB662             CPSIE i          
    215                  retry++;
   \                     ??write_dir_6:
   \   00000070   0x1C76             ADDS     R6,R6,#+1
    216                } 
   \                     ??write_dir_4:
   \   00000072   0x6A21             LDR      R1,[R4, #+32]
   \   00000074   0x4640             MOV      R0,R8
   \   00000076   0x.... 0x....      BL       sd_writesingleblock
   \   0000007A   0xB120             CBZ.N    R0,??write_dir_3
   \   0000007C   0xF44F 0x707A      MOV      R0,#+1000
   \   00000080   0xB2B6             UXTH     R6,R6
   \   00000082   0x4286             CMP      R6,R0
   \   00000084   0xD3E8             BCC.N    ??write_dir_5
    217             }
    218            
    219            for(i=0;i<sector_cluster;i++)
   \                     ??write_dir_3:
   \   00000086   0x7B20             LDRB     R0,[R4, #+12]
   \   00000088   0x2500             MOVS     R5,#+0
   \   0000008A   0x2800             CMP      R0,#+0
   \   0000008C   0xD06E             BEQ.N    ??write_dir_7
   \                     ??write_dir_8:
   \   0000008E   0x6A20             LDR      R0,[R4, #+32]
   \   00000090   0xFA10 0xF185      UXTAH    R1,R0,R5
   \   00000094   0x4640             MOV      R0,R8
    220             { 
    221               do     //ÏÈ¶Á¸ùÄ¿Â¼ÔÙ¸ÄÐ´,´Ó¶ø±£Ö¤²»»á¸ü¸ÄÔ­À´µÄÎÄ¼þ
    222                {
    223                  r1=sd_readsingleblock(DBUF,add_dir+i);
   \   00000096   0x.... 0x....      BL       sd_readsingleblock
    224                  C_WDOG();
   \   0000009A   0xB672             CPSID i          
   \   0000009C   0xF24A 0x6102      MOVW     R1,#+42498
   \   000000A0   0x8039             STRH     R1,[R7, #+0]
   \   000000A2   0xF24B 0x4180      MOVW     R1,#+46208
   \   000000A6   0x8039             STRH     R1,[R7, #+0]
   \   000000A8   0x.... 0x....      LDR.W    R1,??DataTable14_5
   \   000000AC   0x7809             LDRB     R1,[R1, #+0]
   \   000000AE   0xB101             CBZ.N    R1,??write_dir_9
   \   000000B0   0xB662             CPSIE i          
    225                  retry++;
   \                     ??write_dir_9:
   \   000000B2   0x1C71             ADDS     R1,R6,#+1
    226                } while(r1!=0x00&&retry<100);
   \   000000B4   0xB110             CBZ.N    R0,??write_dir_10
   \   000000B6   0xB28E             UXTH     R6,R1
   \   000000B8   0x2E64             CMP      R6,#+100
   \   000000BA   0xD3E8             BCC.N    ??write_dir_8
    227               retry=0;
   \                     ??write_dir_10:
   \   000000BC   0x2600             MOVS     R6,#+0
    228              
    229               for(k=0;k<512;k+=32)
   \   000000BE   0x2000             MOVS     R0,#+0
   \   000000C0   0x4641             MOV      R1,R8
    230                {
    231                 
    232                  if(addr==0&&addh==0&&DBUF[k]==0x00||DBUF[k]==0xE5) 
   \                     ??write_dir_11:
   \   000000C2   0x780B             LDRB     R3,[R1, #+0]
   \   000000C4   0xEA5A 0x0209      ORRS     R2,R10,R9
   \   000000C8   0xBF0C             ITE      EQ 
   \   000000CA   0x2B00             CMPEQ    R3,#+0
   \   000000CC   0x2BE5             CMPNE    R3,#+229
   \   000000CE   0xD101             BNE.N    ??write_dir_12
    233                   { addh=i;addr=k; }  //Ñ°ÕÒÒ»¸ö¿Õ°×µÄ32×Ö½ÚÇø¼ä
   \   000000D0   0x46AA             MOV      R10,R5
   \   000000D2   0x4681             MOV      R9,R0
    234                 
    235                  for(j=0,flag=1;j<5;j++)  //¾ö²ßÎÄ¼þÐòºÅ
    236                    if(DBUF[k+j]!=file_name[j]) flag=0;
   \                     ??write_dir_12:
   \   000000D4   0xF894 0xC000      LDRB     R12,[R4, #+0]
   \   000000D8   0x2201             MOVS     R2,#+1
   \   000000DA   0x4563             CMP      R3,R12
   \   000000DC   0xBF18             IT       NE 
   \   000000DE   0x2200             MOVNE    R2,#+0
   \   000000E0   0x784B             LDRB     R3,[R1, #+1]
   \   000000E2   0xF894 0xC001      LDRB     R12,[R4, #+1]
   \   000000E6   0x4563             CMP      R3,R12
   \   000000E8   0xBF18             IT       NE 
   \   000000EA   0x2200             MOVNE    R2,#+0
   \   000000EC   0x788B             LDRB     R3,[R1, #+2]
   \   000000EE   0xF894 0xC002      LDRB     R12,[R4, #+2]
   \   000000F2   0x4563             CMP      R3,R12
   \   000000F4   0xBF18             IT       NE 
   \   000000F6   0x2200             MOVNE    R2,#+0
   \   000000F8   0x78CB             LDRB     R3,[R1, #+3]
   \   000000FA   0xF894 0xC003      LDRB     R12,[R4, #+3]
   \   000000FE   0x4563             CMP      R3,R12
   \   00000100   0xBF18             IT       NE 
   \   00000102   0x2200             MOVNE    R2,#+0
   \   00000104   0x790B             LDRB     R3,[R1, #+4]
   \   00000106   0xF894 0xC004      LDRB     R12,[R4, #+4]
   \   0000010A   0x4563             CMP      R3,R12
   \   0000010C   0xD123             BNE.N    ??write_dir_13
    237                  if(flag)
   \   0000010E   0xB312             CBZ.N    R2,??write_dir_13
    238                   {
    239                     if(DBUF[k+5]>'9'||DBUF[k+5]<'0') continue;
   \   00000110   0x794A             LDRB     R2,[R1, #+5]
   \   00000112   0xF1A2 0x0330      SUB      R3,R2,#+48
   \   00000116   0x2B0A             CMP      R3,#+10
   \   00000118   0xBF3E             ITTT     CC 
   \   0000011A   0x798B             LDRBCC   R3,[R1, #+6]
   \   0000011C   0xF1A3 0x0C30      SUBCC    R12,R3,#+48
   \   00000120   0xF1BC 0x0F0A      CMPCC    R12,#+10
    240                     if(DBUF[k+6]>'9'||DBUF[k+6]<'0') continue;
   \   00000124   0xBF3E             ITTT     CC 
   \   00000126   0xF891 0xC007      LDRBCC   R12,[R1, #+7]
   \   0000012A   0xF1AC 0x0E30      SUBCC    LR,R12,#+48
   \   0000012E   0xF1BE 0x0F0A      CMPCC    LR,#+10
    241                     if(DBUF[k+7]>'9'||DBUF[k+7]<'0') continue;
   \   00000132   0xD210             BCS.N    ??write_dir_13
    242                     sum=(DBUF[k+7]-'0')+(DBUF[k+6]-'0')*10+(DBUF[k+5]-'0')*100;
   \   00000134   0xF04F 0x0E64      MOV      LR,#+100
   \   00000138   0xFB1E 0xF202      SMULBB   R2,LR,R2
   \   0000013C   0xEB03 0x0383      ADD      R3,R3,R3, LSL #+2
   \   00000140   0xFA52 0xF28C      UXTAB    R2,R2,R12
   \   00000144   0xEB02 0x0243      ADD      R2,R2,R3, LSL #+1
   \   00000148   0xF241 0x43D0      MOVW     R3,#+5328
   \   0000014C   0x1AD2             SUBS     R2,R2,R3
    243                     if(sum>max) max=sum;
   \   0000014E   0xB292             UXTH     R2,R2
   \   00000150   0x4593             CMP      R11,R2
   \   00000152   0xBFB8             IT       LT 
   \   00000154   0x4693             MOVLT    R11,R2
    244                   }
    245                }
   \                     ??write_dir_13:
   \   00000156   0x3020             ADDS     R0,R0,#+32
   \   00000158   0x3120             ADDS     R1,R1,#+32
   \   0000015A   0xF44F 0x7200      MOV      R2,#+512
   \   0000015E   0x4290             CMP      R0,R2
   \   00000160   0xDBAF             BLT.N    ??write_dir_11
    246             }
   \   00000162   0x7B20             LDRB     R0,[R4, #+12]
   \   00000164   0x1C69             ADDS     R1,R5,#+1
   \   00000166   0xB28D             UXTH     R5,R1
   \   00000168   0x4285             CMP      R5,R0
   \   0000016A   0xD390             BCC.N    ??write_dir_8
    247            
    248            if(addh==0&&addr==0)
   \                     ??write_dir_7:
   \   0000016C   0xEA59 0x000A      ORRS     R0,R9,R10
   \   00000170   0xBF04             ITT      EQ 
   \   00000172   0xE8BD 0x4FF1      POPEQ    {R0,R4-R11,LR}
   \   00000176   0x.... 0x....      BEQ.W    CloseSD
    249             {     //Ã»ÓÐÔÚ¸ùÄ¿Â¼ÕÒµ½¿ÕÏÐÎ»ÖÃ
    250               CloseSD();
    251               return;
    252             }
    253            
    254            do     //ÏÈ¶Á¸ùÄ¿Â¼ÔÙ¸ÄÐ´,´Ó¶ø±£Ö¤²»»á¸ü¸ÄÔ­À´µÄÎÄ¼þ
    255             {
    256               r1=sd_readsingleblock(DBUF,add_dir+addh);
   \                     ??write_dir_14:
   \   0000017A   0x6A20             LDR      R0,[R4, #+32]
   \   0000017C   0xEB0A 0x0100      ADD      R1,R10,R0
   \   00000180   0x4640             MOV      R0,R8
   \   00000182   0x.... 0x....      BL       sd_readsingleblock
    257               C_WDOG();
   \   00000186   0xB672             CPSID i          
   \   00000188   0xF24A 0x6102      MOVW     R1,#+42498
   \   0000018C   0x8039             STRH     R1,[R7, #+0]
   \   0000018E   0xF24B 0x4180      MOVW     R1,#+46208
   \   00000192   0x8039             STRH     R1,[R7, #+0]
   \   00000194   0x.... 0x....      LDR.W    R1,??DataTable14_5
   \   00000198   0x7809             LDRB     R1,[R1, #+0]
   \   0000019A   0xB101             CBZ.N    R1,??write_dir_15
   \   0000019C   0xB662             CPSIE i          
    258               retry++;
   \                     ??write_dir_15:
   \   0000019E   0x1C71             ADDS     R1,R6,#+1
    259             } while(r1!=0x00&&retry<100);
   \   000001A0   0xB110             CBZ.N    R0,??write_dir_16
   \   000001A2   0xB28E             UXTH     R6,R1
   \   000001A4   0x2E64             CMP      R6,#+100
   \   000001A6   0xD3E8             BCC.N    ??write_dir_14
    260            retry=0; 
    261             
    262            file_name[7]=(max+1)%10+'0';   //Éú³ÉÎÄ¼þÃû
   \                     ??write_dir_16:
   \   000001A8   0xF10B 0x0001      ADD      R0,R11,#+1
   \   000001AC   0x210A             MOVS     R1,#+10
   \   000001AE   0xFB90 0xF2F1      SDIV     R2,R0,R1
   \   000001B2   0xEB02 0x0582      ADD      R5,R2,R2, LSL #+2
   \   000001B6   0xEBA0 0x0345      SUB      R3,R0,R5, LSL #+1
   \   000001BA   0x3330             ADDS     R3,R3,#+48
   \   000001BC   0x71E3             STRB     R3,[R4, #+7]
    263            file_name[6]=(max+1)/10%10+'0'; 
   \   000001BE   0xFB92 0xF1F1      SDIV     R1,R2,R1
   \   000001C2   0xEB01 0x0381      ADD      R3,R1,R1, LSL #+2
   \   000001C6   0xEBA2 0x0143      SUB      R1,R2,R3, LSL #+1
   \   000001CA   0x3130             ADDS     R1,R1,#+48
   \   000001CC   0x71A1             STRB     R1,[R4, #+6]
    264            file_name[5]=(max+1)/100+'0';
   \   000001CE   0x2164             MOVS     R1,#+100
   \   000001D0   0xFB90 0xF0F1      SDIV     R0,R0,R1
   \   000001D4   0x3030             ADDS     R0,R0,#+48
   \   000001D6   0x7160             STRB     R0,[R4, #+5]
    265          
    266            h_add=(next_cluster[0]&0x00FF0000)>>16;
    267            l_add=next_cluster[0]&0x0000FFFF;   
   \   000001D8   0x.... 0x....      LDR.W    R0,??DataTable14_6
    268            
    269            for(i=0,j=0;i<11;i++,j++)
    270             {
    271               DBUF[addr+i]=file_name[j];    //ÎÄ¼þÃû
   \   000001DC   0x7821             LDRB     R1,[R4, #+0]
   \   000001DE   0x8800             LDRH     R0,[R0, #+0]
   \   000001E0   0x2501             MOVS     R5,#+1
   \   000001E2   0xF809 0x1008      STRB     R1,[R9, R8]
   \   000001E6   0xEB09 0x0108      ADD      R1,R9,R8
   \   000001EA   0x1C4A             ADDS     R2,R1,#+1
   \   000001EC   0x1C63             ADDS     R3,R4,#+1
   \                     ??write_dir_17:
   \   000001EE   0xF813 0x6B01      LDRB     R6,[R3], #+1
    272             }
   \   000001F2   0x1D6D             ADDS     R5,R5,#+5
   \   000001F4   0x2D0B             CMP      R5,#+11
   \   000001F6   0xF802 0x6B01      STRB     R6,[R2], #+1
   \   000001FA   0xF813 0x6B01      LDRB     R6,[R3], #+1
   \   000001FE   0xF802 0x6B01      STRB     R6,[R2], #+1
   \   00000202   0xF813 0x6B01      LDRB     R6,[R3], #+1
   \   00000206   0xF802 0x6B01      STRB     R6,[R2], #+1
   \   0000020A   0xF813 0x6B01      LDRB     R6,[R3], #+1
   \   0000020E   0xF802 0x6B01      STRB     R6,[R2], #+1
   \   00000212   0xF813 0x6B01      LDRB     R6,[R3], #+1
   \   00000216   0xF802 0x6B01      STRB     R6,[R2], #+1
   \   0000021A   0xD3E8             BCC.N    ??write_dir_17
    273            for(j=0;i<26;i++,j++)
   \   0000021C   0x2D1A             CMP      R5,#+26
   \   0000021E   0xD209             BCS.N    ??write_dir_18
   \   00000220   0x.... 0x....      ADR.W    R3,file_property
    274             {
    275               DBUF[addr+i]=file_property[j];         //ÎÄ¼þÊôÐÔ
   \                     ??write_dir_19:
   \   00000224   0xF813 0x6B01      LDRB     R6,[R3], #+1
   \   00000228   0xF802 0x6B01      STRB     R6,[R2], #+1
    276             }
   \   0000022C   0x1C6E             ADDS     R6,R5,#+1
   \   0000022E   0xB2B5             UXTH     R5,R6
   \   00000230   0x2D1A             CMP      R5,#+26
   \   00000232   0xD3F7             BCC.N    ??write_dir_19
    277            DBUF[addr+26]=(byte_sd)(l_add&0x00FF);      //Ð´ÈëÎÄ¼þÆðÊ¼´ØµÄµÍ16Î»
   \                     ??write_dir_18:
   \   00000234   0x7688             STRB     R0,[R1, #+26]
    278            DBUF[addr+27]=(byte_sd)((l_add>>8)&0x00FF);  
   \   00000236   0x0A00             LSRS     R0,R0,#+8
   \   00000238   0x76C8             STRB     R0,[R1, #+27]
    279              
    280            file_size=ram_number+(((dword_sd)(cnt_cluster*sector_cluster+p_sector))<<9L);
   \   0000023A   0x8AE2             LDRH     R2,[R4, #+22]
   \   0000023C   0x7B23             LDRB     R3,[R4, #+12]
   \   0000023E   0x8AA0             LDRH     R0,[R4, #+20]
   \   00000240   0x435A             MULS     R2,R3,R2
   \   00000242   0x8A23             LDRH     R3,[R4, #+16]
   \   00000244   0xFA12 0xF283      UXTAH    R2,R2,R3
   \   00000248   0x0252             LSLS     R2,R2,#+9
   \   0000024A   0xFA12 0xF280      UXTAH    R2,R2,R0
    281            if(ram_number!=0) file_size-=512; 
   \   0000024E   0xB108             CBZ.N    R0,??write_dir_20
   \   00000250   0xF5A2 0x7200      SUB      R2,R2,#+512
    282            DBUF[addr+28]=(byte_sd)(file_size&0x000000ff);        //ÎÄ¼þ´óÐ¡
   \                     ??write_dir_20:
   \   00000254   0x770A             STRB     R2,[R1, #+28]
    283            DBUF[addr+29]=(byte_sd)((file_size&0x0000ff00)>>8);
   \   00000256   0x0A10             LSRS     R0,R2,#+8
   \   00000258   0x7748             STRB     R0,[R1, #+29]
    284            DBUF[addr+30]=(byte_sd)((file_size&0x00ff0000)>>16);
   \   0000025A   0x0C10             LSRS     R0,R2,#+16
   \   0000025C   0x7788             STRB     R0,[R1, #+30]
    285            DBUF[addr+31]=(byte_sd)((file_size&0xff000000)>>24);
   \   0000025E   0x0E10             LSRS     R0,R2,#+24
   \   00000260   0x77C8             STRB     R0,[R1, #+31]
   \   00000262   0xF44F 0x797A      MOV      R9,#+1000
   \   00000266   0xE00D             B.N      ??write_dir_21
    286          
    287            while(sd_writesingleblock(DBUF,add_dir+addh)&&retry<1000) //Ð´¸ùÄ¿Â¼
    288             {
    289               C_WDOG(); //Çå¿ªÃÅ¹· 
   \                     ??write_dir_22:
   \   00000268   0xB672             CPSID i          
   \   0000026A   0xF24A 0x6002      MOVW     R0,#+42498
   \   0000026E   0x8038             STRH     R0,[R7, #+0]
   \   00000270   0xF24B 0x4080      MOVW     R0,#+46208
   \   00000274   0x8038             STRH     R0,[R7, #+0]
   \   00000276   0x.... 0x....      LDR.W    R0,??DataTable14_5
   \   0000027A   0x7800             LDRB     R0,[R0, #+0]
   \   0000027C   0xB100             CBZ.N    R0,??write_dir_23
   \   0000027E   0xB662             CPSIE i          
    290               retry++;
   \                     ??write_dir_23:
   \   00000280   0xF1A9 0x0901      SUB      R9,R9,#+1
    291             }
   \                     ??write_dir_21:
   \   00000284   0x6A20             LDR      R0,[R4, #+32]
   \   00000286   0xEB0A 0x0100      ADD      R1,R10,R0
   \   0000028A   0x4640             MOV      R0,R8
   \   0000028C   0x.... 0x....      BL       sd_writesingleblock
   \   00000290   0x2800             CMP      R0,#+0
   \   00000292   0xBF18             IT       NE 
   \   00000294   0xF1B9 0x0F00      CMPNE    R9,#+0
   \   00000298   0xD1E6             BNE.N    ??write_dir_22
   \   0000029A   0xE8BD 0x8FF1      POP      {R0,R4-R11,PC}   ;; return
    292          }
    293          /***********************************************************************/
    294          //function:write_fat
    295          //description:Ð´SD¿¨µÄfat1£¬fat2±í(Ëã·¨ºÜ¸´ÔÓ£¬Ðë×ÐÏ¸Ë¼¿¼·ÖÎö)
    296          //ÐÞ¸Ä£º Sword
    297          /***********************************************************************/

   \                                 In section .text, align 4, keep-with-next
    298          void write_fat(void)
    299          {
   \                     write_fat:
   \   00000000   0xE92D 0x4FF0      PUSH     {R4-R11,LR}
    300            dword_sd sector=0,cluster;        
    301            word_sd  i=0,p,retry=0,num,k,j;
    302            byte_sd  r1;
    303                                                 
    304            num=cnt_cluster;
   \   00000004   0x.... 0x....      LDR.W    R6,??DataTable14
   \   00000008   0xB083             SUB      SP,SP,#+12
   \   0000000A   0x8AF0             LDRH     R0,[R6, #+22]
   \   0000000C   0x2400             MOVS     R4,#+0
   \   0000000E   0x2500             MOVS     R5,#+0
   \   00000010   0x9000             STR      R0,[SP, #+0]
    305            if(p_sector!=0) num++;
   \   00000012   0x8A30             LDRH     R0,[R6, #+16]
   \   00000014   0xB118             CBZ.N    R0,??write_fat_0
   \   00000016   0x9800             LDR      R0,[SP, #+0]
   \   00000018   0x1C40             ADDS     R0,R0,#+1
   \   0000001A   0xB280             UXTH     R0,R0
   \   0000001C   0x9000             STR      R0,[SP, #+0]
    306            
    307            k=j=0;
   \                     ??write_fat_0:
   \   0000001E   0x.... 0x....      LDR.W    R0,??DataTable14_6
   \   00000022   0x46A1             MOV      R9,R4
   \   00000024   0x6800             LDR      R0,[R0, #+0]
   \   00000026   0x0E01             LSRS     R1,R0,#+24
    308            num_segcluster=(next_cluster[0]&0xFF000000)>>24;
    309            cluster=next_cluster[0]&0x00FFFFFF;
   \   00000028   0xEA4F 0x2B00      LSL      R11,R0,#+8
    310            
    311            for(i=0;i<num;i++)
   \   0000002C   0x9800             LDR      R0,[SP, #+0]
   \   0000002E   0xF8AD 0x4004      STRH     R4,[SP, #+4]
   \   00000032   0x7371             STRB     R1,[R6, #+13]
   \   00000034   0xEA4F 0x2B1B      LSR      R11,R11,#+8
   \   00000038   0x46A0             MOV      R8,R4
   \   0000003A   0x2801             CMP      R0,#+1
   \   0000003C   0xF2C0 0x80CA      BLT.W    ??write_fat_1
   \   00000040   0x9800             LDR      R0,[SP, #+0]
   \   00000042   0x.... 0x....      LDR.W    R7,??DataTable14_3  ;; 0x4005200c
   \   00000046   0x1E40             SUBS     R0,R0,#+1
   \   00000048   0x9002             STR      R0,[SP, #+8]
   \   0000004A   0x.... 0x....      LDR.W    R10,??DataTable14_4
   \                     ??write_fat_2:
   \   0000004E   0xEA4F 0x10DB      LSR      R0,R11,#+7
   \   00000052   0x42A0             CMP      R0,R4
   \   00000054   0xD103             BNE.N    ??write_fat_3
   \   00000056   0xF1B8 0x0F00      CMP      R8,#+0
   \   0000005A   0xD14F             BNE.N    ??write_fat_4
   \   0000005C   0xE035             B.N      ??write_fat_5
    312             {
    313               if((cluster>>7)!=sector||i==0)
    314                { 
    315                  if(i!=0) 
   \                     ??write_fat_3:
   \   0000005E   0xF1B8 0x0F00      CMP      R8,#+0
   \   00000062   0xD10D             BNE.N    ??write_fat_6
   \   00000064   0xE031             B.N      ??write_fat_5
    316                   {  //Ð´fat±í
    317                     while(sd_writesingleblock(DBUF,add_f1+sector)&&(retry<1000))
    318                      {
    319                         C_WDOG(); //Çå¿ªÃÅ¹· 
   \                     ??write_fat_7:
   \   00000066   0xB672             CPSID i          
   \   00000068   0xF24A 0x6002      MOVW     R0,#+42498
   \   0000006C   0x8038             STRH     R0,[R7, #+0]
   \   0000006E   0xF24B 0x4080      MOVW     R0,#+46208
   \   00000072   0x8038             STRH     R0,[R7, #+0]
   \   00000074   0x.... 0x....      LDR.W    R0,??DataTable14_5
   \   00000078   0x7800             LDRB     R0,[R0, #+0]
   \   0000007A   0xB100             CBZ.N    R0,??write_fat_8
   \   0000007C   0xB662             CPSIE i          
    320                         retry++;
   \                     ??write_fat_8:
   \   0000007E   0x1C6D             ADDS     R5,R5,#+1
    321                      }
   \                     ??write_fat_6:
   \   00000080   0x6A70             LDR      R0,[R6, #+36]
   \   00000082   0x1821             ADDS     R1,R4,R0
   \   00000084   0x4650             MOV      R0,R10
   \   00000086   0x.... 0x....      BL       sd_writesingleblock
   \   0000008A   0xB120             CBZ.N    R0,??write_fat_9
   \   0000008C   0xF44F 0x707A      MOV      R0,#+1000
   \   00000090   0xB2AD             UXTH     R5,R5
   \   00000092   0x4285             CMP      R5,R0
   \   00000094   0xD3E7             BCC.N    ??write_fat_7
    322                     retry=0;
   \                     ??write_fat_9:
   \   00000096   0xF44F 0x757A      MOV      R5,#+1000
   \   0000009A   0xE00C             B.N      ??write_fat_10
    323                     while(sd_writesingleblock(DBUF,add_f2+sector)&&(retry<1000)) 
    324                      {
    325                        C_WDOG(); //Çå¿ªÃÅ¹· 
   \                     ??write_fat_11:
   \   0000009C   0xB672             CPSID i          
   \   0000009E   0xF24A 0x6002      MOVW     R0,#+42498
   \   000000A2   0x8038             STRH     R0,[R7, #+0]
   \   000000A4   0xF24B 0x4080      MOVW     R0,#+46208
   \   000000A8   0x8038             STRH     R0,[R7, #+0]
   \   000000AA   0x.... 0x....      LDR.W    R0,??DataTable14_5
   \   000000AE   0x7800             LDRB     R0,[R0, #+0]
   \   000000B0   0xB100             CBZ.N    R0,??write_fat_12
   \   000000B2   0xB662             CPSIE i          
    326                        retry++;
   \                     ??write_fat_12:
   \   000000B4   0x1E6D             SUBS     R5,R5,#+1
    327                      }
   \                     ??write_fat_10:
   \   000000B6   0x6AB0             LDR      R0,[R6, #+40]
   \   000000B8   0x1821             ADDS     R1,R4,R0
   \   000000BA   0x4650             MOV      R0,R10
   \   000000BC   0x.... 0x....      BL       sd_writesingleblock
   \   000000C0   0x2800             CMP      R0,#+0
   \   000000C2   0xBF18             IT       NE 
   \   000000C4   0x2D00             CMPNE    R5,#+0
   \   000000C6   0xD1E9             BNE.N    ??write_fat_11
    328                     retry=0;
   \   000000C8   0x2500             MOVS     R5,#+0
    329                   }
    330                
    331                  sector=(cluster>>7);
   \                     ??write_fat_5:
   \   000000CA   0xEA4F 0x14DB      LSR      R4,R11,#+7
    332                  
    333                  do     //ÏÈ¶ÁÔÙ°ÑÓÃµ½µÄÐÂ´Ø¸ÄÐ´,´Ó¶ø±£Ö¤²»»á¸ü¸ÄÔ­À´µÄÎÄ¼þ
    334                   {
    335                     r1=sd_readsingleblock(DBUF,add_f1+sector);
   \                     ??write_fat_13:
   \   000000CE   0x6A70             LDR      R0,[R6, #+36]
   \   000000D0   0x1821             ADDS     R1,R4,R0
   \   000000D2   0x4650             MOV      R0,R10
   \   000000D4   0x.... 0x....      BL       sd_readsingleblock
    336                     C_WDOG();
   \   000000D8   0xB672             CPSID i          
   \   000000DA   0xF24A 0x6102      MOVW     R1,#+42498
   \   000000DE   0x8039             STRH     R1,[R7, #+0]
   \   000000E0   0xF24B 0x4180      MOVW     R1,#+46208
   \   000000E4   0x8039             STRH     R1,[R7, #+0]
   \   000000E6   0x.... 0x....      LDR.W    R1,??DataTable14_5
   \   000000EA   0x7809             LDRB     R1,[R1, #+0]
   \   000000EC   0xB101             CBZ.N    R1,??write_fat_14
   \   000000EE   0xB662             CPSIE i          
    337                     retry++;
   \                     ??write_fat_14:
   \   000000F0   0x1C6D             ADDS     R5,R5,#+1
    338                   } while(r1!=0x00&&retry<100);
   \   000000F2   0xB110             CBZ.N    R0,??write_fat_15
   \   000000F4   0xB2AD             UXTH     R5,R5
   \   000000F6   0x2D64             CMP      R5,#+100
   \   000000F8   0xD3E9             BCC.N    ??write_fat_13
    339                  retry=0;
   \                     ??write_fat_15:
   \   000000FA   0x2500             MOVS     R5,#+0
    340                }
    341               
    342               p=((cluster&0x007F)<<2);      //ÕÒµ½µ±Ç°´Ø¶ÔÓ¦µÄFAT±íµÄÎ»ÖÃ
    343               
    344               j++;        //ÕÒµ½ÏÂÒ»¸öÓÐÓÃ´Ø
    345               if(j==num_segcluster)
   \                     ??write_fat_4:
   \   000000FC   0x7B71             LDRB     R1,[R6, #+13]
   \   000000FE   0xF00B 0x007F      AND      R0,R11,#0x7F
   \   00000102   0xF109 0x0201      ADD      R2,R9,#+1
   \   00000106   0x0080             LSLS     R0,R0,#+2
   \   00000108   0xFA1F 0xF982      UXTH     R9,R2
   \   0000010C   0x4589             CMP      R9,R1
   \   0000010E   0xD112             BNE.N    ??write_fat_16
    346                {
    347                  j=0;
    348                  num_segcluster=(next_cluster[++k]&0xFF000000)>>24;
   \   00000110   0xF8BD 0x1004      LDRH     R1,[SP, #+4]
   \   00000114   0x.... 0x....      LDR.W    R2,??DataTable14_6
   \   00000118   0x46A9             MOV      R9,R5
   \   0000011A   0x1C49             ADDS     R1,R1,#+1
   \   0000011C   0xF8AD 0x1004      STRH     R1,[SP, #+4]
   \   00000120   0xF8BD 0x1004      LDRH     R1,[SP, #+4]
   \   00000124   0xF852 0x1021      LDR      R1,[R2, R1, LSL #+2]
   \   00000128   0x0E0A             LSRS     R2,R1,#+24
    349                  cluster=next_cluster[k]&0x00FFFFFF; 
   \   0000012A   0xEA4F 0x2B01      LSL      R11,R1,#+8
   \   0000012E   0x7372             STRB     R2,[R6, #+13]
   \   00000130   0xEA4F 0x2B1B      LSR      R11,R11,#+8
   \   00000134   0xE001             B.N      ??write_fat_17
    350                }
    351               else
    352                {
    353                  cluster++;
   \                     ??write_fat_16:
   \   00000136   0xF10B 0x0B01      ADD      R11,R11,#+1
    354                }
    355               
    356               DBUF[p]=(byte_sd)(cluster&0x00FF); //Ð´ÈëÎÄ¼þµÄÏÂÒ»¸ö´Ø
   \                     ??write_fat_17:
   \   0000013A   0xF800 0xB00A      STRB     R11,[R0, R10]
    357               DBUF[p+1]=(byte_sd)((cluster>>8)&0x00FF);
   \   0000013E   0xEB00 0x010A      ADD      R1,R0,R10
   \   00000142   0xEA4F 0x221B      LSR      R2,R11,#+8
   \   00000146   0x704A             STRB     R2,[R1, #+1]
    358               DBUF[p+2]=(byte_sd)((cluster>>16)&0x00FF);
   \   00000148   0xEA4F 0x421B      LSR      R2,R11,#+16
   \   0000014C   0x708A             STRB     R2,[R1, #+2]
    359               
    360               if(i==(num-1))
   \   0000014E   0x9A02             LDR      R2,[SP, #+8]
   \   00000150   0x4590             CMP      R8,R2
   \   00000152   0xD139             BNE.N    ??write_fat_18
    361                {
    362                  DBUF[p]=0xff;
   \   00000154   0x22FF             MOVS     R2,#+255
   \   00000156   0xF800 0x200A      STRB     R2,[R0, R10]
    363                  DBUF[p+1]=0xff;
   \   0000015A   0x704A             STRB     R2,[R1, #+1]
    364                  DBUF[p+2]=0xff;
   \   0000015C   0x708A             STRB     R2,[R1, #+2]
    365                  DBUF[p+3]=0x0f;
   \   0000015E   0x200F             MOVS     R0,#+15
   \   00000160   0x70C8             STRB     R0,[R1, #+3]
   \   00000162   0xE00C             B.N      ??write_fat_19
    366                  while(sd_writesingleblock(DBUF,add_f1+sector)&&(retry<1000))
    367                   {
    368                      C_WDOG(); //Çå¿ªÃÅ¹· 
   \                     ??write_fat_20:
   \   00000164   0xB672             CPSID i          
   \   00000166   0xF24A 0x6002      MOVW     R0,#+42498
   \   0000016A   0x8038             STRH     R0,[R7, #+0]
   \   0000016C   0xF24B 0x4080      MOVW     R0,#+46208
   \   00000170   0x8038             STRH     R0,[R7, #+0]
   \   00000172   0x.... 0x....      LDR.W    R0,??DataTable14_5
   \   00000176   0x7800             LDRB     R0,[R0, #+0]
   \   00000178   0xB100             CBZ.N    R0,??write_fat_21
   \   0000017A   0xB662             CPSIE i          
    369                      retry++;
   \                     ??write_fat_21:
   \   0000017C   0x1C6D             ADDS     R5,R5,#+1
    370                   }
   \                     ??write_fat_19:
   \   0000017E   0x6A70             LDR      R0,[R6, #+36]
   \   00000180   0x1821             ADDS     R1,R4,R0
   \   00000182   0x4650             MOV      R0,R10
   \   00000184   0x.... 0x....      BL       sd_writesingleblock
   \   00000188   0xB120             CBZ.N    R0,??write_fat_22
   \   0000018A   0xF44F 0x707A      MOV      R0,#+1000
   \   0000018E   0xB2AD             UXTH     R5,R5
   \   00000190   0x4285             CMP      R5,R0
   \   00000192   0xD3E7             BCC.N    ??write_fat_20
    371                  retry=0;
   \                     ??write_fat_22:
   \   00000194   0xF44F 0x757A      MOV      R5,#+1000
   \   00000198   0xE00C             B.N      ??write_fat_23
    372                  while(sd_writesingleblock(DBUF,add_f2+sector)&&(retry<1000)) 
    373                   {
    374                     C_WDOG(); //Çå¿ªÃÅ¹· 
   \                     ??write_fat_24:
   \   0000019A   0xB672             CPSID i          
   \   0000019C   0xF24A 0x6002      MOVW     R0,#+42498
   \   000001A0   0x8038             STRH     R0,[R7, #+0]
   \   000001A2   0xF24B 0x4080      MOVW     R0,#+46208
   \   000001A6   0x8038             STRH     R0,[R7, #+0]
   \   000001A8   0x.... 0x....      LDR.W    R0,??DataTable14_5
   \   000001AC   0x7800             LDRB     R0,[R0, #+0]
   \   000001AE   0xB100             CBZ.N    R0,??write_fat_25
   \   000001B0   0xB662             CPSIE i          
    375                     retry++;
   \                     ??write_fat_25:
   \   000001B2   0x1E6D             SUBS     R5,R5,#+1
    376                   }
   \                     ??write_fat_23:
   \   000001B4   0x6AB0             LDR      R0,[R6, #+40]
   \   000001B6   0x1821             ADDS     R1,R4,R0
   \   000001B8   0x4650             MOV      R0,R10
   \   000001BA   0x.... 0x....      BL       sd_writesingleblock
   \   000001BE   0x2800             CMP      R0,#+0
   \   000001C0   0xBF18             IT       NE 
   \   000001C2   0x2D00             CMPNE    R5,#+0
   \   000001C4   0xD1E9             BNE.N    ??write_fat_24
    377                  retry=0;
   \   000001C6   0x2500             MOVS     R5,#+0
    378                }
    379             }
   \                     ??write_fat_18:
   \   000001C8   0x9800             LDR      R0,[SP, #+0]
   \   000001CA   0xF108 0x0801      ADD      R8,R8,#+1
   \   000001CE   0x4580             CMP      R8,R0
   \   000001D0   0xF6FF 0xAF3D      BLT.W    ??write_fat_2
    380          }
   \                     ??write_fat_1:
   \   000001D4   0xB003             ADD      SP,SP,#+12
   \   000001D6   0xE8BD 0x8FF0      POP      {R4-R11,PC}      ;; return
    381          
    382          /*********************************************************/
    383          //function:writeram_sd
    384          //description:Ð´ram512×Ö½ÚÊý¾Ýµ½sd¿¨ÉÈÇøº¯Êý
    385          //ÐÞ¸Ä£º Sword
    386          /***********************************************************/

   \                                 In section .text, align 4, keep-with-next
    387          void writeram_sd(void)
    388          {
   \                     writeram_sd:
   \   00000000   0xE92D 0x41F0      PUSH     {R4-R8,LR}
    389            word_sd retry=0;
   \   00000004   0xF44F 0x7496      MOV      R4,#+300
   \   00000008   0x.... 0x....      LDR.W    R5,??DataTable14_5
   \   0000000C   0xF24B 0x4680      MOVW     R6,#+46208
   \   00000010   0x.... 0x....      LDR.W    R7,??DataTable14_3  ;; 0x4005200c
   \   00000014   0xF24A 0x6802      MOVW     R8,#+42498
   \   00000018   0xE007             B.N      ??writeram_sd_0
    390          #ifdef EN_SDbuf
    391            while(SD_WriteBlock_UserBuf()&&(retry<300)) 
    392             {
    393               C_WDOG(); //Çå¿ªÃÅ¹· 
   \                     ??writeram_sd_1:
   \   0000001A   0xB672             CPSID i          
   \   0000001C   0xF8A7 0x8000      STRH     R8,[R7, #+0]
   \   00000020   0x803E             STRH     R6,[R7, #+0]
   \   00000022   0x7828             LDRB     R0,[R5, #+0]
   \   00000024   0xB100             CBZ.N    R0,??writeram_sd_2
   \   00000026   0xB662             CPSIE i          
    394               retry++;
   \                     ??writeram_sd_2:
   \   00000028   0x1E64             SUBS     R4,R4,#+1
    395             }
   \                     ??writeram_sd_0:
   \   0000002A   0x.... 0x....      BL       SD_WriteBlock_UserBuf
   \   0000002E   0x2800             CMP      R0,#+0
   \   00000030   0xBF18             IT       NE 
   \   00000032   0x2C00             CMPNE    R4,#+0
   \   00000034   0xD1F1             BNE.N    ??writeram_sd_1
    396          #else                  
    397            while(sd_writesingleblock(DBUF,p_datasector)&&(retry<300)) 
    398             {
    399               C_WDOG(); //Çå¿ªÃÅ¹· 
    400               retry++;
    401             }
    402          #endif   
    403            if((++p_sector)==sector_cluster)  //Ð´ÍêÒ»´ØµÄ´¦Àí
   \   00000036   0x.... 0x....      LDR.W    R0,??DataTable14
   \   0000003A   0x8A01             LDRH     R1,[R0, #+16]
   \   0000003C   0x1C4A             ADDS     R2,R1,#+1
   \   0000003E   0x7B01             LDRB     R1,[R0, #+12]
   \   00000040   0x8202             STRH     R2,[R0, #+16]
   \   00000042   0xB292             UXTH     R2,R2
   \   00000044   0x428A             CMP      R2,R1
   \   00000046   0xD11F             BNE.N    ??writeram_sd_3
    404             {
    405               p_sector=0;
   \   00000048   0x2200             MOVS     R2,#+0
    406               p_cluster++;
    407               cnt_cluster++;
   \   0000004A   0x8AC3             LDRH     R3,[R0, #+22]
   \   0000004C   0x8202             STRH     R2,[R0, #+16]
   \   0000004E   0x7B82             LDRB     R2,[R0, #+14]
   \   00000050   0x1C5B             ADDS     R3,R3,#+1
   \   00000052   0x82C3             STRH     R3,[R0, #+22]
   \   00000054   0x1C52             ADDS     R2,R2,#+1
    408               if(p_cluster==num_segcluster)
   \   00000056   0x7B43             LDRB     R3,[R0, #+13]
   \   00000058   0x7382             STRB     R2,[R0, #+14]
   \   0000005A   0xB2D2             UXTB     R2,R2
   \   0000005C   0x429A             CMP      R2,R3
   \   0000005E   0xD113             BNE.N    ??writeram_sd_3
    409                {       //Èç¹ûÒ»¸ö´Ø×éÐ´Íê,½«Ð´ÈëÖ¸ÕëÖ¸ÏòÏÂÒ»´Ø×éµÄÆðÊ¼µØÖ·
    410                  p_datasector=((dword_sd)((next_cluster[++p_segcluster]&0x00FFFFFF)-2))*sector_cluster+add_dir; 
   \   00000060   0x8B02             LDRH     R2,[R0, #+24]
   \   00000062   0x.... 0x....      LDR.W    R3,??DataTable14_6
   \   00000066   0x6A04             LDR      R4,[R0, #+32]
   \   00000068   0x1C52             ADDS     R2,R2,#+1
   \   0000006A   0x8302             STRH     R2,[R0, #+24]
   \   0000006C   0xB292             UXTH     R2,R2
   \   0000006E   0xF853 0x2022      LDR      R2,[R3, R2, LSL #+2]
   \   00000072   0x0213             LSLS     R3,R2,#+8
   \   00000074   0x0A1B             LSRS     R3,R3,#+8
   \   00000076   0x1E9B             SUBS     R3,R3,#+2
   \   00000078   0xFB01 0x4103      MLA      R1,R1,R3,R4
   \   0000007C   0x62C1             STR      R1,[R0, #+44]
    411                  num_segcluster=(next_cluster[p_segcluster]&0xFF000000)>>24;
   \   0000007E   0x0E11             LSRS     R1,R2,#+24
   \   00000080   0x7341             STRB     R1,[R0, #+13]
    412                  p_cluster=0;
   \   00000082   0x2100             MOVS     R1,#+0
   \   00000084   0x7381             STRB     R1,[R0, #+14]
   \   00000086   0xE002             B.N      ??writeram_sd_4
    413                }
    414               else
    415                {
    416                  p_datasector++;
    417                }
    418             }
    419            else
    420             {
    421               p_datasector++;
   \                     ??writeram_sd_3:
   \   00000088   0x6AC1             LDR      R1,[R0, #+44]
   \   0000008A   0x1C49             ADDS     R1,R1,#+1
   \   0000008C   0x62C1             STR      R1,[R0, #+44]
    422             }
    423          }
   \                     ??writeram_sd_4:
   \   0000008E   0xE8BD 0x81F0      POP      {R4-R8,PC}       ;; return
    424          /*********************************************************/
    425          //function:write_ram
    426          //description:Ð´×Ö½ÚÊý¾Ýµ½ramº¯Êý£¨Ö÷º¯ÊýÓëfat32ÎÄ¼þÏµÍ³º¯ÊýµÄ½Ó¿Ú£©
    427          //ÐÞ¸Ä£º Sword
    428          /***********************************************************/

   \                                 In section .text, align 2, keep-with-next
    429          void writebyte_ram(byte_sd wdata)
    430          {
    431            
    432            if(cnt_cluster<cluster_number)
   \                     writebyte_ram:
   \   00000000   0x.... 0x....      LDR.W    R1,??DataTable14
   \   00000004   0x8ACA             LDRH     R2,[R1, #+22]
   \   00000006   0x8A4B             LDRH     R3,[R1, #+18]
   \   00000008   0x429A             CMP      R2,R3
   \   0000000A   0xD20C             BCS.N    ??writebyte_ram_0
    433             {
    434          #ifdef EN_SDbuf
    435               pBuf_Now[ram_number]=wdata;
   \   0000000C   0x8A8A             LDRH     R2,[R1, #+20]
   \   0000000E   0x6B4B             LDR      R3,[R1, #+52]
   \   00000010   0x54D0             STRB     R0,[R2, R3]
    436          #else
    437               DBUF[ram_number]=wdata;
    438          #endif     
    439               ram_number++;
   \   00000012   0x1C50             ADDS     R0,R2,#+1
   \   00000014   0x8288             STRH     R0,[R1, #+20]
    440               if(ram_number==512) 
   \   00000016   0xF44F 0x7200      MOV      R2,#+512
   \   0000001A   0xB280             UXTH     R0,R0
   \   0000001C   0x4290             CMP      R0,R2
   \   0000001E   0xD102             BNE.N    ??writebyte_ram_0
    441                {
    442                  ram_number=0;
   \   00000020   0x2000             MOVS     R0,#+0
   \   00000022   0x8288             STRH     R0,[R1, #+20]
    443                  writeram_sd();
   \   00000024   0x....             B.N      writeram_sd
    444                }
    445             }
    446          }
   \                     ??writebyte_ram_0:
   \   00000026   0x4770             BX       LR               ;; return
    447          /*********************************************************/
    448          //function:write_stop
    449          //description:Ð´SD¿¨½áÊø£¬Íê³ÉºóÐø¹¤×÷£¬¼´Ð´FAT±íÓë¸ùÄ¿Â¼
    450          //ÐÞ¸Ä£º Sword
    451          /*********************************************************/

   \                                 In section .text, align 2, keep-with-next
    452          void write_stop(void)
    453          {
   \                     write_stop:
   \   00000000   0xB538             PUSH     {R3-R5,LR}
    454             if(cnt_cluster==0&&p_sector==0&&ram_number==0) 
   \   00000002   0x.... 0x....      LDR.W    R4,??DataTable14
   \   00000006   0x8AE1             LDRH     R1,[R4, #+22]
   \   00000008   0x8A22             LDRH     R2,[R4, #+16]
   \   0000000A   0x8AA0             LDRH     R0,[R4, #+20]
   \   0000000C   0x4311             ORRS     R1,R2,R1
   \   0000000E   0x4301             ORRS     R1,R0,R1
   \   00000010   0xD02B             BEQ.N    ??write_stop_0
    455             {
    456               return; //Èç¹ûÃ»ÓÐÐ´¹ýÊý¾Ý,Ôò²»Ð´fat±íºÍ¸ùÄ¿Â¼
    457             }
    458             
    459             if(ram_number!=0) writeram_sd(); 
   \   00000012   0xB108             CBZ.N    R0,??write_stop_1
   \   00000014   0x.... 0x....      BL       writeram_sd
    460           //°Ñ×îºó²»¹»Ò»¸öÍêÕûÉÈÇøµÄÊý¾ÝÐ´Èë
    461           
    462          #ifdef EN_SDbuf
    463             SD_ClrBuf();
   \                     ??write_stop_1:
   \   00000018   0x.... 0x....      LDR.W    R5,??DataTable14_2  ;; 0x1e8480
   \   0000001C   0x7BE0             LDRB     R0,[R4, #+15]
   \   0000001E   0xB1C8             CBZ.N    R0,??write_stop_2
   \   00000020   0x4628             MOV      R0,R5
   \   00000022   0x.... 0x....      BL       Wait_SDRdy
   \   00000026   0x6B21             LDR      R1,[R4, #+48]
   \   00000028   0x6BA0             LDR      R0,[R4, #+56]
   \   0000002A   0x.... 0x....      BL       sd_writesingleblock
   \   0000002E   0xB178             CBZ.N    R0,??write_stop_3
   \   00000030   0x6B21             LDR      R1,[R4, #+48]
   \   00000032   0x6BA0             LDR      R0,[R4, #+56]
   \   00000034   0x.... 0x....      BL       sd_writesingleblock
   \   00000038   0x6B21             LDR      R1,[R4, #+48]
   \   0000003A   0x6BA0             LDR      R0,[R4, #+56]
   \   0000003C   0x.... 0x....      BL       sd_writesingleblock
   \   00000040   0x6B21             LDR      R1,[R4, #+48]
   \   00000042   0x6BA0             LDR      R0,[R4, #+56]
   \   00000044   0x.... 0x....      BL       sd_writesingleblock
   \   00000048   0x6B21             LDR      R1,[R4, #+48]
   \   0000004A   0x6BA0             LDR      R0,[R4, #+56]
   \   0000004C   0x.... 0x....      BL       sd_writesingleblock
   \                     ??write_stop_3:
   \   00000050   0x2000             MOVS     R0,#+0
   \   00000052   0x73E0             STRB     R0,[R4, #+15]
    464          #endif
    465             
    466             write_dir();
   \                     ??write_stop_2:
   \   00000054   0x.... 0x....      BL       write_dir
    467             write_fat(); 
   \   00000058   0x.... 0x....      BL       write_fat
    468          
    469             Wait_SDRdy(SD_LONG_Wait);   //µÈ´ý×îºóÒ»¸öÉÈÇøÊý¾ÝÐ´ÈëSD¿¨
   \   0000005C   0x4628             MOV      R0,R5
   \   0000005E   0x.... 0x....      BL       Wait_SDRdy
    470          
    471             CloseSD();//¹Ø±ÕSD¿¨  
   \   00000062   0xE8BD 0x4031      POP      {R0,R4,R5,LR}
   \   00000066   0x.... 0x....      B.W      CloseSD
   \                     ??write_stop_0:
   \   0000006A   0xBD31             POP      {R0,R4,R5,PC}    ;; return
    472          }
    473          
    474          /*
    475          º¯ÊýÃû³Æ£ºsearch_addr_sd
    476          º¯Êý¹¦ÄÜ£ºÑ°ÕÒsd¿¨Æô¶¯ÉÈÇø,¸ùÄ¿Â¼,Êý¾ÝÉÈÇø,fat1ºÍfat2µÄÊ×µØÖ·
    477          ±à Ð´ Õß£ºSword
    478          */

   \                                 In section .text, align 4, keep-with-next
    479          void search_addr_sd(void)
    480          {
   \                     search_addr_sd:
   \   00000000   0xE92D 0x4FF8      PUSH     {R3-R11,LR}
    481            word_sd  retry;
    482            byte_sd  r1,flag_yes=1;
   \   00000004   0x2501             MOVS     R5,#+1
    483            
    484            retry=0;
   \   00000006   0x2700             MOVS     R7,#+0
   \   00000008   0x.... 0x....      LDR.W    R8,??DataTable14_5
   \   0000000C   0xF24B 0x4980      MOVW     R9,#+46208
   \   00000010   0x.... 0x....      LDR.W    R10,??DataTable14_3  ;; 0x4005200c
   \   00000014   0xF24A 0x6B02      MOVW     R11,#+42498
   \   00000018   0x.... 0x....      LDR.W    R4,??DataTable14_4
    485            do
    486             {  //¶ÁÈ¡µÚ0ÎïÀíÉÈÇøÄÚÈÝ
    487               r1=sd_readsingleblock(DBUF,0);
   \                     ??search_addr_sd_0:
   \   0000001C   0x2100             MOVS     R1,#+0
   \   0000001E   0x4620             MOV      R0,R4
   \   00000020   0x.... 0x....      BL       sd_readsingleblock
    488               C_WDOG();
   \   00000024   0xB672             CPSID i          
   \   00000026   0xF8AA 0xB000      STRH     R11,[R10, #+0]
   \   0000002A   0xF8AA 0x9000      STRH     R9,[R10, #+0]
   \   0000002E   0xF898 0x1000      LDRB     R1,[R8, #+0]
   \   00000032   0xB101             CBZ.N    R1,??search_addr_sd_1
   \   00000034   0xB662             CPSIE i          
    489               retry++;
   \                     ??search_addr_sd_1:
   \   00000036   0x1C7F             ADDS     R7,R7,#+1
    490             } while(r1!=0x00&&retry<100);
   \   00000038   0xB110             CBZ.N    R0,??search_addr_sd_2
   \   0000003A   0xB2BF             UXTH     R7,R7
   \   0000003C   0x2F64             CMP      R7,#+100
   \   0000003E   0xD3ED             BCC.N    ??search_addr_sd_0
    491           
    492            if(retry>=100) 
   \                     ??search_addr_sd_2:
   \   00000040   0xB2BF             UXTH     R7,R7
   \   00000042   0x2F64             CMP      R7,#+100
   \   00000044   0xD303             BCC.N    ??search_addr_sd_3
    493             {
    494               flag_err_sd=SDERR_ReadOverTime;
   \   00000046   0x....             LDR.N    R0,??DataTable14_7
   \   00000048   0x2103             MOVS     R1,#+3
   \   0000004A   0x7001             STRB     R1,[R0, #+0]
    495               flag_yes=0; //³¬Ê±³ö´í
   \   0000004C   0x2500             MOVS     R5,#+0
    496             }
    497               
    498            if(DBUF[0]!=0xeb||DBUF[1]!=0x58||DBUF[2]!=0x90)   
   \                     ??search_addr_sd_3:
   \   0000004E   0x7820             LDRB     R0,[R4, #+0]
   \   00000050   0x28EB             CMP      R0,#+235
   \   00000052   0xBF01             ITTTT    EQ 
   \   00000054   0x7860             LDRBEQ   R0,[R4, #+1]
   \   00000056   0x2858             CMPEQ    R0,#+88
   \   00000058   0x78A0             LDRBEQ   R0,[R4, #+2]
   \   0000005A   0x2890             CMPEQ    R0,#+144
   \   0000005C   0xD035             BEQ.N    ??search_addr_sd_4
    499           //Í¨¹ýµÚ0ÎïÀíÉÈÇøµÄÇ°3×Ö½ÚÊÇ·ñÊÇÌø×ªÖ¸ÁîÀ´ÅÐ¶¨ÊÇ²»ÊÇÆô¶¯ÉÈÇø    
    500             {
    501               add_sta=DBUF[454]+((dword_sd)DBUF[455]<<8)+((dword_sd)DBUF[456]<<16)+((dword_sd)DBUF[457]<<24);
   \   0000005E   0xF894 0x01C6      LDRB     R0,[R4, #+454]
   \   00000062   0xF894 0x11C7      LDRB     R1,[R4, #+455]
   \   00000066   0x....             LDR.N    R6,??DataTable14
    502            //Èç¹ûÎïÀíµÄµÚ0ÉÈÇø²»ÊÇÆô¶¯ÉÈÇø,ÔòÓÉµÚ454-457byte_sdÀ´¼ÆËãÆô¶¯ÉÈÇøµÄÆ«ÒÆÁ¿   
    503               retry=0;   
   \   00000068   0x2700             MOVS     R7,#+0
   \   0000006A   0xEB10 0x2001      ADDS     R0,R0,R1, LSL #+8
   \   0000006E   0xF894 0x11C8      LDRB     R1,[R4, #+456]
   \   00000072   0xEB00 0x4001      ADD      R0,R0,R1, LSL #+16
   \   00000076   0xF894 0x11C9      LDRB     R1,[R4, #+457]
   \   0000007A   0xEB00 0x6001      ADD      R0,R0,R1, LSL #+24
   \   0000007E   0x61F0             STR      R0,[R6, #+28]
    504               do
    505                {  //¶ÁÈ¡Æô¶¯ÉÈÇøÄÚÈÝ
    506                  r1=sd_readsingleblock(DBUF,add_sta);
   \                     ??search_addr_sd_5:
   \   00000080   0x69F1             LDR      R1,[R6, #+28]
   \   00000082   0x4620             MOV      R0,R4
   \   00000084   0x.... 0x....      BL       sd_readsingleblock
    507                  C_WDOG();
   \   00000088   0xB672             CPSID i          
   \   0000008A   0xF8AA 0xB000      STRH     R11,[R10, #+0]
   \   0000008E   0xF8AA 0x9000      STRH     R9,[R10, #+0]
   \   00000092   0xF898 0x1000      LDRB     R1,[R8, #+0]
   \   00000096   0xB101             CBZ.N    R1,??search_addr_sd_6
   \   00000098   0xB662             CPSIE i          
    508                  retry++;
   \                     ??search_addr_sd_6:
   \   0000009A   0x1C7F             ADDS     R7,R7,#+1
    509                } while(r1!=0x00&&retry<100);
   \   0000009C   0xB110             CBZ.N    R0,??search_addr_sd_7
   \   0000009E   0xB2BF             UXTH     R7,R7
   \   000000A0   0x2F64             CMP      R7,#+100
   \   000000A2   0xD3ED             BCC.N    ??search_addr_sd_5
    510               
    511               if(retry>=100) 
   \                     ??search_addr_sd_7:
   \   000000A4   0xB2BF             UXTH     R7,R7
   \   000000A6   0x2F64             CMP      R7,#+100
   \   000000A8   0xBF24             ITT      CS 
   \   000000AA   0x....             LDRCS.N  R0,??DataTable14_7
   \   000000AC   0x2103             MOVCS    R1,#+3
    512                {
    513                  flag_err_sd=SDERR_ReadOverTime;
   \   000000AE   0xD209             BCS.N    ??search_addr_sd_8
    514                  flag_yes=0; //³¬Ê±³ö´í
    515                }
    516               else if(DBUF[0]!=0xeb||DBUF[1]!=0x58||DBUF[2]!=0x90)
   \   000000B0   0x7820             LDRB     R0,[R4, #+0]
   \   000000B2   0x28EB             CMP      R0,#+235
   \   000000B4   0xBF01             ITTTT    EQ 
   \   000000B6   0x7860             LDRBEQ   R0,[R4, #+1]
   \   000000B8   0x2858             CMPEQ    R0,#+88
   \   000000BA   0x78A0             LDRBEQ   R0,[R4, #+2]
   \   000000BC   0x2890             CMPEQ    R0,#+144
   \   000000BE   0xD007             BEQ.N    ??search_addr_sd_9
    517                {
    518                  flag_err_sd=SDERR_StartSector;
   \   000000C0   0x....             LDR.N    R0,??DataTable14_7
   \   000000C2   0x2104             MOVS     R1,#+4
   \                     ??search_addr_sd_8:
   \   000000C4   0x7001             STRB     R1,[R0, #+0]
    519                  flag_yes=0; //Æô¶¯ÉÈÇø³ö´í
   \   000000C6   0x2500             MOVS     R5,#+0
   \   000000C8   0xE002             B.N      ??search_addr_sd_9
    520                }
    521             }
    522            else
    523             {
    524               add_sta=0;
   \                     ??search_addr_sd_4:
   \   000000CA   0x....             LDR.N    R0,??DataTable14
   \   000000CC   0x2100             MOVS     R1,#+0
   \   000000CE   0x61C1             STR      R1,[R0, #+28]
    525             }
    526            
    527            sector_cluster=DBUF[13];    //¶ÁÈ¡Ã¿´Ø¶ÔÓ¦µÄÉÈÇøÊý
   \                     ??search_addr_sd_9:
   \   000000D0   0x7B60             LDRB     R0,[R4, #+13]
   \   000000D2   0x....             LDR.N    R6,??DataTable14
    528            sector_sta=DBUF[14]+((dword_sd)DBUF[15]<<8);   //¼ÆËãÆô¶¯ÉÈÇøÊý
    529            sector_fat=DBUF[36]+((dword_sd)DBUF[37]<<8)+((dword_sd)DBUF[38]<<16)+((dword_sd)DBUF[39]<<24);
   \   000000D4   0xF894 0x1025      LDRB     R1,[R4, #+37]
   \   000000D8   0x7330             STRB     R0,[R6, #+12]
   \   000000DA   0xF894 0x0024      LDRB     R0,[R4, #+36]
    530           //¼ÆËãfat±íËùÕ¼µÄÉÈÇøÊý 
    531              
    532           //¼ÆËã¸ùÄ¿Â¼,Êý¾ÝÉÈÇø,fat1ºÍfat2µÄÊ×µØÖ· 
    533            add_f1=add_sta+sector_sta;
   \   000000DE   0x7BA2             LDRB     R2,[R4, #+14]
   \   000000E0   0xEB10 0x2001      ADDS     R0,R0,R1, LSL #+8
   \   000000E4   0xF894 0x1026      LDRB     R1,[R4, #+38]
   \   000000E8   0xEB00 0x4001      ADD      R0,R0,R1, LSL #+16
   \   000000EC   0xF894 0x1027      LDRB     R1,[R4, #+39]
   \   000000F0   0xEB00 0x6001      ADD      R0,R0,R1, LSL #+24
   \   000000F4   0x69F1             LDR      R1,[R6, #+28]
   \   000000F6   0x1889             ADDS     R1,R1,R2
   \   000000F8   0x7BE2             LDRB     R2,[R4, #+15]
   \   000000FA   0xEB01 0x2102      ADD      R1,R1,R2, LSL #+8
   \   000000FE   0x6271             STR      R1,[R6, #+36]
    534            add_f2=add_f1+sector_fat;
   \   00000100   0x1841             ADDS     R1,R0,R1
    535            add_dir=add_f2+sector_fat;
   \   00000102   0x1840             ADDS     R0,R0,R1
   \   00000104   0x62B1             STR      R1,[R6, #+40]
   \   00000106   0x6230             STR      R0,[R6, #+32]
    536            
    537            if(flag_yes==0) CloseSD();
   \   00000108   0x2D00             CMP      R5,#+0
   \   0000010A   0xBF04             ITT      EQ 
   \   0000010C   0xE8BD 0x4FF1      POPEQ    {R0,R4-R11,LR}
   \   00000110   0x.... 0x....      BEQ.W    CloseSD
    538          }
   \   00000114   0xE8BD 0x8FF1      POP      {R0,R4-R11,PC}   ;; return
    539          /*
    540          º¯ÊýÃû³Æ£ºsearch_fat
    541          º¯Êý¹¦ÄÜ£ºËÑÑ°fat±í,ÕÒµ½×ã¹»¶àµÄ¿ÕÏÐÉÈÇø
    542          ±à Ð´ Õß£ºSword
    543          */

   \                                 In section .text, align 4, keep-with-next
    544          void search_fat(void)
    545          {
   \                     search_fat:
   \   00000000   0xE92D 0x4FF8      PUSH     {R3-R11,LR}
    546            byte_sd retry,r1,num,flag,flag_over=0;
    547            dword_sd i,j,k;   
    548            
    549            for(i=k=num=flag=0,j=12;i<10000;i++,j=0)
   \   00000004   0x2400             MOVS     R4,#+0
   \   00000006   0x2500             MOVS     R5,#+0
   \   00000008   0x46A2             MOV      R10,R4
   \   0000000A   0x46A3             MOV      R11,R4
   \   0000000C   0xF04F 0x080C      MOV      R8,#+12
   \   00000010   0x.... 0x....      LDR.W    R9,??DataTable14_6
   \   00000014   0x....             LDR.N    R6,??DataTable14
    550             {    //×î¶àÑ°ÕÒ10000¸öÉÈÇø
    551          //10000¸öÉÈÇø¶ÔÓ¦Ô¼1280000¸ö´Ø,°´Ò»´Ø4KËã,ÔòÎª5GµÄ¿Õ¼ä
    552               retry=0;
   \                     ??search_fat_0:
   \   00000016   0x2700             MOVS     R7,#+0
    553               do
    554                {
    555                  r1=sd_readsingleblock(DBUF,add_f1+i);
   \                     ??search_fat_1:
   \   00000018   0x6A70             LDR      R0,[R6, #+36]
   \   0000001A   0xEB0B 0x0100      ADD      R1,R11,R0
   \   0000001E   0x....             LDR.N    R0,??DataTable14_4
   \   00000020   0x.... 0x....      BL       sd_readsingleblock
    556                  C_WDOG();
   \   00000024   0xB672             CPSID i          
   \   00000026   0x....             LDR.N    R1,??DataTable14_3  ;; 0x4005200c
   \   00000028   0xF24A 0x6202      MOVW     R2,#+42498
   \   0000002C   0x800A             STRH     R2,[R1, #+0]
   \   0000002E   0xF24B 0x4280      MOVW     R2,#+46208
   \   00000032   0x800A             STRH     R2,[R1, #+0]
   \   00000034   0x....             LDR.N    R1,??DataTable14_5
   \   00000036   0x7809             LDRB     R1,[R1, #+0]
   \   00000038   0xB101             CBZ.N    R1,??search_fat_2
   \   0000003A   0xB662             CPSIE i          
    557                  retry++;
   \                     ??search_fat_2:
   \   0000003C   0x1C7F             ADDS     R7,R7,#+1
    558                } while(r1!=0x00&&retry<100);
   \   0000003E   0xB110             CBZ.N    R0,??search_fat_3
   \   00000040   0xB2FF             UXTB     R7,R7
   \   00000042   0x2F64             CMP      R7,#+100
   \   00000044   0xD3E8             BCC.N    ??search_fat_1
    559               
    560               if(retry>=100) 
   \                     ??search_fat_3:
   \   00000046   0xB2F8             UXTB     R0,R7
   \   00000048   0x2864             CMP      R0,#+100
   \   0000004A   0xD219             BCS.N    ??search_fat_4
   \   0000004C   0x....             LDR.N    R0,??DataTable14_4
   \   0000004E   0xEA4F 0x11CB      LSL      R1,R11,#+7
   \   00000052   0x4440             ADD      R0,R8,R0
   \   00000054   0xF240 0x33B6      MOVW     R3,#+950
    561                {
    562                  flag_err_sd=SDERR_ReadOverTime;
    563                  break; //³¬Ê±³ö´í
    564                }
    565               for(;j<512;j+=4)
    566                {
    567                  if(DBUF[j]==0x00&&DBUF[j+1]==0x00&&DBUF[j+2]==0x00&&DBUF[j+3]==0x00) 
   \                     ??search_fat_5:
   \   00000058   0x7802             LDRB     R2,[R0, #+0]
   \   0000005A   0x2A00             CMP      R2,#+0
   \   0000005C   0xBF04             ITT      EQ 
   \   0000005E   0x7842             LDRBEQ   R2,[R0, #+1]
   \   00000060   0x2A00             CMPEQ    R2,#+0
   \   00000062   0xD122             BNE.N    ??search_fat_6
   \   00000064   0x7882             LDRB     R2,[R0, #+2]
   \   00000066   0x2A00             CMP      R2,#+0
   \   00000068   0xBF04             ITT      EQ 
   \   0000006A   0x78C2             LDRBEQ   R2,[R0, #+3]
   \   0000006C   0x2A00             CMPEQ    R2,#+0
   \   0000006E   0xD11C             BNE.N    ??search_fat_6
    568                   {       //±ê¼Ç¿ÉÓÃ´Ø
    569                     if(flag==0)
   \   00000070   0xB954             CBNZ.N   R4,??search_fat_7
    570                      {         //Ò»¶Î¿ÉÓÃ´ØµÄµÚÒ»¸ö
    571                        next_cluster[k]=((i<<7)+(j>>2));
   \   00000072   0xEB01 0x0298      ADD      R2,R1,R8, LSR #+2
   \   00000076   0xF849 0x202A      STR      R2,[R9, R10, LSL #+2]
    572                        num=flag=1;
   \   0000007A   0x2401             MOVS     R4,#+1
   \   0000007C   0x2501             MOVS     R5,#+1
   \   0000007E   0xE010             B.N      ??search_fat_8
    573                      }
   \                     ??search_fat_4:
   \   00000080   0x....             LDR.N    R0,??DataTable14_7
   \   00000082   0x2103             MOVS     R1,#+3
   \   00000084   0x7001             STRB     R1,[R0, #+0]
   \   00000086   0xE030             B.N      ??search_fat_9
    574                     else
    575                      {     //¼ÇÂ¼¸Ã¶Î´ØµÄ¸öÊý
    576                        num++;
   \                     ??search_fat_7:
   \   00000088   0x1C6D             ADDS     R5,R5,#+1
   \   0000008A   0xB2ED             UXTB     R5,R5
    577                        if(num==250)
   \   0000008C   0x2DFA             CMP      R5,#+250
   \   0000008E   0xD108             BNE.N    ??search_fat_8
    578                         {       //·ÀÖ¹Ò»¶Î´ØÌ«³¤±äÁ¿Òç³ö
    579                           next_cluster[k]|=(((dword_sd)num)<<24L);
   \   00000090   0xF859 0x202A      LDR      R2,[R9, R10, LSL #+2]
    580                           k++;flag=0;
   \   00000094   0x2400             MOVS     R4,#+0
   \   00000096   0xEA42 0x6205      ORR      R2,R2,R5, LSL #+24
   \   0000009A   0xF849 0x202A      STR      R2,[R9, R10, LSL #+2]
   \   0000009E   0xF10A 0x0A01      ADD      R10,R10,#+1
    581                         }
    582                      }
    583                     cluster_number++; 
   \                     ??search_fat_8:
   \   000000A2   0x8A72             LDRH     R2,[R6, #+18]
   \   000000A4   0x1C52             ADDS     R2,R2,#+1
   \   000000A6   0x8272             STRH     R2,[R6, #+18]
   \   000000A8   0xE00A             B.N      ??search_fat_10
    584                   }
    585                  else
    586                   {
    587                     if(flag==1)
   \                     ??search_fat_6:
   \   000000AA   0x2C01             CMP      R4,#+1
   \   000000AC   0xD107             BNE.N    ??search_fat_11
    588                      {       //½«Ö¸ÕëÖ¸ÏòÏÂÒ»×é´Ø
    589                        next_cluster[k]|=(((dword_sd)num)<<24L);
   \   000000AE   0xF859 0x202A      LDR      R2,[R9, R10, LSL #+2]
   \   000000B2   0xEA42 0x6205      ORR      R2,R2,R5, LSL #+24
   \   000000B6   0xF849 0x202A      STR      R2,[R9, R10, LSL #+2]
    590                        k++;
   \   000000BA   0xF10A 0x0A01      ADD      R10,R10,#+1
    591                      }
    592                     flag=0;
   \                     ??search_fat_11:
   \   000000BE   0x2400             MOVS     R4,#+0
    593                   }
    594                  if(cluster_number==SD_MAX_cluster||k==SD_MAX_segment) 
   \                     ??search_fat_10:
   \   000000C0   0x8A72             LDRH     R2,[R6, #+18]
   \   000000C2   0x429A             CMP      R2,R3
   \   000000C4   0xD026             BEQ.N    ??search_fat_12
   \   000000C6   0xF1BA 0x0F28      CMP      R10,#+40
   \   000000CA   0xD00E             BEQ.N    ??search_fat_9
   \   000000CC   0xF108 0x0804      ADD      R8,R8,#+4
   \   000000D0   0x1D00             ADDS     R0,R0,#+4
   \   000000D2   0xF44F 0x7200      MOV      R2,#+512
   \   000000D6   0x4590             CMP      R8,R2
   \   000000D8   0xD3BE             BCC.N    ??search_fat_5
   \   000000DA   0xF10B 0x0B01      ADD      R11,R11,#+1
   \   000000DE   0xF242 0x7010      MOVW     R0,#+10000
   \   000000E2   0xF04F 0x0800      MOV      R8,#+0
   \   000000E6   0x4583             CMP      R11,R0
   \   000000E8   0xD395             BCC.N    ??search_fat_0
    595                   {  //ÒÑÕÒµ½×ã¹»¶àµÄ¿ÉÓÃ´Ø»òÊý×é´æÂú
    596                     if(cluster_number==SD_MAX_cluster)
    597                      {
    598                        next_cluster[k]|=(((dword_sd)num)<<24L);
    599                      }
    600                     flag_over=1;
    601                     break;
    602                   } 
    603                }
    604               
    605               if(flag_over) break; 
    606             }
    607            if(cluster_number<SD_MAX_cluster) 
   \                     ??search_fat_9:
   \   000000EA   0x8A70             LDRH     R0,[R6, #+18]
   \   000000EC   0xF240 0x31B6      MOVW     R1,#+950
   \   000000F0   0x4288             CMP      R0,R1
   \   000000F2   0xD20D             BCS.N    ??search_fat_13
    608             {
    609               if(flag_err_sd!=SDERR_ReadOverTime)
   \   000000F4   0x....             LDR.N    R1,??DataTable14_7
   \   000000F6   0x780A             LDRB     R2,[R1, #+0]
   \   000000F8   0x2A03             CMP      R2,#+3
   \   000000FA   0xBF1C             ITT      NE 
   \   000000FC   0x2205             MOVNE    R2,#+5
   \   000000FE   0x700A             STRBNE   R2,[R1, #+0]
    610                 flag_err_sd=SDERR_NoCluster;
    611               if(cluster_number==0||flag_err_sd==SDERR_ReadOverTime)
   \   00000100   0x2800             CMP      R0,#+0
   \   00000102   0xBF19             ITTEE    NE 
   \   00000104   0x7808             LDRBNE   R0,[R1, #+0]
   \   00000106   0x2803             CMPNE    R0,#+3
   \   00000108   0xE8BD 0x4FF1      POPEQ    {R0,R4-R11,LR}
   \   0000010C   0x.... 0x....      BEQ.W    CloseSD
    612                { //Èç¹û´ØÊý²»¹»µ«²¢²»ÊÇÒ»¸ö´Ø¶¼Ã»ÕÒµ½µÄ»°Ôò¼ÌÐøÐ´¿¨
    613                  CloseSD(); //Ã»ÓÐÕÒµ½ÓÐÓÃ´Ø»ò¶ÁÈ¡³¬Ê±Ôò¹Ø±ÕSPI 
    614                }
    615             }
    616          }
   \                     ??search_fat_13:
   \   00000110   0xE8BD 0x8FF1      POP      {R0,R4-R11,PC}   ;; return
   \                     ??search_fat_12:
   \   00000114   0xF859 0x002A      LDR      R0,[R9, R10, LSL #+2]
   \   00000118   0xEA40 0x6005      ORR      R0,R0,R5, LSL #+24
   \   0000011C   0xF849 0x002A      STR      R0,[R9, R10, LSL #+2]
   \   00000120   0xE8BD 0x8FF1      POP      {R0,R4-R11,PC}
    617          /*
    618          º¯ÊýÃû³Æ£ºfat32_init
    619          º¯Êý¹¦ÄÜ£ºfat32ÎÄ¼þÏµÍ³µÄ³õÊ¼»¯
    620          ±à Ð´ Õß£ºSword
    621          */

   \                                 In section .text, align 2, keep-with-next
    622          void fat32_init(void)
    623          {
   \                     fat32_init:
   \   00000000   0xB510             PUSH     {R4,LR}
    624            search_addr_sd();
   \   00000002   0x.... 0x....      BL       search_addr_sd
    625            if(sd_yes)
   \   00000006   0x....             LDR.N    R4,??DataTable14_8
   \   00000008   0x7820             LDRB     R0,[R4, #+0]
   \   0000000A   0xB1C0             CBZ.N    R0,??fat32_init_0
    626             {
    627               SetSD_High();
   \   0000000C   0x.... 0x....      BL       SetSD_High
    628               search_fat(); 
   \   00000010   0x.... 0x....      BL       search_fat
    629            
    630               if(sd_yes==1)
   \   00000014   0x7820             LDRB     R0,[R4, #+0]
   \   00000016   0x2801             CMP      R0,#+1
   \   00000018   0xD111             BNE.N    ??fat32_init_0
    631                {
    632                  p_datasector=add_dir+((dword_sd)((next_cluster[0]&0x00FFFFFF)-2))*sector_cluster; 
   \   0000001A   0x....             LDR.N    R0,??DataTable14_6
   \   0000001C   0x....             LDR.N    R1,??DataTable14
   \   0000001E   0x6800             LDR      R0,[R0, #+0]
   \   00000020   0x7B0C             LDRB     R4,[R1, #+12]
   \   00000022   0x0203             LSLS     R3,R0,#+8
   \   00000024   0x0A1B             LSRS     R3,R3,#+8
   \   00000026   0x6A0A             LDR      R2,[R1, #+32]
   \   00000028   0x1E9B             SUBS     R3,R3,#+2
   \   0000002A   0xFB04 0x2203      MLA      R2,R4,R3,R2
    633                //×¢Òâ,Êý¾ÝÇøÊÇ´ÓµÚ¶þ´Ø¿ªÊ¼µÄ,ËùÒÔÒª¼õ2  
    634                  p_sector=0;
    635                  ram_number=cnt_cluster=0;
    636                  p_segcluster=p_cluster=0;
    637                  num_segcluster=(next_cluster[0]&0xFF000000)>>24;
   \   0000002E   0x0E00             LSRS     R0,R0,#+24
   \   00000030   0x62CA             STR      R2,[R1, #+44]
   \   00000032   0x2200             MOVS     R2,#+0
   \   00000034   0x820A             STRH     R2,[R1, #+16]
   \   00000036   0x614A             STR      R2,[R1, #+20]
   \   00000038   0x738A             STRB     R2,[R1, #+14]
   \   0000003A   0x830A             STRH     R2,[R1, #+24]
   \   0000003C   0x7348             STRB     R0,[R1, #+13]
    638                }
    639             }
    640          }
   \                     ??fat32_init_0:
   \   0000003E   0xBD10             POP      {R4,PC}          ;; return
    641          /*
    642          º¯ÊýÃû³Æ£ºSD_System_Init
    643          º¯Êý¹¦ÄÜ£ºSD¿¨¼´Õû¸öÎÄ¼þÏµÍ³µÄ³õÊ¼»¯
    644                    (Ö÷º¯ÊýÖÐÖ±½Óµ÷ÓÃ¸Ãº¯Êý¾Í¿ÉÍê³É¶ÔSD¿¨È«²¿µÄ³õÊ¼»¯¹¤×÷)
    645          ±à Ð´ Õß£ºSword
    646          */

   \                                 In section .text, align 4, keep-with-next
    647          void SD_System_Init(void)
    648          {
   \                     SD_System_Init:
   \   00000000   0xE92D 0x43F8      PUSH     {R3-R9,LR}
    649            byte_sd retry=10;
    650          
    651            sd_yes=1;      //Ä¬ÈÏSD¿¨ÒÑ¾ÍÐ÷,Èç¹û³öÎÊÌâ,ºóÃæÖ´ÐÐCloseSD()Ê±»áÇåÁã¸Ã±äÁ¿
   \   00000004   0x....             LDR.N    R0,??DataTable14_8
   \   00000006   0x2101             MOVS     R1,#+1
   \   00000008   0x7001             STRB     R1,[R0, #+0]
    652            Flag_SDRdy=1;  //½«SD¿¨µÄ×´Ì¬±ê¼ÇÎª¿ÉÓÃ
   \   0000000A   0x....             LDR.N    R0,??DataTable14_1
    653            flag_err_sd=SD_Normal;
   \   0000000C   0x....             LDR.N    R5,??DataTable14_7
   \   0000000E   0x7001             STRB     R1,[R0, #+0]
   \   00000010   0x2000             MOVS     R0,#+0
   \   00000012   0x240A             MOVS     R4,#+10
   \   00000014   0x7028             STRB     R0,[R5, #+0]
    654            SD_driver_Init();
   \   00000016   0x.... 0x....      BL       SD_driver_Init
    655            SetSD_Low();
   \   0000001A   0x.... 0x....      BL       SetSD_Low
   \   0000001E   0x....             LDR.N    R6,??DataTable14_5
   \   00000020   0xF24B 0x4780      MOVW     R7,#+46208
   \   00000024   0x.... 0x....      LDR.W    R8,??DataTable14_3  ;; 0x4005200c
   \   00000028   0xF24A 0x6902      MOVW     R9,#+42498
   \   0000002C   0xE009             B.N      ??SD_System_Init_0
    656            while(sd_init()&&retry!=0) 
   \                     ??SD_System_Init_1:
   \   0000002E   0xB174             CBZ.N    R4,??SD_System_Init_2
    657             {
    658               retry--;
   \   00000030   0x1E64             SUBS     R4,R4,#+1
    659               C_WDOG();
   \   00000032   0xB672             CPSID i          
   \   00000034   0xF8A8 0x9000      STRH     R9,[R8, #+0]
   \   00000038   0xF8A8 0x7000      STRH     R7,[R8, #+0]
   \   0000003C   0x7830             LDRB     R0,[R6, #+0]
   \   0000003E   0xB100             CBZ.N    R0,??SD_System_Init_0
   \   00000040   0xB662             CPSIE i          
    660             }
   \                     ??SD_System_Init_0:
   \   00000042   0x.... 0x....      BL       sd_init
   \   00000046   0x2800             CMP      R0,#+0
   \   00000048   0xB2E4             UXTB     R4,R4
   \   0000004A   0xD1F0             BNE.N    ??SD_System_Init_1
    661          
    662            if(retry==0)         //Èç¹ûsd¿¨³õÊ¼»¯³¬Ê±²»³É¹¦£¬Ôò¹Ø±Õspi 
   \   0000004C   0xB914             CBNZ.N   R4,??SD_System_Init_3
    663             {
    664               CloseSD();
   \                     ??SD_System_Init_2:
   \   0000004E   0x.... 0x....      BL       CloseSD
   \   00000052   0xE00A             B.N      ??SD_System_Init_4
    665             }
    666            else          
    667             {
    668               flag_err_sd=SD_Normal;
   \                     ??SD_System_Init_3:
   \   00000054   0x7028             STRB     R0,[R5, #+0]
    669               fat32_init(); //ÎÄ¼þÏµÍ³µÄ³õÊ¼»¯
   \   00000056   0x.... 0x....      BL       fat32_init
    670               
    671             #ifdef EN_SDbuf   //³õÊ¼»¯µÚ¶þ»º´æ
    672             #ifdef EN_Cnt_SDbuf  
    673               Cnt_SDbufS1=0;
    674               Cnt_SDbufS2=0;
    675               Cnt_SDbufS3=0;
    676               Cnt_SDbufS4=0;
    677               Cnt_SDbufS5=0;
    678             #endif
    679               Stat_SDbuf=0;
   \   0000005A   0x....             LDR.N    R0,??DataTable14
   \   0000005C   0x2100             MOVS     R1,#+0
   \   0000005E   0x73C1             STRB     R1,[R0, #+15]
    680               pBuf_Now=DBUF; //Éè¶¨»º´æÖ¸ÕëµÄ³õÊ¼Öµ
   \   00000060   0x....             LDR.N    R1,??DataTable14_4
   \   00000062   0x6341             STR      R1,[R0, #+52]
    681               pBuf_2=DBUF2;
   \   00000064   0xF200 0x013C      ADDW     R1,R0,#+60
   \   00000068   0x6381             STR      R1,[R0, #+56]
    682             #endif
    683             }
    684            
    685            sd_initover = 1;
   \                     ??SD_System_Init_4:
   \   0000006A   0x2101             MOVS     R1,#+1
   \   0000006C   0x7031             STRB     R1,[R6, #+0]
    686          }
   \   0000006E   0xE8BD 0x83F1      POP      {R0,R4-R9,PC}    ;; return
    687          /*
    688          º¯ÊýÃû³Æ£ºSD_System_Init_Ext
    689          º¯Êý¹¦ÄÜ£ºÀ©Õ¹°æµÄSD¿¨ÏµÍ³³õÊ¼»¯º¯Êý
    690                    (ÔÊÐíÔÚ³õÊ¼»¯Ê±Ô¤ÏÈÐ´Èë²¿·ÖÊý¾Ý)
    691          Èë¿Ú²ÎÊý£ºpbuf:³õÊ¼Êý¾ÝÖ¸Õë
    692                   len:Êý¾Ý³¤¶È
    693          ±à Ð´ Õß£ºSword
    694          */

   \                                 In section .text, align 2, keep-with-next
    695          void SD_System_Init_Ext(byte_sd * pbuf , word_sd len)
    696          {
   \                     SD_System_Init_Ext:
   \   00000000   0xB570             PUSH     {R4-R6,LR}
   \   00000002   0x4604             MOV      R4,R0
   \   00000004   0x460D             MOV      R5,R1
    697          	word_sd i;
    698          	
    699          	SD_System_Init();
   \   00000006   0x.... 0x....      BL       SD_System_Init
    700          	
    701          	if(sd_yes != 0)
   \   0000000A   0x....             LDR.N    R0,??DataTable14_8
   \   0000000C   0x7800             LDRB     R0,[R0, #+0]
   \   0000000E   0xB158             CBZ.N    R0,??SD_System_Init_Ext_0
    702          	{
    703          		sd_initover = 0;
   \   00000010   0x....             LDR.N    R6,??DataTable14_5
   \   00000012   0x2000             MOVS     R0,#+0
   \   00000014   0x7030             STRB     R0,[R6, #+0]
    704          		
    705          		for(i=0;i<len;i++)
   \   00000016   0xB12D             CBZ.N    R5,??SD_System_Init_Ext_1
    706          		{
    707          			writebyte_ram(*pbuf++);
   \                     ??SD_System_Init_Ext_2:
   \   00000018   0xF814 0x0B01      LDRB     R0,[R4], #+1
   \   0000001C   0x.... 0x....      BL       writebyte_ram
    708          		}
   \   00000020   0x1E6D             SUBS     R5,R5,#+1
   \   00000022   0xD1F9             BNE.N    ??SD_System_Init_Ext_2
    709          		
    710          		sd_initover = 1;
   \                     ??SD_System_Init_Ext_1:
   \   00000024   0x2001             MOVS     R0,#+1
   \   00000026   0x7030             STRB     R0,[R6, #+0]
    711          	}
    712          }
   \                     ??SD_System_Init_Ext_0:
   \   00000028   0xBD70             POP      {R4-R6,PC}       ;; return
    713          /*
    714          º¯ÊýÃû³Æ£ºtest_sd
    715          º¯Êý¹¦ÄÜ£º²âÊÔSD¿¨
    716          ±à Ð´ Õß£ºSword
    717          */

   \                                 In section .text, align 2, keep-with-next
    718          void test_sd(void)
    719          {
   \                     test_sd:
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0xB08E             SUB      SP,SP,#+56
    720            byte_sd const str[]="If you see these words, you SD and hardware is OK!";
   \   00000004   0xA800             ADD      R0,SP,#+0
   \   00000006   0x.... 0x....      ADR.W    R1,`?<Constant "If you see these word...">`
   \   0000000A   0x2233             MOVS     R2,#+51
   \   0000000C   0x.... 0x....      BL       __aeabi_memcpy4
    721            word_sd i;
    722            if(sd_yes)
   \   00000010   0x....             LDR.N    R0,??DataTable14_8
   \   00000012   0x7800             LDRB     R0,[R0, #+0]
   \   00000014   0xB1A8             CBZ.N    R0,??test_sd_0
    723             { 
    724               file_name[0]='T';
   \   00000016   0x....             LDR.N    R0,??DataTable14
   \   00000018   0x2154             MOVS     R1,#+84
   \   0000001A   0x7001             STRB     R1,[R0, #+0]
    725               file_name[1]='E';
   \   0000001C   0x2145             MOVS     R1,#+69
   \   0000001E   0x7041             STRB     R1,[R0, #+1]
    726               file_name[2]='S';
   \   00000020   0x2153             MOVS     R1,#+83
   \   00000022   0x7081             STRB     R1,[R0, #+2]
    727               file_name[3]='T';
   \   00000024   0x2154             MOVS     R1,#+84
   \   00000026   0x70C1             STRB     R1,[R0, #+3]
    728               file_name[4]='-';
   \   00000028   0x212D             MOVS     R1,#+45
   \   0000002A   0x7101             STRB     R1,[R0, #+4]
    729               
    730               for(i=0;str[i]!='\0';i++)
   \   0000002C   0xAC00             ADD      R4,SP,#+0
   \   0000002E   0xE003             B.N      ??test_sd_1
    731                 writebyte_ram(str[i]);
   \                     ??test_sd_2:
   \   00000030   0xF814 0x0B01      LDRB     R0,[R4], #+1
   \   00000034   0x.... 0x....      BL       writebyte_ram
   \                     ??test_sd_1:
   \   00000038   0x7820             LDRB     R0,[R4, #+0]
   \   0000003A   0x2800             CMP      R0,#+0
   \   0000003C   0xD1F8             BNE.N    ??test_sd_2
    732                      
    733               write_stop();
   \   0000003E   0x.... 0x....      BL       write_stop
    734             }
    735          }
   \                     ??test_sd_0:
   \   00000042   0xB00E             ADD      SP,SP,#+56
   \   00000044   0xBD10             POP      {R4,PC}          ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable14:
   \   00000000   0x........         DC32     file_name

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable14_1:
   \   00000000   0x........         DC32     Flag_SDRdy

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable14_2:
   \   00000000   0x001E8480         DC32     0x1e8480

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable14_3:
   \   00000000   0x4005200C         DC32     0x4005200c

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable14_4:
   \   00000000   0x........         DC32     DBUF

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable14_5:
   \   00000000   0x........         DC32     sd_initover

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable14_6:
   \   00000000   0x........         DC32     next_cluster

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable14_7:
   \   00000000   0x........         DC32     flag_err_sd

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable14_8:
   \   00000000   0x........         DC32     sd_yes

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "If you see these word...">`:
   \   00000000   0x49 0x66          DC8 49H, 66H, 20H, 79H, 6FH, 75H, 20H, 73H
   \              0x20 0x79    
   \              0x6F 0x75    
   \              0x20 0x73    
   \   00000008   0x65 0x65          DC8 65H, 65H, 20H, 74H, 68H, 65H, 73H, 65H
   \              0x20 0x74    
   \              0x68 0x65    
   \              0x73 0x65    
   \   00000010   0x20 0x77          DC8 20H, 77H, 6FH, 72H, 64H, 73H, 2CH, 20H
   \              0x6F 0x72    
   \              0x64 0x73    
   \              0x2C 0x20    
   \   00000018   0x79 0x6F          DC8 79H, 6FH, 75H, 20H, 53H, 44H, 20H, 61H
   \              0x75 0x20    
   \              0x53 0x44    
   \              0x20 0x61    
   \   00000020   0x6E 0x64          DC8 6EH, 64H, 20H, 68H, 61H, 72H, 64H, 77H
   \              0x20 0x68    
   \              0x61 0x72    
   \              0x64 0x77    
   \   00000028   0x61 0x72          DC8 61H, 72H, 65H, 20H, 69H, 73H, 20H, 4FH
   \              0x65 0x20    
   \              0x69 0x73    
   \              0x20 0x4F    
   \   00000030   0x4B 0x21          DC8 4BH, 21H, 0
   \              0x00         
   \   00000033   0x00               DC8 0
    736          
    737          #endif

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       32  SD_System_Init
             32 -> CloseSD
             32 -> SD_driver_Init
             32 -> SetSD_Low
             32 -> fat32_init
             32 -> sd_init
       16  SD_System_Init_Ext
             16 -> SD_System_Init
             16 -> writebyte_ram
       16  SD_WriteBlock_UserBuf
             16 -> Wait_SDRdy
             16 -> sd_writesingleblock
        8  fat32_init
              8 -> SetSD_High
              8 -> search_addr_sd
              8 -> search_fat
       40  search_addr_sd
             40 -> CloseSD
             40 -> sd_readsingleblock
       40  search_fat
             40 -> CloseSD
             40 -> sd_readsingleblock
       64  test_sd
             64 -> __aeabi_memcpy4
             64 -> write_stop
             64 -> writebyte_ram
       40  write_dir
             40 -> CloseSD
             40 -> __aeabi_memcpy4
             40 -> sd_readsingleblock
             40 -> sd_writesingleblock
       48  write_fat
             48 -> sd_readsingleblock
             48 -> sd_writesingleblock
       16  write_stop
              0 -> CloseSD
             16 -> Wait_SDRdy
             16 -> sd_writesingleblock
             16 -> write_dir
             16 -> write_fat
             16 -> writeram_sd
        0  writebyte_ram
              0 -> writeram_sd
       24  writeram_sd
             24 -> SD_WriteBlock_UserBuf


   Section sizes:

   Bytes  Function/Label
   -----  --------------
      52  ?<Constant "If you see these word...">
       4  ??DataTable14
       4  ??DataTable14_1
       4  ??DataTable14_2
       4  ??DataTable14_3
       4  ??DataTable14_4
       4  ??DataTable14_5
       4  ??DataTable14_6
       4  ??DataTable14_7
       4  ??DataTable14_8
     512  DBUF
     114  SD_System_Init
      42  SD_System_Init_Ext
     182  SD_WriteBlock_UserBuf
      32  dir_sd
      64  fat32_init
     572  file_name
          sector_cluster
          num_segcluster
          p_cluster
          Stat_SDbuf
          p_sector
          cluster_number
          ram_number
          cnt_cluster
          p_segcluster
          add_sta
          add_dir
          add_f1
          add_f2
          p_datasector
          Sector_SDbuf
          pBuf_Now
          pBuf_2
          DBUF2
      16  file_property
       4  file_size
     160  next_cluster
     280  search_addr_sd
     292  search_fat
       4  sector_fat
       4  sector_sta
      70  test_sd
     670  write_dir
     474  write_fat
     108  write_stop
      40  writebyte_ram
     146  writeram_sd

 
   684 bytes in section .bss
   572 bytes in section .data
 2 618 bytes in section .text
 
 2 618 bytes of CODE memory
 1 256 bytes of DATA memory

Errors: none
Warnings: 1
