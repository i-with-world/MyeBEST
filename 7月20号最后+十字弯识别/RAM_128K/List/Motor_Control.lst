###############################################################################
#                                                                             #
#                                                       18/Jan/2013  21:34:28 #
# IAR ANSI C/C++ Compiler V6.30.6.23336/W32 EVALUATION for ARM                #
# Copyright 1999-2012 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  thumb                                                    #
#    Endian       =  little                                                   #
#    Source file  =  E:\¿ÎÍâ×ÊÁÏ\·ÉË¼¿¨¶ûÖÇÄÜ³µ\ÈÕ³£×ÊÁÏ\µÚ°Ë½ì×ÊÁÏ\µÚ°Ë½ìÖÇÄ #
#                    Ü³µ\Ö±Á¢³µµ÷ÊÔ\ARM\ARMÑ§Ï°Ê¹ÓÃ\20130118\V0.0.0\MyFunctio #
#                    n\Motor_Control.c                                        #
#    Command line =  E:\¿ÎÍâ×ÊÁÏ\·ÉË¼¿¨¶ûÖÇÄÜ³µ\ÈÕ³£×ÊÁÏ\µÚ°Ë½ì×ÊÁÏ\µÚ°Ë½ìÖÇÄ #
#                    Ü³µ\Ö±Á¢³µµ÷ÊÔ\ARM\ARMÑ§Ï°Ê¹ÓÃ\20130118\V0.0.0\MyFunctio #
#                    n\Motor_Control.c -D IAR -lCN                            #
#                    E:\¿ÎÍâ×ÊÁÏ\·ÉË¼¿¨¶ûÖÇÄÜ³µ\ÈÕ³£×ÊÁÏ\µÚ°Ë½ì×ÊÁÏ\µÚ°Ë½ìÖÇÄ #
#                    Ü³µ\Ö±Á¢³µµ÷ÊÔ\ARM\ARMÑ§Ï°Ê¹ÓÃ\20130118\V0.0.0\RAM_128K\ #
#                    List\ -lB E:\¿ÎÍâ×ÊÁÏ\·ÉË¼¿¨¶ûÖÇÄÜ³µ\ÈÕ³£×ÊÁÏ\µÚ°Ë½ì×ÊÁÏ #
#                    \µÚ°Ë½ìÖÇÄÜ³µ\Ö±Á¢³µµ÷ÊÔ\ARM\ARMÑ§Ï°Ê¹ÓÃ\20130118\V0.0.0 #
#                    \RAM_128K\List\ -o E:\¿ÎÍâ×ÊÁÏ\·ÉË¼¿¨¶ûÖÇÄÜ³µ\ÈÕ³£×ÊÁÏ\µ #
#                    Ú°Ë½ì×ÊÁÏ\µÚ°Ë½ìÖÇÄÜ³µ\Ö±Á¢³µµ÷ÊÔ\ARM\ARMÑ§Ï°Ê¹ÓÃ\201301 #
#                    18\V0.0.0\RAM_128K\Obj\ --no_cse --no_unroll             #
#                    --no_inline --no_code_motion --no_tbaa --no_clustering   #
#                    --no_scheduling --debug --endian=little --cpu=Cortex-M4  #
#                    -e --fpu=None --dlib_config                              #
#                    D:\Tools\IAR6.30\arm\INC\c\DLib_Config_Normal.h -I       #
#                    E:\¿ÎÍâ×ÊÁÏ\·ÉË¼¿¨¶ûÖÇÄÜ³µ\ÈÕ³£×ÊÁÏ\µÚ°Ë½ì×ÊÁÏ\µÚ°Ë½ìÖÇÄ #
#                    Ü³µ\Ö±Á¢³µµ÷ÊÔ\ARM\ARMÑ§Ï°Ê¹ÓÃ\20130118\V0.0.0\Library\C #
#                    PU\ -I E:\¿ÎÍâ×ÊÁÏ\·ÉË¼¿¨¶ûÖÇÄÜ³µ\ÈÕ³£×ÊÁÏ\µÚ°Ë½ì×ÊÁÏ\µÚ #
#                    °Ë½ìÖÇÄÜ³µ\Ö±Á¢³µµ÷ÊÔ\ARM\ARMÑ§Ï°Ê¹ÓÃ\20130118\V0.0.0\Li #
#                    brary\Drivers\ADC\ -I E:\¿ÎÍâ×ÊÁÏ\·ÉË¼¿¨¶ûÖÇÄÜ³µ\ÈÕ³£×ÊÁ #
#                    Ï\µÚ°Ë½ì×ÊÁÏ\µÚ°Ë½ìÖÇÄÜ³µ\Ö±Á¢³µµ÷ÊÔ\ARM\ARMÑ§Ï°Ê¹ÓÃ\201 #
#                    30118\V0.0.0\Library\Drivers\FTM\ -I                     #
#                    E:\¿ÎÍâ×ÊÁÏ\·ÉË¼¿¨¶ûÖÇÄÜ³µ\ÈÕ³£×ÊÁÏ\µÚ°Ë½ì×ÊÁÏ\µÚ°Ë½ìÖÇÄ #
#                    Ü³µ\Ö±Á¢³µµ÷ÊÔ\ARM\ARMÑ§Ï°Ê¹ÓÃ\20130118\V0.0.0\Library\D #
#                    rivers\GPIO\ -I E:\¿ÎÍâ×ÊÁÏ\·ÉË¼¿¨¶ûÖÇÄÜ³µ\ÈÕ³£×ÊÁÏ\µÚ°Ë #
#                    ½ì×ÊÁÏ\µÚ°Ë½ìÖÇÄÜ³µ\Ö±Á¢³µµ÷ÊÔ\ARM\ARMÑ§Ï°Ê¹ÓÃ\20130118\ #
#                    V0.0.0\Library\Drivers\PIT\ -I                           #
#                    E:\¿ÎÍâ×ÊÁÏ\·ÉË¼¿¨¶ûÖÇÄÜ³µ\ÈÕ³£×ÊÁÏ\µÚ°Ë½ì×ÊÁÏ\µÚ°Ë½ìÖÇÄ #
#                    Ü³µ\Ö±Á¢³µµ÷ÊÔ\ARM\ARMÑ§Ï°Ê¹ÓÃ\20130118\V0.0.0\MyFunctio #
#                    n\ -Ol                                                   #
#    List file    =  E:\¿ÎÍâ×ÊÁÏ\·ÉË¼¿¨¶ûÖÇÄÜ³µ\ÈÕ³£×ÊÁÏ\µÚ°Ë½ì×ÊÁÏ\µÚ°Ë½ìÖÇÄ #
#                    Ü³µ\Ö±Á¢³µµ÷ÊÔ\ARM\ARMÑ§Ï°Ê¹ÓÃ\20130118\V0.0.0\RAM_128K\ #
#                    List\Motor_Control.lst                                   #
#    Object file  =  E:\¿ÎÍâ×ÊÁÏ\·ÉË¼¿¨¶ûÖÇÄÜ³µ\ÈÕ³£×ÊÁÏ\µÚ°Ë½ì×ÊÁÏ\µÚ°Ë½ìÖÇÄ #
#                    Ü³µ\Ö±Á¢³µµ÷ÊÔ\ARM\ARMÑ§Ï°Ê¹ÓÃ\20130118\V0.0.0\RAM_128K\ #
#                    Obj\Motor_Control.o                                      #
#                                                                             #
#                                                                             #
###############################################################################

E:\¿ÎÍâ×ÊÁÏ\·ÉË¼¿¨¶ûÖÇÄÜ³µ\ÈÕ³£×ÊÁÏ\µÚ°Ë½ì×ÊÁÏ\µÚ°Ë½ìÖÇÄÜ³µ\Ö±Á¢³µµ÷ÊÔ\ARM\ARMÑ§Ï°Ê¹ÓÃ\20130118\V0.0.0\MyFunction\Motor_Control.c
      1          #include "AllHeaders.h"
      2          
      3          /********************²âËÙÏà¹ØÁ¿¶¨Òå************************/

   \                                 In section .bss, align 2
      4          int16s_t   NowSpeed_R = 0;  
   \                     NowSpeed_R:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
      5          int16s_t   NowSpeed_L = 0;
   \                     NowSpeed_L:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
      6          int16s_t   NowSpeed_R_Temp = 0;  
   \                     NowSpeed_R_Temp:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
      7          int16s_t   NowSpeed_L_Temp = 0;
   \                     NowSpeed_L_Temp:
   \   00000000                      DS8 2
      8          /********************µç»úÊä³öÏà¹ØÁ¿¶¨Òå*********************/

   \                                 In section .bss, align 2
      9          int16s_t  ObjectSpeed=0;	                 //Ä¿±êËÙ¶È
   \                     ObjectSpeed:
   \   00000000                      DS8 2

   \                                 In section .bss, align 1
     10          int8u_t   closeMotorFlag = 0;
   \                     closeMotorFlag:
   \   00000000                      DS8 1

   \                                 In section .bss, align 2
     11          int16s_t  nLeftSpd = 0;
   \                     nLeftSpd:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
     12          int16s_t  nRightSpd = 0;
   \                     nRightSpd:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
     13          int16u_t  carCrazyCnt = 0;
   \                     carCrazyCnt:
   \   00000000                      DS8 2
     14          /*******************************************************************************
     15          * º¯ÊýÃû³Æ£ºSpeed_Read
     16          * Ãè    Êö£º¶ÁÈ¡×óÓÒÂÖµÄËÙ¶È
     17          *******************************************************************************/

   \                                 In section .text, align 2, keep-with-next
     18          void Speed_Read(void)
     19          {                       
   \                     Speed_Read:
   \   00000000   0xB580             PUSH     {R7,LR}
     20            FTM_readQUADValue(FTM1, &NowSpeed_L_Temp );
   \   00000002   0x.... 0x....      LDR.W    R1,??DataTable3
   \   00000006   0x.... 0x....      LDR.W    R0,??DataTable3_1  ;; 0x40039000
   \   0000000A   0x.... 0x....      BL       FTM_readQUADValue
     21            FTM_readQUADValue(FTM2, &NowSpeed_R_Temp );
   \   0000000E   0x.... 0x....      LDR.W    R1,??DataTable3_2
   \   00000012   0x.... 0x....      LDR.W    R0,??DataTable3_3  ;; 0x400b8000
   \   00000016   0x.... 0x....      BL       FTM_readQUADValue
     22            
     23            NowSpeed_L = (int16s_t)(NowSpeed_L_Temp*5/27*0.511);//0.972  725
   \   0000001A   0x....             LDR.N    R0,??DataTable3
   \   0000001C   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   00000020   0x2105             MOVS     R1,#+5
   \   00000022   0x4348             MULS     R0,R1,R0
   \   00000024   0x211B             MOVS     R1,#+27
   \   00000026   0xFB90 0xF0F1      SDIV     R0,R0,R1
   \   0000002A   0x.... 0x....      BL       __aeabi_i2d
   \   0000002E   0x....             LDR.N    R2,??DataTable3_4  ;; 0xac083127
   \   00000030   0x....             LDR.N    R3,??DataTable3_5  ;; 0x3fe05a1c
   \   00000032   0x.... 0x....      BL       __aeabi_dmul
   \   00000036   0x.... 0x....      BL       __aeabi_d2iz
   \   0000003A   0x....             LDR.N    R1,??DataTable3_6
   \   0000003C   0x8008             STRH     R0,[R1, #+0]
     24            NowSpeed_R = (int16s_t)(NowSpeed_R_Temp*5/27*0.495);//0.921  685  //³µÏòºóÔË¶¯²âËÙÎªÕý
   \   0000003E   0x....             LDR.N    R0,??DataTable3_2
   \   00000040   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   00000044   0x2105             MOVS     R1,#+5
   \   00000046   0x4348             MULS     R0,R1,R0
   \   00000048   0x211B             MOVS     R1,#+27
   \   0000004A   0xFB90 0xF0F1      SDIV     R0,R0,R1
   \   0000004E   0x.... 0x....      BL       __aeabi_i2d
   \   00000052   0x....             LDR.N    R2,??DataTable3_7  ;; 0x7ae147ae
   \   00000054   0x....             LDR.N    R3,??DataTable3_8  ;; 0x3fdfae14
   \   00000056   0x.... 0x....      BL       __aeabi_dmul
   \   0000005A   0x.... 0x....      BL       __aeabi_d2iz
   \   0000005E   0x....             LDR.N    R1,??DataTable3_9
   \   00000060   0x8008             STRH     R0,[R1, #+0]
     25          }
   \   00000062   0xBD01             POP      {R0,PC}          ;; return
     26          
     27          
     28          
     29          /*******************************************************************************
     30          * º¯ÊýÃû³Æ£ºMotor_Control
     31          * Ãè    Êö£ºµç»úÊä³ö¿ØÖÆ
     32          *******************************************************************************/

   \                                 In section .text, align 2, keep-with-next
     33          void Motor_Control(void) 
     34          {   
   \                     Motor_Control:
   \   00000000   0xB580             PUSH     {R7,LR}
     35            //int16s_t getCarAngle = 0;
     36            //int16s_t getCarSpeed = 0;
     37            ///////////Ô¤ÁôÐ´·è³å±£»¤/////////////
     38            nLeftSpd = g_nLeftMotorOut;
   \   00000002   0x....             LDR.N    R0,??DataTable3_10
   \   00000004   0x....             LDR.N    R1,??DataTable3_11
   \   00000006   0x8809             LDRH     R1,[R1, #+0]
   \   00000008   0x8001             STRH     R1,[R0, #+0]
     39            nRightSpd = g_nRightMotorOut;
   \   0000000A   0x....             LDR.N    R0,??DataTable3_12
   \   0000000C   0x....             LDR.N    R1,??DataTable3_13
   \   0000000E   0x8809             LDRH     R1,[R1, #+0]
   \   00000010   0x8001             STRH     R1,[R0, #+0]
     40              
     41            if(nLeftSpd > 0) 		
   \   00000012   0x....             LDR.N    R0,??DataTable3_10
   \   00000014   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   00000018   0x2801             CMP      R0,#+1
   \   0000001A   0xDB04             BLT.N    ??Motor_Control_0
     42               nLeftSpd += MOTOR_OUT_DEAD_VAL;
   \   0000001C   0x....             LDR.N    R0,??DataTable3_10
   \   0000001E   0x....             LDR.N    R1,??DataTable3_10
   \   00000020   0x8809             LDRH     R1,[R1, #+0]
   \   00000022   0x8001             STRH     R1,[R0, #+0]
   \   00000024   0xE008             B.N      ??Motor_Control_1
     43            else if(nLeftSpd < 0) 
   \                     ??Motor_Control_0:
   \   00000026   0x....             LDR.N    R0,??DataTable3_10
   \   00000028   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   0000002C   0x2800             CMP      R0,#+0
   \   0000002E   0xD503             BPL.N    ??Motor_Control_1
     44               nLeftSpd -= MOTOR_OUT_DEAD_VAL;  
   \   00000030   0x....             LDR.N    R0,??DataTable3_10
   \   00000032   0x....             LDR.N    R1,??DataTable3_10
   \   00000034   0x8809             LDRH     R1,[R1, #+0]
   \   00000036   0x8001             STRH     R1,[R0, #+0]
     45            if(nRightSpd > 0) 		
   \                     ??Motor_Control_1:
   \   00000038   0x....             LDR.N    R0,??DataTable3_12
   \   0000003A   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   0000003E   0x2801             CMP      R0,#+1
   \   00000040   0xDB04             BLT.N    ??Motor_Control_2
     46               nRightSpd += MOTOR_OUT_DEAD_VAL;
   \   00000042   0x....             LDR.N    R0,??DataTable3_12
   \   00000044   0x....             LDR.N    R1,??DataTable3_12
   \   00000046   0x8809             LDRH     R1,[R1, #+0]
   \   00000048   0x8001             STRH     R1,[R0, #+0]
   \   0000004A   0xE008             B.N      ??Motor_Control_3
     47            else if(nRightSpd < 0) 
   \                     ??Motor_Control_2:
   \   0000004C   0x....             LDR.N    R0,??DataTable3_12
   \   0000004E   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   00000052   0x2800             CMP      R0,#+0
   \   00000054   0xD503             BPL.N    ??Motor_Control_3
     48               nRightSpd -= MOTOR_OUT_DEAD_VAL;
   \   00000056   0x....             LDR.N    R0,??DataTable3_12
   \   00000058   0x....             LDR.N    R1,??DataTable3_12
   \   0000005A   0x8809             LDRH     R1,[R1, #+0]
   \   0000005C   0x8001             STRH     R1,[R0, #+0]
     49           
     50            
     51            //nRightSpd = 100;                    // µç»úÖ±½Ó¸³Öµ
     52            //nLeftSpd = 100;                       // µç»úÖ±½Ó¸³Öµ   +Ïòºó -ÏòÇ°×ß
     53            
     54            if( nRightSpd > MOTOR_SPEED_SET_MAX) nRightSpd = MOTOR_SPEED_SET_MAX; 
   \                     ??Motor_Control_3:
   \   0000005E   0x....             LDR.N    R0,??DataTable3_12
   \   00000060   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   00000064   0xF240 0x414D      MOVW     R1,#+1101
   \   00000068   0x4288             CMP      R0,R1
   \   0000006A   0xDB03             BLT.N    ??Motor_Control_4
   \   0000006C   0x....             LDR.N    R0,??DataTable3_12
   \   0000006E   0xF240 0x414C      MOVW     R1,#+1100
   \   00000072   0x8001             STRH     R1,[R0, #+0]
     55            if( nLeftSpd > MOTOR_SPEED_SET_MAX)  nLeftSpd = MOTOR_SPEED_SET_MAX;
   \                     ??Motor_Control_4:
   \   00000074   0x....             LDR.N    R0,??DataTable3_10
   \   00000076   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   0000007A   0xF240 0x414D      MOVW     R1,#+1101
   \   0000007E   0x4288             CMP      R0,R1
   \   00000080   0xDB03             BLT.N    ??Motor_Control_5
   \   00000082   0x....             LDR.N    R0,??DataTable3_10
   \   00000084   0xF240 0x414C      MOVW     R1,#+1100
   \   00000088   0x8001             STRH     R1,[R0, #+0]
     56            if( nRightSpd < MOTOR_SPEED_SET_MIN) nRightSpd = MOTOR_SPEED_SET_MIN; 
   \                     ??Motor_Control_5:
   \   0000008A   0x....             LDR.N    R0,??DataTable3_12
   \   0000008C   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   00000090   0x....             LDR.N    R1,??DataTable3_14  ;; 0xfffffbb4
   \   00000092   0x4288             CMP      R0,R1
   \   00000094   0xDA02             BGE.N    ??Motor_Control_6
   \   00000096   0x....             LDR.N    R0,??DataTable3_12
   \   00000098   0x....             LDR.N    R1,??DataTable3_14  ;; 0xfffffbb4
   \   0000009A   0x8001             STRH     R1,[R0, #+0]
     57            if( nLeftSpd < MOTOR_SPEED_SET_MIN)  nLeftSpd = MOTOR_SPEED_SET_MIN;
   \                     ??Motor_Control_6:
   \   0000009C   0x....             LDR.N    R0,??DataTable3_10
   \   0000009E   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   000000A2   0x....             LDR.N    R1,??DataTable3_14  ;; 0xfffffbb4
   \   000000A4   0x4288             CMP      R0,R1
   \   000000A6   0xDA02             BGE.N    ??Motor_Control_7
   \   000000A8   0x....             LDR.N    R0,??DataTable3_10
   \   000000AA   0x....             LDR.N    R1,??DataTable3_14  ;; 0xfffffbb4
   \   000000AC   0x8001             STRH     R1,[R0, #+0]
     58             
     59            Motor_Control_L();
   \                     ??Motor_Control_7:
   \   000000AE   0x.... 0x....      BL       Motor_Control_L
     60            Motor_Control_R();
   \   000000B2   0x.... 0x....      BL       Motor_Control_R
     61          }
   \   000000B6   0xBD01             POP      {R0,PC}          ;; return
     62          
     63          /*******************************************************************************
     64          * º¯ÊýÃû³Æ£ºMotor_Control_L
     65          * Ãè    Êö£º×óµç»úÊä³ö¿ØÖÆ
     66          *******************************************************************************/

   \                                 In section .text, align 2, keep-with-next
     67          void Motor_Control_L(void)
     68          {
   \                     Motor_Control_L:
   \   00000000   0xB580             PUSH     {R7,LR}
     69            static int8s_t direction_L = 1;
     70            
     71            if(nLeftSpd>=0) 
   \   00000002   0x....             LDR.N    R0,??DataTable3_10
   \   00000004   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   00000008   0x2800             CMP      R0,#+0
   \   0000000A   0xD436             BMI.N    ??Motor_Control_L_0
     72            {
     73              if(direction_L==1)
   \   0000000C   0x....             LDR.N    R0,??DataTable3_15
   \   0000000E   0xF990 0x0000      LDRSB    R0,[R0, #+0]
   \   00000012   0x2801             CMP      R0,#+1
   \   00000014   0xD10E             BNE.N    ??Motor_Control_L_1
     74              {
     75                FTM_setPWMDty(FTM0, 0, nLeftSpd);
   \   00000016   0x....             LDR.N    R0,??DataTable3_10
   \   00000018   0x8802             LDRH     R2,[R0, #+0]
   \   0000001A   0xB292             UXTH     R2,R2            ;; ZeroExt  R2,R2,#+16,#+16
   \   0000001C   0x2100             MOVS     R1,#+0
   \   0000001E   0x....             LDR.N    R0,??DataTable3_16  ;; 0x40038000
   \   00000020   0x.... 0x....      BL       FTM_setPWMDty
     76                FTM_setPWMDty(FTM0, 2, 0);
   \   00000024   0x2200             MOVS     R2,#+0
   \   00000026   0x2102             MOVS     R1,#+2
   \   00000028   0x....             LDR.N    R0,??DataTable3_16  ;; 0x40038000
   \   0000002A   0x.... 0x....      BL       FTM_setPWMDty
     77                direction_L=1;
   \   0000002E   0x....             LDR.N    R0,??DataTable3_15
   \   00000030   0x2101             MOVS     R1,#+1
   \   00000032   0x7001             STRB     R1,[R0, #+0]
     78              }
     79              if(direction_L==-1)
   \                     ??Motor_Control_L_1:
   \   00000034   0x....             LDR.N    R0,??DataTable3_15
   \   00000036   0xF990 0x0000      LDRSB    R0,[R0, #+0]
   \   0000003A   0xF05F 0x31FF      MOVS     R1,#-1
   \   0000003E   0x4288             CMP      R0,R1
   \   00000040   0xD11B             BNE.N    ??Motor_Control_L_0
     80              {
     81                FTM_setPWMDty(FTM0, 0, 0);
   \   00000042   0x2200             MOVS     R2,#+0
   \   00000044   0x2100             MOVS     R1,#+0
   \   00000046   0x....             LDR.N    R0,??DataTable3_16  ;; 0x40038000
   \   00000048   0x.... 0x....      BL       FTM_setPWMDty
     82                FTM_setPWMDty(FTM0, 2, 0);
   \   0000004C   0x2200             MOVS     R2,#+0
   \   0000004E   0x2102             MOVS     R1,#+2
   \   00000050   0x....             LDR.N    R0,??DataTable3_16  ;; 0x40038000
   \   00000052   0x.... 0x....      BL       FTM_setPWMDty
     83                
     84                Delay1(60);
   \   00000056   0x203C             MOVS     R0,#+60
   \   00000058   0x.... 0x....      BL       Delay1
     85                
     86                FTM_setPWMDty(FTM0, 0, nLeftSpd);
   \   0000005C   0x....             LDR.N    R0,??DataTable3_10
   \   0000005E   0x8802             LDRH     R2,[R0, #+0]
   \   00000060   0xB292             UXTH     R2,R2            ;; ZeroExt  R2,R2,#+16,#+16
   \   00000062   0x2100             MOVS     R1,#+0
   \   00000064   0x....             LDR.N    R0,??DataTable3_16  ;; 0x40038000
   \   00000066   0x.... 0x....      BL       FTM_setPWMDty
     87                FTM_setPWMDty(FTM0, 2, 0);
   \   0000006A   0x2200             MOVS     R2,#+0
   \   0000006C   0x2102             MOVS     R1,#+2
   \   0000006E   0x....             LDR.N    R0,??DataTable3_16  ;; 0x40038000
   \   00000070   0x.... 0x....      BL       FTM_setPWMDty
     88                direction_L=1;
   \   00000074   0x....             LDR.N    R0,??DataTable3_15
   \   00000076   0x2101             MOVS     R1,#+1
   \   00000078   0x7001             STRB     R1,[R0, #+0]
     89              } 
     90            }
     91            if(nLeftSpd<0)
   \                     ??Motor_Control_L_0:
   \   0000007A   0x....             LDR.N    R0,??DataTable3_10
   \   0000007C   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   00000080   0x2800             CMP      R0,#+0
   \   00000082   0xD53C             BPL.N    ??Motor_Control_L_2
     92            {
     93              if(direction_L==1)
   \   00000084   0x....             LDR.N    R0,??DataTable3_15
   \   00000086   0xF990 0x0000      LDRSB    R0,[R0, #+0]
   \   0000008A   0x2801             CMP      R0,#+1
   \   0000008C   0xD11E             BNE.N    ??Motor_Control_L_3
     94              {
     95                FTM_setPWMDty(FTM0, 0, 0);
   \   0000008E   0x2200             MOVS     R2,#+0
   \   00000090   0x2100             MOVS     R1,#+0
   \   00000092   0x....             LDR.N    R0,??DataTable3_16  ;; 0x40038000
   \   00000094   0x.... 0x....      BL       FTM_setPWMDty
     96                FTM_setPWMDty(FTM0, 2, 0);
   \   00000098   0x2200             MOVS     R2,#+0
   \   0000009A   0x2102             MOVS     R1,#+2
   \   0000009C   0x....             LDR.N    R0,??DataTable3_16  ;; 0x40038000
   \   0000009E   0x.... 0x....      BL       FTM_setPWMDty
     97                
     98                Delay1(60);
   \   000000A2   0x203C             MOVS     R0,#+60
   \   000000A4   0x.... 0x....      BL       Delay1
     99                
    100                FTM_setPWMDty(FTM0, 0, 0);
   \   000000A8   0x2200             MOVS     R2,#+0
   \   000000AA   0x2100             MOVS     R1,#+0
   \   000000AC   0x....             LDR.N    R0,??DataTable3_16  ;; 0x40038000
   \   000000AE   0x.... 0x....      BL       FTM_setPWMDty
    101                FTM_setPWMDty(FTM0, 2, -nLeftSpd);
   \   000000B2   0x....             LDR.N    R0,??DataTable3_10
   \   000000B4   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   000000B8   0x4242             RSBS     R2,R0,#+0
   \   000000BA   0xB292             UXTH     R2,R2            ;; ZeroExt  R2,R2,#+16,#+16
   \   000000BC   0x2102             MOVS     R1,#+2
   \   000000BE   0x....             LDR.N    R0,??DataTable3_16  ;; 0x40038000
   \   000000C0   0x.... 0x....      BL       FTM_setPWMDty
    102                direction_L=-1;  
   \   000000C4   0x....             LDR.N    R0,??DataTable3_15
   \   000000C6   0xF05F 0x31FF      MOVS     R1,#-1
   \   000000CA   0x7001             STRB     R1,[R0, #+0]
    103              }
    104              if(direction_L==-1)
   \                     ??Motor_Control_L_3:
   \   000000CC   0x....             LDR.N    R0,??DataTable3_15
   \   000000CE   0xF990 0x0000      LDRSB    R0,[R0, #+0]
   \   000000D2   0xF05F 0x31FF      MOVS     R1,#-1
   \   000000D6   0x4288             CMP      R0,R1
   \   000000D8   0xD111             BNE.N    ??Motor_Control_L_2
    105              {
    106                FTM_setPWMDty(FTM0, 0, 0);
   \   000000DA   0x2200             MOVS     R2,#+0
   \   000000DC   0x2100             MOVS     R1,#+0
   \   000000DE   0x....             LDR.N    R0,??DataTable3_16  ;; 0x40038000
   \   000000E0   0x.... 0x....      BL       FTM_setPWMDty
    107                FTM_setPWMDty(FTM0, 2, -nLeftSpd);
   \   000000E4   0x....             LDR.N    R0,??DataTable3_10
   \   000000E6   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   000000EA   0x4242             RSBS     R2,R0,#+0
   \   000000EC   0xB292             UXTH     R2,R2            ;; ZeroExt  R2,R2,#+16,#+16
   \   000000EE   0x2102             MOVS     R1,#+2
   \   000000F0   0x....             LDR.N    R0,??DataTable3_16  ;; 0x40038000
   \   000000F2   0x.... 0x....      BL       FTM_setPWMDty
    108                direction_L=-1;
   \   000000F6   0x....             LDR.N    R0,??DataTable3_15
   \   000000F8   0xF05F 0x31FF      MOVS     R1,#-1
   \   000000FC   0x7001             STRB     R1,[R0, #+0]
    109              }
    110            }
    111          }
   \                     ??Motor_Control_L_2:
   \   000000FE   0xBD01             POP      {R0,PC}          ;; return

   \                                 In section .data, align 1
   \                     ??direction_L:
   \   00000000   0x01               DC8 1
    112          
    113          /*******************************************************************************
    114          * º¯ÊýÃû³Æ£ºMotor_Control_R
    115          * Ãè    Êö£ºÓÒµç»úÊä³ö¿ØÖÆ
    116          *******************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    117          void Motor_Control_R(void)
    118          {
   \                     Motor_Control_R:
   \   00000000   0xB580             PUSH     {R7,LR}
    119            static int8s_t direction_R = 1;
    120            
    121            if(nRightSpd>=0) 
   \   00000002   0x....             LDR.N    R0,??DataTable3_12
   \   00000004   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   00000008   0x2800             CMP      R0,#+0
   \   0000000A   0xD436             BMI.N    ??Motor_Control_R_0
    122            {
    123              if(direction_R==1)
   \   0000000C   0x....             LDR.N    R0,??DataTable3_17
   \   0000000E   0xF990 0x0000      LDRSB    R0,[R0, #+0]
   \   00000012   0x2801             CMP      R0,#+1
   \   00000014   0xD10E             BNE.N    ??Motor_Control_R_1
    124              {       
    125                FTM_setPWMDty(FTM0, 4, nRightSpd);
   \   00000016   0x....             LDR.N    R0,??DataTable3_12
   \   00000018   0x8802             LDRH     R2,[R0, #+0]
   \   0000001A   0xB292             UXTH     R2,R2            ;; ZeroExt  R2,R2,#+16,#+16
   \   0000001C   0x2104             MOVS     R1,#+4
   \   0000001E   0x....             LDR.N    R0,??DataTable3_16  ;; 0x40038000
   \   00000020   0x.... 0x....      BL       FTM_setPWMDty
    126                FTM_setPWMDty(FTM0, 6, 0);
   \   00000024   0x2200             MOVS     R2,#+0
   \   00000026   0x2106             MOVS     R1,#+6
   \   00000028   0x....             LDR.N    R0,??DataTable3_16  ;; 0x40038000
   \   0000002A   0x.... 0x....      BL       FTM_setPWMDty
    127                direction_R=1;
   \   0000002E   0x....             LDR.N    R0,??DataTable3_17
   \   00000030   0x2101             MOVS     R1,#+1
   \   00000032   0x7001             STRB     R1,[R0, #+0]
    128              }
    129              if(direction_R==-1)
   \                     ??Motor_Control_R_1:
   \   00000034   0x....             LDR.N    R0,??DataTable3_17
   \   00000036   0xF990 0x0000      LDRSB    R0,[R0, #+0]
   \   0000003A   0xF05F 0x31FF      MOVS     R1,#-1
   \   0000003E   0x4288             CMP      R0,R1
   \   00000040   0xD11B             BNE.N    ??Motor_Control_R_0
    130              {
    131                FTM_setPWMDty(FTM0, 4, 0);
   \   00000042   0x2200             MOVS     R2,#+0
   \   00000044   0x2104             MOVS     R1,#+4
   \   00000046   0x....             LDR.N    R0,??DataTable3_16  ;; 0x40038000
   \   00000048   0x.... 0x....      BL       FTM_setPWMDty
    132                FTM_setPWMDty(FTM0, 6, 0); 
   \   0000004C   0x2200             MOVS     R2,#+0
   \   0000004E   0x2106             MOVS     R1,#+6
   \   00000050   0x....             LDR.N    R0,??DataTable3_16  ;; 0x40038000
   \   00000052   0x.... 0x....      BL       FTM_setPWMDty
    133                
    134                Delay1(60); 
   \   00000056   0x203C             MOVS     R0,#+60
   \   00000058   0x.... 0x....      BL       Delay1
    135                
    136                FTM_setPWMDty(FTM0, 4, nRightSpd);
   \   0000005C   0x....             LDR.N    R0,??DataTable3_12
   \   0000005E   0x8802             LDRH     R2,[R0, #+0]
   \   00000060   0xB292             UXTH     R2,R2            ;; ZeroExt  R2,R2,#+16,#+16
   \   00000062   0x2104             MOVS     R1,#+4
   \   00000064   0x....             LDR.N    R0,??DataTable3_16  ;; 0x40038000
   \   00000066   0x.... 0x....      BL       FTM_setPWMDty
    137                FTM_setPWMDty(FTM0, 6, 0);
   \   0000006A   0x2200             MOVS     R2,#+0
   \   0000006C   0x2106             MOVS     R1,#+6
   \   0000006E   0x....             LDR.N    R0,??DataTable3_16  ;; 0x40038000
   \   00000070   0x.... 0x....      BL       FTM_setPWMDty
    138                direction_R=1;
   \   00000074   0x....             LDR.N    R0,??DataTable3_17
   \   00000076   0x2101             MOVS     R1,#+1
   \   00000078   0x7001             STRB     R1,[R0, #+0]
    139              } 
    140            }
    141            if(nRightSpd<0)
   \                     ??Motor_Control_R_0:
   \   0000007A   0x....             LDR.N    R0,??DataTable3_12
   \   0000007C   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   00000080   0x2800             CMP      R0,#+0
   \   00000082   0xD53C             BPL.N    ??Motor_Control_R_2
    142            {
    143              if(direction_R==1)
   \   00000084   0x....             LDR.N    R0,??DataTable3_17
   \   00000086   0xF990 0x0000      LDRSB    R0,[R0, #+0]
   \   0000008A   0x2801             CMP      R0,#+1
   \   0000008C   0xD11E             BNE.N    ??Motor_Control_R_3
    144              {
    145                FTM_setPWMDty(FTM0, 4, 0);
   \   0000008E   0x2200             MOVS     R2,#+0
   \   00000090   0x2104             MOVS     R1,#+4
   \   00000092   0x....             LDR.N    R0,??DataTable3_16  ;; 0x40038000
   \   00000094   0x.... 0x....      BL       FTM_setPWMDty
    146                FTM_setPWMDty(FTM0, 6, 0); 
   \   00000098   0x2200             MOVS     R2,#+0
   \   0000009A   0x2106             MOVS     R1,#+6
   \   0000009C   0x....             LDR.N    R0,??DataTable3_16  ;; 0x40038000
   \   0000009E   0x.... 0x....      BL       FTM_setPWMDty
    147                
    148                Delay1(60); 
   \   000000A2   0x203C             MOVS     R0,#+60
   \   000000A4   0x.... 0x....      BL       Delay1
    149                
    150                FTM_setPWMDty(FTM0, 4, 0);
   \   000000A8   0x2200             MOVS     R2,#+0
   \   000000AA   0x2104             MOVS     R1,#+4
   \   000000AC   0x....             LDR.N    R0,??DataTable3_16  ;; 0x40038000
   \   000000AE   0x.... 0x....      BL       FTM_setPWMDty
    151                FTM_setPWMDty(FTM0, 6, -nRightSpd);
   \   000000B2   0x....             LDR.N    R0,??DataTable3_12
   \   000000B4   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   000000B8   0x4242             RSBS     R2,R0,#+0
   \   000000BA   0xB292             UXTH     R2,R2            ;; ZeroExt  R2,R2,#+16,#+16
   \   000000BC   0x2106             MOVS     R1,#+6
   \   000000BE   0x....             LDR.N    R0,??DataTable3_16  ;; 0x40038000
   \   000000C0   0x.... 0x....      BL       FTM_setPWMDty
    152                direction_R=-1;  
   \   000000C4   0x....             LDR.N    R0,??DataTable3_17
   \   000000C6   0xF05F 0x31FF      MOVS     R1,#-1
   \   000000CA   0x7001             STRB     R1,[R0, #+0]
    153              }
    154              if(direction_R==-1)
   \                     ??Motor_Control_R_3:
   \   000000CC   0x....             LDR.N    R0,??DataTable3_17
   \   000000CE   0xF990 0x0000      LDRSB    R0,[R0, #+0]
   \   000000D2   0xF05F 0x31FF      MOVS     R1,#-1
   \   000000D6   0x4288             CMP      R0,R1
   \   000000D8   0xD111             BNE.N    ??Motor_Control_R_2
    155              {
    156                FTM_setPWMDty(FTM0, 4, 0);
   \   000000DA   0x2200             MOVS     R2,#+0
   \   000000DC   0x2104             MOVS     R1,#+4
   \   000000DE   0x....             LDR.N    R0,??DataTable3_16  ;; 0x40038000
   \   000000E0   0x.... 0x....      BL       FTM_setPWMDty
    157                FTM_setPWMDty(FTM0, 6, -nRightSpd);
   \   000000E4   0x....             LDR.N    R0,??DataTable3_12
   \   000000E6   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   000000EA   0x4242             RSBS     R2,R0,#+0
   \   000000EC   0xB292             UXTH     R2,R2            ;; ZeroExt  R2,R2,#+16,#+16
   \   000000EE   0x2106             MOVS     R1,#+6
   \   000000F0   0x....             LDR.N    R0,??DataTable3_16  ;; 0x40038000
   \   000000F2   0x.... 0x....      BL       FTM_setPWMDty
    158                direction_R=-1;
   \   000000F6   0x....             LDR.N    R0,??DataTable3_17
   \   000000F8   0xF05F 0x31FF      MOVS     R1,#-1
   \   000000FC   0x7001             STRB     R1,[R0, #+0]
    159              }
    160            }
    161          }
   \                     ??Motor_Control_R_2:
   \   000000FE   0xBD01             POP      {R0,PC}          ;; return

   \                                 In section .data, align 1
   \                     ??direction_R:
   \   00000000   0x01               DC8 1

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3:
   \   00000000   0x........         DC32     NowSpeed_L_Temp

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_1:
   \   00000000   0x40039000         DC32     0x40039000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_2:
   \   00000000   0x........         DC32     NowSpeed_R_Temp

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_3:
   \   00000000   0x400B8000         DC32     0x400b8000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_4:
   \   00000000   0xAC083127         DC32     0xac083127

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_5:
   \   00000000   0x3FE05A1C         DC32     0x3fe05a1c

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_6:
   \   00000000   0x........         DC32     NowSpeed_L

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_7:
   \   00000000   0x7AE147AE         DC32     0x7ae147ae

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_8:
   \   00000000   0x3FDFAE14         DC32     0x3fdfae14

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_9:
   \   00000000   0x........         DC32     NowSpeed_R

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_10:
   \   00000000   0x........         DC32     nLeftSpd

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_11:
   \   00000000   0x........         DC32     g_nLeftMotorOut

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_12:
   \   00000000   0x........         DC32     nRightSpd

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_13:
   \   00000000   0x........         DC32     g_nRightMotorOut

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_14:
   \   00000000   0xFFFFFBB4         DC32     0xfffffbb4

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_15:
   \   00000000   0x........         DC32     ??direction_L

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_16:
   \   00000000   0x40038000         DC32     0x40038000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_17:
   \   00000000   0x........         DC32     ??direction_R

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
        8  Motor_Control
             8 -> Motor_Control_L
             8 -> Motor_Control_R
        8  Motor_Control_L
             8 -> Delay1
             8 -> FTM_setPWMDty
        8  Motor_Control_R
             8 -> Delay1
             8 -> FTM_setPWMDty
        8  Speed_Read
             8 -> FTM_readQUADValue
             8 -> __aeabi_d2iz
             8 -> __aeabi_dmul
             8 -> __aeabi_i2d


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable3
       4  ??DataTable3_1
       4  ??DataTable3_10
       4  ??DataTable3_11
       4  ??DataTable3_12
       4  ??DataTable3_13
       4  ??DataTable3_14
       4  ??DataTable3_15
       4  ??DataTable3_16
       4  ??DataTable3_17
       4  ??DataTable3_2
       4  ??DataTable3_3
       4  ??DataTable3_4
       4  ??DataTable3_5
       4  ??DataTable3_6
       4  ??DataTable3_7
       4  ??DataTable3_8
       4  ??DataTable3_9
     184  Motor_Control
     256  Motor_Control_L
     256  Motor_Control_R
       2  NowSpeed_L
       2  NowSpeed_L_Temp
       2  NowSpeed_R
       2  NowSpeed_R_Temp
       2  ObjectSpeed
     100  Speed_Read
       2  carCrazyCnt
       1  closeMotorFlag
       1  direction_L
       1  direction_R
       2  nLeftSpd
       2  nRightSpd

 
  17 bytes in section .bss
   2 bytes in section .data
 868 bytes in section .text
 
 868 bytes of CODE memory
  19 bytes of DATA memory

Errors: none
Warnings: none
