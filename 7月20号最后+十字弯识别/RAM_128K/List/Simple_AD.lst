###############################################################################
#                                                                             #
#                                                       30/Oct/2014  20:23:27 #
# IAR ANSI C/C++ Compiler V6.30.6.23336/W32 EVALUATION for ARM                #
# Copyright 1999-2012 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  thumb                                                    #
#    Endian       =  little                                                   #
#    Source file  =  E:\´´ÐÂ»î¶¯\ÖÇÄÜ³µ\µÚÊ®½ì\±¾³µ³ÌÐò\1029µ÷ÊÔ°æ\Simple_AD\ #
#                    Simple_AD.c                                              #
#    Command line =  E:\´´ÐÂ»î¶¯\ÖÇÄÜ³µ\µÚÊ®½ì\±¾³µ³ÌÐò\1029µ÷ÊÔ°æ\Simple_AD\ #
#                    Simple_AD.c -D IAR -lCN E:\´´ÐÂ»î¶¯\ÖÇÄÜ³µ\µÚÊ®½ì\±¾³µ³Ì #
#                    Ðò\1029µ÷ÊÔ°æ\RAM_128K\List\ -lB                         #
#                    E:\´´ÐÂ»î¶¯\ÖÇÄÜ³µ\µÚÊ®½ì\±¾³µ³ÌÐò\1029µ÷ÊÔ°æ\RAM_128K\L #
#                    ist\ -o E:\´´ÐÂ»î¶¯\ÖÇÄÜ³µ\µÚÊ®½ì\±¾³µ³ÌÐò\1029µ÷ÊÔ°æ\RA #
#                    M_128K\Obj\ --debug --endian=little --cpu=Cortex-M4 -e   #
#                    --fpu=None --dlib_config "C:\Program Files\IAR           #
#                    Systems\Embedded Workbench 6.0                           #
#                    Evaluation\arm\INC\c\DLib_Config_Normal.h" -I            #
#                    E:\´´ÐÂ»î¶¯\ÖÇÄÜ³µ\µÚÊ®½ì\±¾³µ³ÌÐò\1029µ÷ÊÔ°æ\Library\CP #
#                    U\ -I E:\´´ÐÂ»î¶¯\ÖÇÄÜ³µ\µÚÊ®½ì\±¾³µ³ÌÐò\1029µ÷ÊÔ°æ\Libr #
#                    ary\Drivers\ADC\ -I E:\´´ÐÂ»î¶¯\ÖÇÄÜ³µ\µÚÊ®½ì\±¾³µ³ÌÐò\1 #
#                    029µ÷ÊÔ°æ\Library\Drivers\FTM\ -I                        #
#                    E:\´´ÐÂ»î¶¯\ÖÇÄÜ³µ\µÚÊ®½ì\±¾³µ³ÌÐò\1029µ÷ÊÔ°æ\Library\Dr #
#                    ivers\GPIO\ -I E:\´´ÐÂ»î¶¯\ÖÇÄÜ³µ\µÚÊ®½ì\±¾³µ³ÌÐò\1029µ÷ #
#                    ÊÔ°æ\Library\Drivers\PIT\ -I                             #
#                    E:\´´ÐÂ»î¶¯\ÖÇÄÜ³µ\µÚÊ®½ì\±¾³µ³ÌÐò\1029µ÷ÊÔ°æ\System_Ini #
#                    t\ -I E:\´´ÐÂ»î¶¯\ÖÇÄÜ³µ\µÚÊ®½ì\±¾³µ³ÌÐò\1029µ÷ÊÔ°æ\Sour #
#                    ce\ -I E:\´´ÐÂ»î¶¯\ÖÇÄÜ³µ\µÚÊ®½ì\±¾³µ³ÌÐò\1029µ÷ÊÔ°æ\OLE #
#                    D\ -I E:\´´ÐÂ»î¶¯\ÖÇÄÜ³µ\µÚÊ®½ì\±¾³µ³ÌÐò\1029µ÷ÊÔ°æ\SD_S #
#                    ystem\ -I E:\´´ÐÂ»î¶¯\ÖÇÄÜ³µ\µÚÊ®½ì\±¾³µ³ÌÐò\1029µ÷ÊÔ°æ\ #
#                    Simple_AD\ -I E:\´´ÐÂ»î¶¯\ÖÇÄÜ³µ\µÚÊ®½ì\±¾³µ³ÌÐò\1029µ÷Ê #
#                    Ô°æ\Delay\ -I E:\´´ÐÂ»î¶¯\ÖÇÄÜ³µ\µÚÊ®½ì\±¾³µ³ÌÐò\1029µ÷Ê #
#                    Ô°æ\Make_Desicion\ -Oh                                   #
#    List file    =  E:\´´ÐÂ»î¶¯\ÖÇÄÜ³µ\µÚÊ®½ì\±¾³µ³ÌÐò\1029µ÷ÊÔ°æ\RAM_128K\L #
#                    ist\Simple_AD.lst                                        #
#    Object file  =  E:\´´ÐÂ»î¶¯\ÖÇÄÜ³µ\µÚÊ®½ì\±¾³µ³ÌÐò\1029µ÷ÊÔ°æ\RAM_128K\O #
#                    bj\Simple_AD.o                                           #
#                                                                             #
#                                                                             #
###############################################################################

E:\´´ÐÂ»î¶¯\ÖÇÄÜ³µ\µÚÊ®½ì\±¾³µ³ÌÐò\1029µ÷ÊÔ°æ\Simple_AD\Simple_AD.c
      1          #include "AllHeaders.h"
      2          

   \                                 In section .data, align 4
      3          CCD_GROUP MAIN_CCD={main_CCD,{0},{0},{0},{0},0};
   \                     MAIN_CCD:
   \   00000000   0x00000001         DC32 1
   \   00000004   0x0000             DC16 0
   \   00000006   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000016   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000026   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000036   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000046   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000056   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000066   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000076   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000086   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000096   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000000A6   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000000B6   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000000C6   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000000D6   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000000E6   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000000F6   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         
   \   0000010D   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   0000011D   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   0000012D   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   0000013D   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   0000014D   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   0000015D   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   0000016D   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000181   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000191   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000001A1   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000001B1   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000001C1   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000001D1   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000001E1   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         
   \   000001F8   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000208   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
      4          

   \                                 In section .bss, align 1
      5          int8u_t Stop_flag;
   \                     Stop_flag:
   \   00000000                      DS8 1
      6          

   \                                 In section .text, align 4, keep-with-next
      7          const short int tab[128]=
   \                     tab:
   \   00000000   0xFFFF 0xFFFF      DC16 -1, -1, -2, -2, -3, -3, -4, -4, -5, -5, -6, -6, -7, -7, -8, -8, -9
   \              0xFFFE 0xFFFE
   \              0xFFFD 0xFFFD
   \              0xFFFC 0xFFFC
   \              0xFFFB 0xFFFB
   \              0xFFFA 0xFFFA
   \              0xFFF9 0xFFF9
   \              0xFFF8 0xFFF8
   \              0xFFF7       
   \   00000022   0xFFF7 0xFFF6      DC16 -9, -10, -10, -11, -12, -13, -14, -15, -16, -17, -18, -19, -20
   \              0xFFF6 0xFFF5
   \              0xFFF4 0xFFF3
   \              0xFFF2 0xFFF1
   \              0xFFF0 0xFFEF
   \              0xFFEE 0xFFED
   \              0xFFEC       
   \   0000003C   0xFFEB 0xFFEA      DC16 -21, -22, -23, -24, -25, -26, -27, -28, -29, -30, -31, -32, -33
   \              0xFFE9 0xFFE8
   \              0xFFE7 0xFFE6
   \              0xFFE5 0xFFE4
   \              0xFFE3 0xFFE2
   \              0xFFE1 0xFFE0
   \              0xFFDF       
   \   00000056   0xFFDE 0xFFDD      DC16 -34, -35, -36, -38, -40, -42, -44, -46, -48, -50, -52, -54, -56
   \              0xFFDC 0xFFDA
   \              0xFFD8 0xFFD6
   \              0xFFD4 0xFFD2
   \              0xFFD0 0xFFCE
   \              0xFFCC 0xFFCA
   \              0xFFC8       
   \   00000070   0xFFC6 0xFFC4      DC16 -58, -60, -62, -64, -66, -68, -70, -72, 72, 70, 68, 66, 64, 62, 60
   \              0xFFC2 0xFFC0
   \              0xFFBE 0xFFBC
   \              0xFFBA 0xFFB8
   \              0x0048 0x0046
   \              0x0044 0x0042
   \              0x0040 0x003E
   \              0x003C       
   \   0000008E   0x003A 0x0038      DC16 58, 56, 54, 52, 50, 48, 46, 44, 42, 40, 38, 36, 35, 34, 33, 32, 31
   \              0x0036 0x0034
   \              0x0032 0x0030
   \              0x002E 0x002C
   \              0x002A 0x0028
   \              0x0026 0x0024
   \              0x0023 0x0022
   \              0x0021 0x0020
   \              0x001F       
   \   000000B0   0x001E 0x001D      DC16 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14
   \              0x001C 0x001B
   \              0x001A 0x0019
   \              0x0018 0x0017
   \              0x0016 0x0015
   \              0x0014 0x0013
   \              0x0012 0x0011
   \              0x0010 0x000F
   \              0x000E       
   \   000000D2   0x000D 0x000C      DC16 13, 12, 11, 10, 10, 9, 9, 8, 8, 7, 7, 6, 6, 5, 5, 4, 4, 3, 3, 2, 2
   \              0x000B 0x000A
   \              0x000A 0x0009
   \              0x0009 0x0008
   \              0x0008 0x0007
   \              0x0007 0x0006
   \              0x0006 0x0005
   \              0x0005 0x0004
   \              0x0004 0x0003
   \              0x0003 0x0002
   \              0x0002       
   \   000000FC   0x0001 0x0001      DC16 1, 1
      8          {
      9            -1,-1,-2,-2,-3,-3,-4,-4,-5,-5,-6,-6,-7,-7,-8,-8,-9,-9,-10,-10,
     10            -11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,
     11            -36,-38,-40,-42,-44,-46,-48,-50,-52,-54,-56,-58,-60,-62,-64,-66,-68,-70,-72,
     12            72,70,68,66,64,62,60,58,56,54,52,50,48,46,44,42,40,38,36,
     13            35,34,33,32,31,30,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,
     14            10,10,9,9,8,8,7,7,6,6,5,5,4,4,3,3,2,2,1,1
     15          };
     16          

   \                                 In section .text, align 4, keep-with-next
     17          void TSL1401_GetLine(CCD_GROUP* ccd_group)
     18          {  
   \                     TSL1401_GetLine:
   \   00000000   0xE92D 0x41F0      PUSH     {R4-R8,LR}
     19             int8u_t i;
     20             TSL1401_0_SI(0);
   \   00000004   0x.... 0x....      LDR.W    R5,??DataTable2  ;; 0x400ff080
   \   00000008   0x4604             MOV      R4,R0
   \   0000000A   0x2200             MOVS     R2,#+0
   \   0000000C   0x2110             MOVS     R1,#+16
   \   0000000E   0x4628             MOV      R0,R5
   \   00000010   0x.... 0x....      BL       GPIO_SetPinStat
     21             TSL1401_0_CLK(0);
   \   00000014   0x.... 0x....      LDR.W    R8,??DataTable2_1  ;; 0x400ff0c0
   \   00000018   0x2200             MOVS     R2,#+0
   \   0000001A   0x2100             MOVS     R1,#+0
   \   0000001C   0x4640             MOV      R0,R8
   \   0000001E   0x.... 0x....      BL       GPIO_SetPinStat
     22             asm("nop");
   \   00000022   0xBF00             nop              
     23             TSL1401_0_SI(1);     //SIÎ¬³Ö¸ßµçÆ½ÖÁÉÙ20ns
   \   00000024   0x2201             MOVS     R2,#+1
   \   00000026   0x2110             MOVS     R1,#+16
   \   00000028   0x4628             MOV      R0,R5
   \   0000002A   0x.... 0x....      BL       GPIO_SetPinStat
     24             asm("nop");
   \   0000002E   0xBF00             nop              
     25             TSL1401_0_CLK(1);       //´ËÊ±µÚÒ»¸öÏñËØµãÄ£ÄâÁ¿ÔÚAO¿Ú¿ÉÒÔµÃµ½
   \   00000030   0x2201             MOVS     R2,#+1
   \   00000032   0x2100             MOVS     R1,#+0
   \   00000034   0x4640             MOV      R0,R8
   \   00000036   0x.... 0x....      BL       GPIO_SetPinStat
     26             asm("nop");
   \   0000003A   0xBF00             nop              
     27             TSL1401_0_SI(0);
   \   0000003C   0x2200             MOVS     R2,#+0
   \   0000003E   0x2110             MOVS     R1,#+16
   \   00000040   0x4628             MOV      R0,R5
   \   00000042   0x.... 0x....      BL       GPIO_SetPinStat
     28             asm("nop");
   \   00000046   0xBF00             nop              
     29             ADC_readResult(ADC0, 9,&ccd_group->CCD_AD_Value[0]);      //²É¼¯µÚÒ»¸öÏñËØµãÊä³öµÄÄ£ÄâÁ¿×ª»»³ÉÊý×ÖÁ¿
   \   00000048   0x.... 0x....      LDR.W    R5,??DataTable2_2  ;; 0x4003b000
   \   0000004C   0x1D22             ADDS     R2,R4,#+4
   \   0000004E   0x2109             MOVS     R1,#+9
   \   00000050   0x4628             MOV      R0,R5
   \   00000052   0x.... 0x....      BL       ADC_readResult
     30             TSL1401_0_CLK(0);
   \   00000056   0x2200             MOVS     R2,#+0
   \   00000058   0x4611             MOV      R1,R2
   \   0000005A   0x4640             MOV      R0,R8
   \   0000005C   0x.... 0x....      BL       GPIO_SetPinStat
     31             
     32             for(i=1; i<128; i++)                                           //ÒÀ´ÎÊä³ö1~127ÏñËØµãµÄAD×ª»»Öµ²¢ÔÚ×îºóÒ»¸öÑ­»·²É¼¯µÚ128ÏñËØµãµÄÄ£ÄâÁ¿
   \   00000060   0x1CA7             ADDS     R7,R4,#+2
   \   00000062   0x267F             MOVS     R6,#+127
     33             {
     34                asm("nop");
   \                     ??TSL1401_GetLine_0:
   \   00000064   0xBF00             nop              
     35                TSL1401_0_CLK(1);
   \   00000066   0x2201             MOVS     R2,#+1
   \   00000068   0x2100             MOVS     R1,#+0
   \   0000006A   0x4640             MOV      R0,R8
   \   0000006C   0x.... 0x....      BL       GPIO_SetPinStat
     36                asm("nop");
   \   00000070   0xBF00             nop              
     37                ADC_readResult(ADC0, 9,&ccd_group->CCD_AD_Value[i-1]);                         
   \   00000072   0x1CBA             ADDS     R2,R7,#+2
   \   00000074   0x2109             MOVS     R1,#+9
   \   00000076   0x4628             MOV      R0,R5
   \   00000078   0x.... 0x....      BL       ADC_readResult
     38                TSL1401_0_CLK(0);
   \   0000007C   0x2200             MOVS     R2,#+0
   \   0000007E   0x2100             MOVS     R1,#+0
   \   00000080   0x4640             MOV      R0,R8
   \   00000082   0x.... 0x....      BL       GPIO_SetPinStat
     39             }
   \   00000086   0x1CBF             ADDS     R7,R7,#+2
   \   00000088   0x1E76             SUBS     R6,R6,#+1
   \   0000008A   0xD1EB             BNE.N    ??TSL1401_GetLine_0
     40             asm("nop");
   \   0000008C   0xBF00             nop              
     41             ADC_readResult(ADC0, 9,&ccd_group->CCD_AD_Value[127]);           //¶Á³ö128ÏñËØµãµÄÄ£ÄâÁ¿×ª»»½á¹û                 
   \   0000008E   0xF504 0x7281      ADD      R2,R4,#+258
   \   00000092   0x2109             MOVS     R1,#+9
   \   00000094   0x4628             MOV      R0,R5
   \   00000096   0x.... 0x....      BL       ADC_readResult
     42             asm("nop");
   \   0000009A   0xBF00             nop              
     43             TSL1401_0_CLK(1);      //·¢ËÍµÚ129¸öclkÊ¹²ÉÑùµçÈÝ²É¼¯128ÏñËØµã»ý·ÖµçÈÝµÄ»ý·Ö½á¹û
   \   0000009C   0x2201             MOVS     R2,#+1
   \   0000009E   0x2100             MOVS     R1,#+0
   \   000000A0   0x4640             MOV      R0,R8
   \   000000A2   0x.... 0x....      BL       GPIO_SetPinStat
     44             asm("nop");
   \   000000A6   0xBF00             nop              
     45             TSL1401_0_CLK(0);       //µÚ129¸öÂö³åºóµ½ÏÂÒ»¸öSIÂö³å±ØÐëµÈ´ýÖÁÉÙ20¦ÌsÒÔÍê³ÉµÚ128ÏñËØµãµÄ²ÉÑù 
   \   000000A8   0x4640             MOV      R0,R8
   \   000000AA   0xE8BD 0x41F0      POP      {R4-R8,LR}
   \   000000AE   0x2200             MOVS     R2,#+0
   \   000000B0   0x2100             MOVS     R1,#+0
   \   000000B2   0x.... 0x....      B.W      GPIO_SetPinStat
     46          }
     47          
     48          

   \                                 In section .text, align 2, keep-with-next
     49          void Deal_Black_YaoTou(CCD_GROUP* ccd_group)
     50          {
   \                     Deal_Black_YaoTou:
   \   00000000   0xE92D 0x43F0      PUSH     {R4-R9,LR}
   \   00000004   0x4606             MOV      R6,R0
     51            int8u_t i=0,j=0,m=0;
     52            int8s_t k=0;
     53            int16u_t total_weight;
     54            int8u_t Black_TO_White_Flag=0;
   \   00000006   0x2300             MOVS     R3,#+0
     55            int8u_t White_TO_Black_Flag=0;
   \   00000008   0x2400             MOVS     R4,#+0
     56            int8u_t CCD_k_max_Value;
     57            int8u_t CCD_k_min_Value;
     58            int8u_t num_rise;
     59            int8u_t num_down;
     60            int8u_t black_num;
     61            int8u_t white_num;
     62            
     63             for(m=0;m<=3;m++) 
   \   0000000A   0x4635             MOV      R5,R6
   \   0000000C   0xF04F 0x0804      MOV      R8,#+4
     64             {
     65                ccd_group->Black_TO_White[m]=0;
   \                     ??Deal_Black_YaoTou_0:
   \   00000010   0xF885 0x31F8      STRB     R3,[R5, #+504]
     66                ccd_group->White_TO_Black[m]=0;
   \   00000014   0xF885 0x31FC      STRB     R3,[R5, #+508]
     67             }
   \   00000018   0x1C6D             ADDS     R5,R5,#+1
   \   0000001A   0xF1B8 0x0801      SUBS     R8,R8,#+1
   \   0000001E   0xD1F7             BNE.N    ??Deal_Black_YaoTou_0
     68             for(m=0;m<=127;m++)
   \   00000020   0x4635             MOV      R5,R6
   \   00000022   0xF04F 0x0880      MOV      R8,#+128
     69             {
     70              ccd_group->ccd_value[m]=0; 
   \                     ??Deal_Black_YaoTou_1:
   \   00000026   0xF885 0x3178      STRB     R3,[R5, #+376]
     71             }
   \   0000002A   0x1C6D             ADDS     R5,R5,#+1
   \   0000002C   0xF1B8 0x0801      SUBS     R8,R8,#+1
   \   00000030   0xD1F9             BNE.N    ??Deal_Black_YaoTou_1
     72             //    adÖµÎªÁãµÄ»µµãÂË²¨
     73             for(k=0;k<=119;k++)
   \   00000032   0x4635             MOV      R5,R6
   \   00000034   0xF04F 0x0878      MOV      R8,#+120
     74             {
     75               if(ccd_group->CCD_AD_Value[k+7]==0)
   \                     ??Deal_Black_YaoTou_2:
   \   00000038   0x8A6F             LDRH     R7,[R5, #+18]
   \   0000003A   0x2F00             CMP      R7,#+0
   \   0000003C   0xD107             BNE.N    ??Deal_Black_YaoTou_3
     76               {  
     77                 ccd_group->CCD_AD_Value[k+7] = (ccd_group->CCD_AD_Value[k+6]/2 + ccd_group->CCD_AD_Value[k+8]/2);
   \   0000003E   0xF8B5 0xE014      LDRH     LR,[R5, #+20]
   \   00000042   0x8A2F             LDRH     R7,[R5, #+16]
   \   00000044   0xEA4F 0x0E5E      LSR      LR,LR,#+1
   \   00000048   0xEB0E 0x0757      ADD      R7,LR,R7, LSR #+1
   \   0000004C   0x826F             STRH     R7,[R5, #+18]
     78               }
     79             }
   \                     ??Deal_Black_YaoTou_3:
   \   0000004E   0x1CAD             ADDS     R5,R5,#+2
   \   00000050   0xF1B8 0x0801      SUBS     R8,R8,#+1
   \   00000054   0xD1F0             BNE.N    ??Deal_Black_YaoTou_2
     80             
     81             for(k=0;k<=105;k++) 
   \   00000056   0x4635             MOV      R5,R6
   \   00000058   0x46B0             MOV      R8,R6
   \   0000005A   0xF04F 0x0C6A      MOV      R12,#+106
     82             {     
     83               ccd_group->CCD_k_Value[k]=((ccd_group->CCD_AD_Value[k+7] - ccd_group->CCD_AD_Value[k+15])/2); 
   \                     ??Deal_Black_YaoTou_4:
   \   0000005E   0xF8B8 0xE012      LDRH     LR,[R8, #+18]
   \   00000062   0xF8B8 0x7022      LDRH     R7,[R8, #+34]
     84             }
   \   00000066   0xF108 0x0802      ADD      R8,R8,#+2
   \   0000006A   0xEBAE 0x0707      SUB      R7,LR,R7
   \   0000006E   0xEB07 0x77D7      ADD      R7,R7,R7, LSR #+31
   \   00000072   0x107F             ASRS     R7,R7,#+1
   \   00000074   0xF885 0x7104      STRB     R7,[R5, #+260]
   \   00000078   0x1C6D             ADDS     R5,R5,#+1
   \   0000007A   0xF1BC 0x0C01      SUBS     R12,R12,#+1
   \   0000007E   0xD1EE             BNE.N    ??Deal_Black_YaoTou_4
     85             
     86             CCD_k_max_Value = ccd_group->CCD_k_Value[0];
   \   00000080   0xF896 0x5104      LDRB     R5,[R6, #+260]
     87             CCD_k_min_Value = ccd_group->CCD_k_Value[105];
   \   00000084   0xF896 0x816D      LDRB     R8,[R6, #+365]
     88             for(k=0;k<=105;k++)
   \   00000088   0x46B4             MOV      R12,R6
   \   0000008A   0xF04F 0x0E6A      MOV      LR,#+106
     89             {
     90               if(ccd_group->CCD_k_Value[k]>CCD_k_max_Value)
   \                     ??Deal_Black_YaoTou_5:
   \   0000008E   0xF89C 0x7104      LDRB     R7,[R12, #+260]
   \   00000092   0x42BD             CMP      R5,R7
   \   00000094   0xBFB8             IT       LT 
   \   00000096   0x463D             MOVLT    R5,R7
     91               {
     92                 CCD_k_max_Value = ccd_group->CCD_k_Value[k];
     93                 if(k<90)
     94                 {
     95                   //if(CCD_k_max_Value<=(int)(30*CCD_AD_Average_YaoTou))
     96                    // CCD_k_max_Value=(int)(30*CCD_AD_Average_YaoTou);
     97                 }
     98                 else
     99                 {
    100                  // if(CCD_k_max_Value<=(int)(40*CCD_AD_Average_YaoTou))
    101                    //CCD_k_max_Value=(int)(40*CCD_AD_Average_YaoTou);   
    102                 }
    103               }
    104             }
   \   00000098   0xF10C 0x0C01      ADD      R12,R12,#+1
   \   0000009C   0xF1BE 0x0E01      SUBS     LR,LR,#+1
   \   000000A0   0xD1F5             BNE.N    ??Deal_Black_YaoTou_5
    105             for(k=105;k>=0;k--)
   \   000000A2   0xF206 0x0C69      ADDW     R12,R6,#+105
   \   000000A6   0xF04F 0x0E6A      MOV      LR,#+106
    106             {
    107               if(ccd_group->CCD_k_Value[k]<CCD_k_min_Value)
   \                     ??Deal_Black_YaoTou_6:
   \   000000AA   0xF89C 0x7104      LDRB     R7,[R12, #+260]
   \   000000AE   0x4547             CMP      R7,R8
   \   000000B0   0xBFB8             IT       LT 
   \   000000B2   0x46B8             MOVLT    R8,R7
    108               {
    109                 CCD_k_min_Value = ccd_group->CCD_k_Value[k];
    110                 if(k<20)
    111                 {
    112                   //if(CCD_k_min_Value>=-(int)(40*CCD_AD_Average_YaoTou))
    113                     //CCD_k_min_Value=-(int)(40*CCD_AD_Average_YaoTou);
    114                 }
    115                 else
    116                 {
    117                   //if(CCD_k_min_Value>=-(int)(30*CCD_AD_Average_YaoTou))
    118                     //CCD_k_min_Value=-(int)(30*CCD_AD_Average_YaoTou);
    119                 }
    120               }
    121             }
   \   000000B4   0xF1AC 0x0C01      SUB      R12,R12,#+1
   \   000000B8   0xF1BE 0x0E01      SUBS     LR,LR,#+1
   \   000000BC   0xD1F5             BNE.N    ??Deal_Black_YaoTou_6
    122             //CCD²ÉÑù¶þÖµ»¯´¦Àí
    123             for(i=10;i<=108;i++)
   \   000000BE   0xF04F 0x0C0A      MOV      R12,#+10
   \   000000C2   0xF206 0x0E14      ADDW     LR,R6,#+20
    124             {
    125               if((ccd_group->CCD_AD_Value[i] - ccd_group->CCD_AD_Value[i+8])<=CCD_k_min_Value&&
    126                  (ccd_group->CCD_AD_Value[i+1] - ccd_group->CCD_AD_Value[i+9])<=CCD_k_min_Value&&
    127                    Black_TO_White_Flag==0)
   \                     ??Deal_Black_YaoTou_7:
   \   000000C6   0xF8BE 0x7004      LDRH     R7,[LR, #+4]
   \   000000CA   0xF8BE 0x9014      LDRH     R9,[LR, #+20]
   \   000000CE   0xEBA7 0x0709      SUB      R7,R7,R9
   \   000000D2   0x45B8             CMP      R8,R7
   \   000000D4   0xBFA1             ITTTT    GE 
   \   000000D6   0xF8BE 0x7006      LDRHGE   R7,[LR, #+6]
   \   000000DA   0xF8BE 0x9016      LDRHGE   R9,[LR, #+22]
   \   000000DE   0xEBA7 0x0709      SUBGE    R7,R7,R9
   \   000000E2   0x45B8             CMPGE    R8,R7
   \   000000E4   0xDB2C             BLT.N    ??Deal_Black_YaoTou_8
   \   000000E6   0xBB5B             CBNZ.N   R3,??Deal_Black_YaoTou_8
    128               {
    129                 ccd_group->Black_TO_White[num_rise]=i+8;
   \   000000E8   0xF10C 0x0708      ADD      R7,R12,#+8
   \   000000EC   0x1983             ADDS     R3,R0,R6
   \   000000EE   0xF883 0x71F8      STRB     R7,[R3, #+504]
    130                 if(num_down!=0)                                                 //ºÚµ½°×µÄÌø±äÑØÇ°ÎªºÚµã
   \   000000F2   0xB189             CBZ.N    R1,??Deal_Black_YaoTou_9
    131                   for(j=ccd_group->White_TO_Black[num_down-1];j<=ccd_group->Black_TO_White[num_rise];j++)
   \   000000F4   0x198C             ADDS     R4,R1,R6
   \   000000F6   0xF894 0x41FB      LDRB     R4,[R4, #+507]
   \   000000FA   0xB2FF             UXTB     R7,R7
   \   000000FC   0x42A7             CMP      R7,R4
   \   000000FE   0xD31B             BCC.N    ??Deal_Black_YaoTou_10
    132                   {
    133                     ccd_group->ccd_value[j]=1;
   \                     ??Deal_Black_YaoTou_11:
   \   00000100   0x19A7             ADDS     R7,R4,R6
   \   00000102   0xF04F 0x0901      MOV      R9,#+1
   \   00000106   0xF887 0x9178      STRB     R9,[R7, #+376]
    134                   }
   \   0000010A   0xF893 0x71F8      LDRB     R7,[R3, #+504]
   \   0000010E   0x1C64             ADDS     R4,R4,#+1
   \   00000110   0xB2E4             UXTB     R4,R4
   \   00000112   0x42A7             CMP      R7,R4
   \   00000114   0xD2F4             BCS.N    ??Deal_Black_YaoTou_11
   \   00000116   0xE00F             B.N      ??Deal_Black_YaoTou_10
    135                 else
    136                   for(j=ccd_group->White_TO_Black[num_down];j<=ccd_group->Black_TO_White[num_rise];j++)
   \                     ??Deal_Black_YaoTou_9:
   \   00000118   0xF896 0x41FC      LDRB     R4,[R6, #+508]
   \   0000011C   0xB2FF             UXTB     R7,R7
   \   0000011E   0x42A7             CMP      R7,R4
   \   00000120   0xD30A             BCC.N    ??Deal_Black_YaoTou_10
    137                   {
    138                     ccd_group->ccd_value[j]=1;
   \                     ??Deal_Black_YaoTou_12:
   \   00000122   0x19A7             ADDS     R7,R4,R6
   \   00000124   0xF04F 0x0901      MOV      R9,#+1
   \   00000128   0xF887 0x9178      STRB     R9,[R7, #+376]
    139                   }
   \   0000012C   0xF893 0x71F8      LDRB     R7,[R3, #+504]
   \   00000130   0x1C64             ADDS     R4,R4,#+1
   \   00000132   0xB2E4             UXTB     R4,R4
   \   00000134   0x42A7             CMP      R7,R4
   \   00000136   0xD2F4             BCS.N    ??Deal_Black_YaoTou_12
    140                   Black_TO_White_Flag=1;
    141                   White_TO_Black_Flag=0;
    142                   num_rise++;
   \                     ??Deal_Black_YaoTou_10:
   \   00000138   0x1C40             ADDS     R0,R0,#+1
   \   0000013A   0x2301             MOVS     R3,#+1
   \   0000013C   0x2400             MOVS     R4,#+0
   \   0000013E   0xB2C0             UXTB     R0,R0
    143                }
    144               
    145               if((ccd_group->CCD_AD_Value[i]-ccd_group->CCD_AD_Value[i+8])>=CCD_k_max_Value&&
    146                  (ccd_group->CCD_AD_Value[i+1]-ccd_group->CCD_AD_Value[i+9])>=CCD_k_max_Value&&
    147                    White_TO_Black_Flag==0)
   \                     ??Deal_Black_YaoTou_8:
   \   00000140   0xF8BE 0x7004      LDRH     R7,[LR, #+4]
   \   00000144   0xF8BE 0x9014      LDRH     R9,[LR, #+20]
   \   00000148   0xEBA7 0x0709      SUB      R7,R7,R9
   \   0000014C   0x42AF             CMP      R7,R5
   \   0000014E   0xBFA1             ITTTT    GE 
   \   00000150   0xF8BE 0x7006      LDRHGE   R7,[LR, #+6]
   \   00000154   0xF8BE 0x9016      LDRHGE   R9,[LR, #+22]
   \   00000158   0xEBA7 0x0709      SUBGE    R7,R7,R9
   \   0000015C   0x42AF             CMPGE    R7,R5
   \   0000015E   0xDB2B             BLT.N    ??Deal_Black_YaoTou_13
   \   00000160   0xBB54             CBNZ.N   R4,??Deal_Black_YaoTou_13
    148               {                                                                     //°×µ½ºÚµÄÌø±äÑØÇ°µÄµãÎª°×µã
    149                 ccd_group->White_TO_Black[num_down]=i+8;
   \   00000162   0x198B             ADDS     R3,R1,R6
   \   00000164   0xF10C 0x0708      ADD      R7,R12,#+8
   \   00000168   0xF203 0x13FB      ADDW     R3,R3,#+507
   \   0000016C   0x705F             STRB     R7,[R3, #+1]
    150                 if(num_rise!=0)
   \   0000016E   0xB180             CBZ.N    R0,??Deal_Black_YaoTou_14
    151                   for(j=ccd_group->Black_TO_White[num_rise-1] ;j<=ccd_group->White_TO_Black[num_down];j++)
   \   00000170   0x1984             ADDS     R4,R0,R6
   \   00000172   0xF894 0x41F7      LDRB     R4,[R4, #+503]
   \   00000176   0xB2FF             UXTB     R7,R7
   \   00000178   0x42A7             CMP      R7,R4
   \   0000017A   0xD319             BCC.N    ??Deal_Black_YaoTou_15
    152                   {
    153                     ccd_group->ccd_value[j]=0;
   \                     ??Deal_Black_YaoTou_16:
   \   0000017C   0x19A7             ADDS     R7,R4,R6
   \   0000017E   0xF04F 0x0900      MOV      R9,#+0
   \   00000182   0xF887 0x9178      STRB     R9,[R7, #+376]
    154                   }
   \   00000186   0x785F             LDRB     R7,[R3, #+1]
   \   00000188   0x1C64             ADDS     R4,R4,#+1
   \   0000018A   0xB2E4             UXTB     R4,R4
   \   0000018C   0x42A7             CMP      R7,R4
   \   0000018E   0xD2F5             BCS.N    ??Deal_Black_YaoTou_16
   \   00000190   0xE00E             B.N      ??Deal_Black_YaoTou_15
    155                 else
    156                   for(j=ccd_group->Black_TO_White[num_rise];j<=ccd_group->White_TO_Black[num_down];j++)
   \                     ??Deal_Black_YaoTou_14:
   \   00000192   0xF896 0x41F8      LDRB     R4,[R6, #+504]
   \   00000196   0xB2FF             UXTB     R7,R7
   \   00000198   0x42A7             CMP      R7,R4
   \   0000019A   0xD309             BCC.N    ??Deal_Black_YaoTou_15
    157                   {
    158                     ccd_group->ccd_value[j]=0;
   \                     ??Deal_Black_YaoTou_17:
   \   0000019C   0x19A7             ADDS     R7,R4,R6
   \   0000019E   0xF04F 0x0900      MOV      R9,#+0
   \   000001A2   0xF887 0x9178      STRB     R9,[R7, #+376]
    159                   } 
   \   000001A6   0x785F             LDRB     R7,[R3, #+1]
   \   000001A8   0x1C64             ADDS     R4,R4,#+1
   \   000001AA   0xB2E4             UXTB     R4,R4
   \   000001AC   0x42A7             CMP      R7,R4
   \   000001AE   0xD2F5             BCS.N    ??Deal_Black_YaoTou_17
    160                   num_down++;
   \                     ??Deal_Black_YaoTou_15:
   \   000001B0   0x1C49             ADDS     R1,R1,#+1
   \   000001B2   0xB2C9             UXTB     R1,R1
    161                   Black_TO_White_Flag=0;
   \   000001B4   0x2300             MOVS     R3,#+0
    162                   White_TO_Black_Flag=1;
   \   000001B6   0x2401             MOVS     R4,#+1
    163               }
    164             }
   \                     ??Deal_Black_YaoTou_13:
   \   000001B8   0xF10C 0x0C01      ADD      R12,R12,#+1
   \   000001BC   0xF10E 0x0E02      ADD      LR,LR,#+2
   \   000001C0   0xF1BC 0x0F6D      CMP      R12,#+109
   \   000001C4   0xF6FF 0xAF7F      BLT.W    ??Deal_Black_YaoTou_7
    165             //×îºóÒ»¸öÌø±äÑØºó²¹µã ²¢ÇÒ ´¦ÀíÊÓÏß³¬¹ýÖÐµã£¨±ØÐëÔÚ×îºó£©
    166             if(White_TO_Black_Flag==1)                   
   \   000001C8   0xB174             CBZ.N    R4,??Deal_Black_YaoTou_18
    167             {
    168               for(j=ccd_group->White_TO_Black[num_down-1];j<=127;j++)
   \   000001CA   0x198C             ADDS     R4,R1,R6
   \   000001CC   0xF894 0x41FB      LDRB     R4,[R4, #+507]
   \   000001D0   0x2C80             CMP      R4,#+128
   \   000001D2   0xD209             BCS.N    ??Deal_Black_YaoTou_18
   \   000001D4   0x19A5             ADDS     R5,R4,R6
   \   000001D6   0xF1C4 0x0480      RSB      R4,R4,#+128
   \   000001DA   0xB2E4             UXTB     R4,R4
   \   000001DC   0x2701             MOVS     R7,#+1
    169               {
    170                 ccd_group->ccd_value[j]=1;
   \                     ??Deal_Black_YaoTou_19:
   \   000001DE   0xF885 0x7178      STRB     R7,[R5, #+376]
    171               }
   \   000001E2   0x1C6D             ADDS     R5,R5,#+1
   \   000001E4   0x1E64             SUBS     R4,R4,#+1
   \   000001E6   0xD1FA             BNE.N    ??Deal_Black_YaoTou_19
    172             }
    173             if(Black_TO_White_Flag==1)
   \                     ??Deal_Black_YaoTou_18:
   \   000001E8   0xB173             CBZ.N    R3,??Deal_Black_YaoTou_20
    174             {
    175               {
    176                 for(j=ccd_group->Black_TO_White[num_rise-1];j<=127;j++)
   \   000001EA   0x1983             ADDS     R3,R0,R6
   \   000001EC   0xF893 0x41F7      LDRB     R4,[R3, #+503]
   \   000001F0   0x2C80             CMP      R4,#+128
   \   000001F2   0xD209             BCS.N    ??Deal_Black_YaoTou_20
   \   000001F4   0x19A3             ADDS     R3,R4,R6
   \   000001F6   0xF1C4 0x0480      RSB      R4,R4,#+128
   \   000001FA   0xB2E4             UXTB     R4,R4
   \   000001FC   0x2500             MOVS     R5,#+0
    177                   ccd_group->ccd_value[j]=0;
   \                     ??Deal_Black_YaoTou_21:
   \   000001FE   0xF883 0x5178      STRB     R5,[R3, #+376]
   \   00000202   0x1C5B             ADDS     R3,R3,#+1
   \   00000204   0x1E64             SUBS     R4,R4,#+1
   \   00000206   0xD1FA             BNE.N    ??Deal_Black_YaoTou_21
    178               }
    179             }
    180             
    181             if(num_rise==2)                                                      //Á½¸öÉÏÌøÑØ  ºÚ°×ºÚ°×
   \                     ??Deal_Black_YaoTou_20:
   \   00000208   0x2802             CMP      R0,#+2
   \   0000020A   0xD117             BNE.N    ??Deal_Black_YaoTou_22
    182             {
    183               if((ccd_group->White_TO_Black[0]-ccd_group->Black_TO_White[0])>(127-ccd_group->Black_TO_White[1])) 
   \   0000020C   0xF896 0x41F9      LDRB     R4,[R6, #+505]
   \   00000210   0xF896 0x71FC      LDRB     R7,[R6, #+508]
   \   00000214   0xF896 0x31F8      LDRB     R3,[R6, #+504]
   \   00000218   0xF1C4 0x057F      RSB      R5,R4,#+127
   \   0000021C   0x1AFB             SUBS     R3,R7,R3
   \   0000021E   0x429D             CMP      R5,R3
   \   00000220   0xDA0C             BGE.N    ??Deal_Black_YaoTou_22
    184               {
    185                 for(j=ccd_group->Black_TO_White[1];j<=127;j++)
   \   00000222   0x2C80             CMP      R4,#+128
   \   00000224   0xD209             BCS.N    ??Deal_Black_YaoTou_23
   \   00000226   0x19A3             ADDS     R3,R4,R6
   \   00000228   0xF1C4 0x0480      RSB      R4,R4,#+128
   \   0000022C   0xB2E4             UXTB     R4,R4
   \   0000022E   0x2501             MOVS     R5,#+1
    186                 {
    187                   ccd_group->ccd_value[j]=1;
   \                     ??Deal_Black_YaoTou_24:
   \   00000230   0xF883 0x5178      STRB     R5,[R3, #+376]
    188                 }
   \   00000234   0x1C5B             ADDS     R3,R3,#+1
   \   00000236   0x1E64             SUBS     R4,R4,#+1
   \   00000238   0xD1FA             BNE.N    ??Deal_Black_YaoTou_24
    189                 num_rise--;
   \                     ??Deal_Black_YaoTou_23:
   \   0000023A   0x2001             MOVS     R0,#+1
    190                 Black_TO_White_Flag=0;
    191                 White_TO_Black_Flag=1;
    192               }
    193             }
    194             if(num_down==2)                                                      //Á½¸öÏÂÌøÑØ °×ºÚ°×ºÚ
   \                     ??Deal_Black_YaoTou_22:
   \   0000023C   0x2902             CMP      R1,#+2
   \   0000023E   0xD118             BNE.N    ??Deal_Black_YaoTou_25
    195             {
    196               if(ccd_group->White_TO_Black[0]<(ccd_group->White_TO_Black[1]-ccd_group->Black_TO_White[0]))
   \   00000240   0xF896 0x41FD      LDRB     R4,[R6, #+509]
   \   00000244   0xF896 0x51F8      LDRB     R5,[R6, #+504]
   \   00000248   0xF896 0x31FC      LDRB     R3,[R6, #+508]
   \   0000024C   0x1B64             SUBS     R4,R4,R5
   \   0000024E   0x42A3             CMP      R3,R4
   \   00000250   0xDA0F             BGE.N    ??Deal_Black_YaoTou_25
    197               {
    198                 for(j=0;j<=ccd_group->White_TO_Black[0];j++)
   \   00000252   0x2400             MOVS     R4,#+0
   \   00000254   0x2501             MOVS     R5,#+1
    199                 {
    200                   ccd_group->ccd_value[j]=1;
   \                     ??Deal_Black_YaoTou_26:
   \   00000256   0x19A3             ADDS     R3,R4,R6
   \   00000258   0xF883 0x5178      STRB     R5,[R3, #+376]
    201                 }
   \   0000025C   0xF896 0x31FC      LDRB     R3,[R6, #+508]
   \   00000260   0x1C64             ADDS     R4,R4,#+1
   \   00000262   0xB2E4             UXTB     R4,R4
   \   00000264   0x42A3             CMP      R3,R4
   \   00000266   0xD2F6             BCS.N    ??Deal_Black_YaoTou_26
    202                 num_down--;
    203                 ccd_group->White_TO_Black[0]=ccd_group->White_TO_Black[1];
   \   00000268   0xF896 0x31FD      LDRB     R3,[R6, #+509]
   \   0000026C   0x2101             MOVS     R1,#+1
   \   0000026E   0xF886 0x31FC      STRB     R3,[R6, #+508]
    204               }
    205             }
    206             
    207             if(num_rise==0&&num_down==1&&ccd_group->White_TO_Black[0]<63)       
   \                     ??Deal_Black_YaoTou_25:
   \   00000272   0xB980             CBNZ.N   R0,??Deal_Black_YaoTou_27
   \   00000274   0x2901             CMP      R1,#+1
   \   00000276   0xD121             BNE.N    ??Deal_Black_YaoTou_28
   \   00000278   0xF896 0x41FC      LDRB     R4,[R6, #+508]
   \   0000027C   0x2C3F             CMP      R4,#+63
   \   0000027E   0xD21D             BCS.N    ??Deal_Black_YaoTou_28
    208              for(j=ccd_group->White_TO_Black[0];j<=63;j++)
   \   00000280   0x19A3             ADDS     R3,R4,R6
   \   00000282   0xF1C4 0x0440      RSB      R4,R4,#+64
   \   00000286   0xB2E4             UXTB     R4,R4
   \   00000288   0x2500             MOVS     R5,#+0
    209                ccd_group->ccd_value[j]=0;
   \                     ??Deal_Black_YaoTou_29:
   \   0000028A   0xF883 0x5178      STRB     R5,[R3, #+376]
   \   0000028E   0x1C5B             ADDS     R3,R3,#+1
   \   00000290   0x1E64             SUBS     R4,R4,#+1
   \   00000292   0xD1FA             BNE.N    ??Deal_Black_YaoTou_29
   \   00000294   0xE012             B.N      ??Deal_Black_YaoTou_28
    210              
    211              if(num_rise==1&&num_down==0&& ccd_group->Black_TO_White[0]>63)
   \                     ??Deal_Black_YaoTou_27:
   \   00000296   0x2801             CMP      R0,#+1
   \   00000298   0xBF08             IT       EQ 
   \   0000029A   0x2900             CMPEQ    R1,#+0
   \   0000029C   0xD10E             BNE.N    ??Deal_Black_YaoTou_28
   \   0000029E   0xF896 0x31F8      LDRB     R3,[R6, #+504]
   \   000002A2   0x2B40             CMP      R3,#+64
   \   000002A4   0xD30A             BCC.N    ??Deal_Black_YaoTou_28
    212                for(j=64;j<=ccd_group->Black_TO_White[0];j++)
   \   000002A6   0x2440             MOVS     R4,#+64
   \   000002A8   0x2500             MOVS     R5,#+0
    213                  ccd_group->ccd_value[j]=0;
   \                     ??Deal_Black_YaoTou_30:
   \   000002AA   0x19A3             ADDS     R3,R4,R6
   \   000002AC   0xF883 0x5178      STRB     R5,[R3, #+376]
   \   000002B0   0xF896 0x31F8      LDRB     R3,[R6, #+504]
   \   000002B4   0x1C64             ADDS     R4,R4,#+1
   \   000002B6   0xB2E4             UXTB     R4,R4
   \   000002B8   0x42A3             CMP      R3,R4
   \   000002BA   0xD2F6             BCS.N    ??Deal_Black_YaoTou_30
    214          
    215              
    216              //CCD_AD_Average_YaoTou=0;
    217              for(j=0;j<=127;j++)                                                //Í³¼ÆºÚµã¸öÊý
   \                     ??Deal_Black_YaoTou_28:
   \   000002BC   0x4633             MOV      R3,R6
   \   000002BE   0x2480             MOVS     R4,#+128
    218              {
    219                if(ccd_group->ccd_value[j]==1)
   \                     ??Deal_Black_YaoTou_31:
   \   000002C0   0xF893 0x5178      LDRB     R5,[R3, #+376]
   \   000002C4   0x2D01             CMP      R5,#+1
   \   000002C6   0xBF08             IT       EQ 
   \   000002C8   0x1C52             ADDEQ    R2,R2,#+1
    220                  black_num++;
    221                else if(j>61&&j<67)                                              //×ÔÊÊÓ¦µ÷½Ú
    222                {
    223                  white_num++;
    224                  
    225                #if AUTOADJUST_EN
    226                  
    227                  ccd_group->CCD_AD_Average=ccd_group->CCD_AD_Average+(float)(ccd_group->CCD_AD_Value[j]);
    228                #endif
    229                  
    230                }
    231              }
   \   000002CA   0x1C5B             ADDS     R3,R3,#+1
   \   000002CC   0x1E64             SUBS     R4,R4,#+1
   \   000002CE   0xD1F7             BNE.N    ??Deal_Black_YaoTou_31
    232              
    233          #if AUTOADJUST_EN
    234              
    235              if(white_num!=0)
    236                ccd_group->CCD_AD_Average= ccd_group->CCD_AD_Average/(float)(white_num*120) ;
    237              
    238              if(ccd_group->CCD_AD_Average<1)
    239                ccd_group->CCD_AD_Average=1;
    240          #endif
    241              
    242              if((num_rise==0&&num_down==0))                                      //È«°×È«ºÚÅÐ¶Ï
   \   000002D0   0xEA51 0x0300      ORRS     R3,R1,R0
   \   000002D4   0xD11C             BNE.N    ??Deal_Black_YaoTou_32
    243              {
    244                if(
    245                  //CCD_AD_Value_YaoTou[20]>80&&
    246                  //CCD_AD_Value_YaoTou[30]>80&&
    247                 ccd_group->CCD_AD_Value[55]>baizhi&&
    248                  ccd_group->CCD_AD_Value[63]>baizhi&&
    249                    ccd_group->CCD_AD_Value[64]>baizhi&&
    250                      ccd_group->CCD_AD_Value[70]>baizhi
    251                 //&&CCD_AD_Value_YaoTou[90]>80
    252                 //&&CCD_AD_Value_YaoTou[100]>80
    253                 )
   \   000002D6   0xF8B6 0x2072      LDRH     R2,[R6, #+114]
   \   000002DA   0x2A5B             CMP      R2,#+91
   \   000002DC   0xBF24             ITT      CS 
   \   000002DE   0xF8B6 0x2082      LDRHCS   R2,[R6, #+130]
   \   000002E2   0x2A5B             CMPCS    R2,#+91
   \   000002E4   0xD30F             BCC.N    ??Deal_Black_YaoTou_33
   \   000002E6   0xF8B6 0x2084      LDRH     R2,[R6, #+132]
   \   000002EA   0x2A5B             CMP      R2,#+91
   \   000002EC   0xBF24             ITT      CS 
   \   000002EE   0xF8B6 0x2090      LDRHCS   R2,[R6, #+144]
   \   000002F2   0x2A5B             CMPCS    R2,#+91
   \   000002F4   0xD307             BCC.N    ??Deal_Black_YaoTou_33
    254                {
    255                  if(Stop_flag<40)
   \   000002F6   0x....             LDR.N    R3,??DataTable2_3
   \   000002F8   0x781A             LDRB     R2,[R3, #+0]
   \   000002FA   0x2A28             CMP      R2,#+40
   \   000002FC   0xBF3C             ITT      CC 
   \   000002FE   0x2200             MOVCC    R2,#+0
   \   00000300   0x701A             STRBCC   R2,[R3, #+0]
    256                  Stop_flag=0;
    257                  black_num=0;
   \   00000302   0x2200             MOVS     R2,#+0
   \   00000304   0xE00A             B.N      ??Deal_Black_YaoTou_34
    258                }
    259                else
    260                {
    261                  black_num=127;
    262                  Stop_flag++;
   \                     ??Deal_Black_YaoTou_33:
   \   00000306   0x....             LDR.N    R3,??DataTable2_3
   \   00000308   0x227F             MOVS     R2,#+127
   \   0000030A   0x781C             LDRB     R4,[R3, #+0]
   \   0000030C   0x1C64             ADDS     R4,R4,#+1
   \   0000030E   0xE004             B.N      ??Deal_Black_YaoTou_35
    263                }
    264              }
    265              else
    266              {
    267                if(Stop_flag<40)
   \                     ??Deal_Black_YaoTou_32:
   \   00000310   0x....             LDR.N    R3,??DataTable2_3
   \   00000312   0x781C             LDRB     R4,[R3, #+0]
   \   00000314   0x2C28             CMP      R4,#+40
   \   00000316   0xD201             BCS.N    ??Deal_Black_YaoTou_34
    268                  Stop_flag=0;
   \   00000318   0x2400             MOVS     R4,#+0
   \                     ??Deal_Black_YaoTou_35:
   \   0000031A   0x701C             STRB     R4,[R3, #+0]
    269               }
    270              if((black_num>3&&black_num<90&&num_rise<=1&&num_down<=1))//||ZhuanTou_Flag==1  
   \                     ??Deal_Black_YaoTou_34:
   \   0000031C   0x1F13             SUBS     R3,R2,#+4
   \   0000031E   0x2B56             CMP      R3,#+86
   \   00000320   0xD238             BCS.N    ??Deal_Black_YaoTou_36
   \   00000322   0x2802             CMP      R0,#+2
   \   00000324   0xBFB8             IT       LT 
   \   00000326   0x2902             CMPLT    R1,#+2
   \   00000328   0xDA34             BGE.N    ??Deal_Black_YaoTou_36
    271              {
    272                total_weight=0;                       //¸ø±£´æÈ¨ÖµÖ®ºÍµÄ±äÁ¿ÇåÁã
   \   0000032A   0x2000             MOVS     R0,#+0
    273                for(i = 4;i<124;i++)                   //ÒÔÏÂÈýÐÐ¼ÆËã³ö×ÜÈ¨Öµ
   \   0000032C   0x1D31             ADDS     R1,R6,#+4
   \   0000032E   0x.... 0x....      ADR.W    R3,tab+0x8
   \   00000332   0x2478             MOVS     R4,#+120
    274                {
    275                  if(ccd_group->ccd_value[i]==1)
   \                     ??Deal_Black_YaoTou_37:
   \   00000334   0xF891 0x5178      LDRB     R5,[R1, #+376]
   \   00000338   0x2D01             CMP      R5,#+1
   \   0000033A   0xD103             BNE.N    ??Deal_Black_YaoTou_38
    276                    total_weight += tab[i];
   \   0000033C   0xF9B3 0x5000      LDRSH    R5,[R3, #+0]
   \   00000340   0x1828             ADDS     R0,R5,R0
   \   00000342   0xB280             UXTH     R0,R0
    277                 }
   \                     ??Deal_Black_YaoTou_38:
   \   00000344   0x1C9B             ADDS     R3,R3,#+2
   \   00000346   0x1C49             ADDS     R1,R1,#+1
   \   00000348   0x1E64             SUBS     R4,R4,#+1
   \   0000034A   0xD1F3             BNE.N    ??Deal_Black_YaoTou_37
    278                if(black_num!=0)
   \   0000034C   0xB2D2             UXTB     R2,R2
   \   0000034E   0xB30A             CBZ.N    R2,??Deal_Black_YaoTou_36
    279                {
    280                  ccd_group->Black_Position=(total_weight/black_num);  //¼ÆËã³öÆ½¾ùÈ¨Öµ
   \   00000350   0xFB90 0xF0F2      SDIV     R0,R0,R2
   \   00000354   0xF8A6 0x020C      STRH     R0,[R6, #+524]
    281                  
    282                  ccd_group->Black_Position=(int)(ccd_group->Black_Position*0.9+ccd_group->Black_Position_Last*0.1);
   \   00000358   0xF9B6 0x020C      LDRSH    R0,[R6, #+524]
   \   0000035C   0x.... 0x....      BL       __aeabi_i2d
   \   00000360   0x....             LDR.N    R2,??DataTable2_4  ;; 0xcccccccd
   \   00000362   0x....             LDR.N    R3,??DataTable2_5  ;; 0x3feccccc
   \   00000364   0x.... 0x....      BL       __aeabi_dmul
   \   00000368   0x4604             MOV      R4,R0
   \   0000036A   0x460D             MOV      R5,R1
   \   0000036C   0xF9B6 0x020E      LDRSH    R0,[R6, #+526]
   \   00000370   0x.... 0x....      BL       __aeabi_i2d
   \   00000374   0x....             LDR.N    R2,??DataTable2_6  ;; 0x9999999a
   \   00000376   0x....             LDR.N    R3,??DataTable2_7  ;; 0x3fb99999
   \   00000378   0x.... 0x....      BL       __aeabi_dmul
   \   0000037C   0x4622             MOV      R2,R4
   \   0000037E   0x462B             MOV      R3,R5
   \   00000380   0x.... 0x....      BL       __aeabi_dadd
   \   00000384   0x.... 0x....      BL       __aeabi_d2iz
   \   00000388   0xF8A6 0x020C      STRH     R0,[R6, #+524]
    283                  ccd_group->Black_Position_Last= ccd_group->Black_Position;
   \   0000038C   0xF8B6 0x020C      LDRH     R0,[R6, #+524]
   \   00000390   0xF8A6 0x020E      STRH     R0,[R6, #+526]
    284                }
    285              }
    286              
    287              
    288              ccd_group->Black_TO_White_His[0]=ccd_group->Black_TO_White_His[1];
   \                     ??Deal_Black_YaoTou_36:
   \   00000394   0xF896 0x0201      LDRB     R0,[R6, #+513]
   \   00000398   0xF886 0x0200      STRB     R0,[R6, #+512]
    289              ccd_group->Black_TO_White_His[1]=ccd_group->Black_TO_White_His[2];
   \   0000039C   0xF896 0x0202      LDRB     R0,[R6, #+514]
   \   000003A0   0xF886 0x0201      STRB     R0,[R6, #+513]
    290              ccd_group->Black_TO_White_His[2]=ccd_group->Black_TO_White_His[3];
   \   000003A4   0xF896 0x0203      LDRB     R0,[R6, #+515]
   \   000003A8   0xF886 0x0202      STRB     R0,[R6, #+514]
    291              ccd_group->Black_TO_White_His[3]=ccd_group->Black_TO_White_His[4];
   \   000003AC   0xF896 0x0204      LDRB     R0,[R6, #+516]
   \   000003B0   0xF886 0x0203      STRB     R0,[R6, #+515]
    292              ccd_group->Black_TO_White_His[4]=ccd_group->Black_TO_White_His[5];
   \   000003B4   0xF896 0x0205      LDRB     R0,[R6, #+517]
   \   000003B8   0xF886 0x0204      STRB     R0,[R6, #+516]
    293              ccd_group->Black_TO_White_His[5]=ccd_group->Black_TO_White[0];
   \   000003BC   0xF896 0x01F8      LDRB     R0,[R6, #+504]
   \   000003C0   0xF886 0x0205      STRB     R0,[R6, #+517]
    294              
    295              ccd_group->Black_TO_White_His[0]=ccd_group->Black_TO_White_His[1];
   \   000003C4   0xF896 0x0201      LDRB     R0,[R6, #+513]
   \   000003C8   0xF886 0x0200      STRB     R0,[R6, #+512]
    296              ccd_group->Black_TO_White_His[1]=ccd_group->Black_TO_White_His[2];
   \   000003CC   0xF896 0x0202      LDRB     R0,[R6, #+514]
   \   000003D0   0xF886 0x0201      STRB     R0,[R6, #+513]
    297              ccd_group->Black_TO_White_His[2]=ccd_group->Black_TO_White_His[3];
   \   000003D4   0xF896 0x0203      LDRB     R0,[R6, #+515]
   \   000003D8   0xF886 0x0202      STRB     R0,[R6, #+514]
    298              ccd_group->Black_TO_White_His[3]=ccd_group->Black_TO_White_His[4];
   \   000003DC   0xF896 0x0204      LDRB     R0,[R6, #+516]
   \   000003E0   0xF886 0x0203      STRB     R0,[R6, #+515]
    299              ccd_group->Black_TO_White_His[4]=ccd_group->Black_TO_White_His[5];
   \   000003E4   0xF896 0x0205      LDRB     R0,[R6, #+517]
   \   000003E8   0xF886 0x0204      STRB     R0,[R6, #+516]
    300              ccd_group->Black_TO_White_His[5]=ccd_group->Black_TO_White[0];
   \   000003EC   0xF896 0x01F8      LDRB     R0,[R6, #+504]
   \   000003F0   0xF886 0x0205      STRB     R0,[R6, #+517]
    301          }
   \   000003F4   0xE8BD 0x83F0      POP      {R4-R9,PC}       ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2:
   \   00000000   0x400FF080         DC32     0x400ff080

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_1:
   \   00000000   0x400FF0C0         DC32     0x400ff0c0

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_2:
   \   00000000   0x4003B000         DC32     0x4003b000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_3:
   \   00000000   0x........         DC32     Stop_flag

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_4:
   \   00000000   0xCCCCCCCD         DC32     0xcccccccd

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_5:
   \   00000000   0x3FECCCCC         DC32     0x3feccccc

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_6:
   \   00000000   0x9999999A         DC32     0x9999999a

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_7:
   \   00000000   0x3FB99999         DC32     0x3fb99999

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       28  Deal_Black_YaoTou
             28 -> __aeabi_d2iz
             28 -> __aeabi_dadd
             28 -> __aeabi_dmul
             28 -> __aeabi_i2d
       24  TSL1401_GetLine
             24 -> ADC_readResult
              0 -> GPIO_SetPinStat
             24 -> GPIO_SetPinStat


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable2
       4  ??DataTable2_1
       4  ??DataTable2_2
       4  ??DataTable2_3
       4  ??DataTable2_4
       4  ??DataTable2_5
       4  ??DataTable2_6
       4  ??DataTable2_7
    1016  Deal_Black_YaoTou
     532  MAIN_CCD
       1  Stop_flag
     182  TSL1401_GetLine
     256  tab

 
     1 byte  in section .bss
   532 bytes in section .data
 1 486 bytes in section .text
 
 1 486 bytes of CODE memory
   533 bytes of DATA memory

Errors: none
Warnings: none
