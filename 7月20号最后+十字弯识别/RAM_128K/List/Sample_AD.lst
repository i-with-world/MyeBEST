###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V6.30.1.53127/W32 for ARM     17/Jan/2014  16:44:41 #
# Copyright 1999-2011 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  thumb                                                    #
#    Endian       =  little                                                   #
#    Source file  =  E:\2013智能车\2013光电\fighting\MyFunction\Sample_AD.c   #
#    Command line =  E:\2013智能车\2013光电\fighting\MyFunction\Sample_AD.c   #
#                    -D IAR -lCN E:\2013智能车\2013光电\fighting\RAM_128K\Lis #
#                    t\ -lB E:\2013智能车\2013光电\fighting\RAM_128K\List\    #
#                    -o E:\2013智能车\2013光电\fighting\RAM_128K\Obj\         #
#                    --debug --endian=little --cpu=Cortex-M4 -e --fpu=None    #
#                    --dlib_config "C:\Program Files (x86)\IAR                #
#                    Systems\Embedded Workbench 6.0\arm\INC\c\DLib_Config_Nor #
#                    mal.h" -I E:\2013智能车\2013光电\fighting\Library\CPU\   #
#                    -I E:\2013智能车\2013光电\fighting\Library\Drivers\ADC\  #
#                    -I E:\2013智能车\2013光电\fighting\Library\Drivers\FTM\  #
#                    -I E:\2013智能车\2013光电\fighting\Library\Drivers\GPIO\ #
#                     -I E:\2013智能车\2013光电\fighting\Library\Drivers\PIT\ #
#                     -I E:\2013智能车\2013光电\fighting\MyFunction\ -Oh      #
#    List file    =  E:\2013智能车\2013光电\fighting\RAM_128K\List\Sample_AD. #
#                    lst                                                      #
#    Object file  =  E:\2013智能车\2013光电\fighting\RAM_128K\Obj\Sample_AD.o #
#                                                                             #
#                                                                             #
###############################################################################

E:\2013智能车\2013光电\fighting\MyFunction\Sample_AD.c
      1          #include "AllHeaders.h"
      2          
      3          /***************A/D相关量定义***********************/

   \                                 In section .bss, align 4
      4          int16u_t   CCD_AD_Value[128]={0};                             //采集的AD值
   \                     CCD_AD_Value:
   \   00000000                      DS8 256

   \                                 In section .bss, align 4
      5          int Black_Position;         //全局变量用于观察黑线位置
   \                     Black_Position:
   \   00000000                      DS8 4
      6          
      7          //----------------------------------------------------------------------
      8          //函 数 名:TSL1401_GetLine                                                       
      9          //功    能:获得AD采样像素                                       
     10          //参    数:*pixel  获得的像素值                          
     11          //返    回:无                                                                                       
     12          //----------------------------------------------------------------------
     13          

   \                                 In section .text, align 2, keep-with-next
     14          void TSL1401_GetLine(int16u_t  *pixel)
     15          {
   \                     TSL1401_GetLine:
   \   00000000   0xB5F8             PUSH     {R3-R7,LR}
     16            int8u_t i;
     17            GPIO_SetPinStat(PORTB,16,1);    
   \   00000002   0x....             LDR.N    R4,??DataTable1  ;; 0x400ff040
   \   00000004   0x2201             MOVS     R2,#+1
   \   00000006   0x2110             MOVS     R1,#+16
   \   00000008   0x4620             MOV      R0,R4
   \   0000000A   0x.... 0x....      BL       GPIO_SetPinStat
     18            delay();
   \   0000000E   0x.... 0x....      BL       delay
     19            GPIO_SetPinStat(PORTB,17,1);
   \   00000012   0x2201             MOVS     R2,#+1
   \   00000014   0x2111             MOVS     R1,#+17
   \   00000016   0x4620             MOV      R0,R4
   \   00000018   0x.... 0x....      BL       GPIO_SetPinStat
     20            delay();
   \   0000001C   0x.... 0x....      BL       delay
     21            GPIO_SetPinStat(PORTB,16,0);
   \   00000020   0x2200             MOVS     R2,#+0
   \   00000022   0x2110             MOVS     R1,#+16
   \   00000024   0x4620             MOV      R0,R4
   \   00000026   0x.... 0x....      BL       GPIO_SetPinStat
     22            
     23                                                               
     24            for(i=0;i<=50;i++)
   \   0000002A   0x2533             MOVS     R5,#+51
     25            {
     26            delay();
   \                     ??TSL1401_GetLine_0:
   \   0000002C   0x.... 0x....      BL       delay
     27            }
   \   00000030   0x1E6D             SUBS     R5,R5,#+1
   \   00000032   0xD1FB             BNE.N    ??TSL1401_GetLine_0
     28            ADC_readResult(ADC0, 13, &CCD_AD_Value[0]);        //采集第1个点
   \   00000034   0x....             LDR.N    R5,??DataTable1_1  ;; 0x4003b000
   \   00000036   0x....             LDR.N    R6,??DataTable1_2
   \   00000038   0x210D             MOVS     R1,#+13
   \   0000003A   0x4632             MOV      R2,R6
   \   0000003C   0x4628             MOV      R0,R5
   \   0000003E   0x.... 0x....      BL       ADC_readResult
     29            GPIO_SetPinStat(PORTB,17,0);
   \   00000042   0x2200             MOVS     R2,#+0
   \   00000044   0x2111             MOVS     R1,#+17
   \   00000046   0x4620             MOV      R0,R4
   \   00000048   0x.... 0x....      BL       GPIO_SetPinStat
     30            
     31                                            
     32            for(i=1; i<128; i++)                                 //采集第2~128个点像素序列
   \   0000004C   0x1CB6             ADDS     R6,R6,#+2
   \   0000004E   0x277F             MOVS     R7,#+127
     33            {
     34             delay();
   \                     ??TSL1401_GetLine_1:
   \   00000050   0x.... 0x....      BL       delay
     35             delay();
   \   00000054   0x.... 0x....      BL       delay
     36             GPIO_SetPinStat(PORTB,17,1);
   \   00000058   0x2201             MOVS     R2,#+1
   \   0000005A   0x2111             MOVS     R1,#+17
   \   0000005C   0x4620             MOV      R0,R4
   \   0000005E   0x.... 0x....      BL       GPIO_SetPinStat
     37             delay(); 
   \   00000062   0x.... 0x....      BL       delay
     38             delay();
   \   00000066   0x.... 0x....      BL       delay
     39             ADC_readResult(ADC0,13, &CCD_AD_Value[i]); 
   \   0000006A   0x4632             MOV      R2,R6
   \   0000006C   0x210D             MOVS     R1,#+13
   \   0000006E   0x4628             MOV      R0,R5
   \   00000070   0x.... 0x....      BL       ADC_readResult
     40             GPIO_SetPinStat(PORTB,17,0);
   \   00000074   0x2200             MOVS     R2,#+0
   \   00000076   0x2111             MOVS     R1,#+17
   \   00000078   0x4620             MOV      R0,R4
   \   0000007A   0x.... 0x....      BL       GPIO_SetPinStat
     41            }
   \   0000007E   0x1CB6             ADDS     R6,R6,#+2
   \   00000080   0x1E7F             SUBS     R7,R7,#+1
   \   00000082   0xD1E5             BNE.N    ??TSL1401_GetLine_1
     42            
     43             delay();
   \   00000084   0x.... 0x....      BL       delay
     44             delay();                                            //发送第129个clk
   \   00000088   0x.... 0x....      BL       delay
     45             GPIO_SetPinStat(PORTB,17,1);
   \   0000008C   0x2201             MOVS     R2,#+1
   \   0000008E   0x2111             MOVS     R1,#+17
   \   00000090   0x4620             MOV      R0,R4
   \   00000092   0x.... 0x....      BL       GPIO_SetPinStat
     46             delay(); 
   \   00000096   0x.... 0x....      BL       delay
     47             delay();
   \   0000009A   0x.... 0x....      BL       delay
     48             GPIO_SetPinStat(PORTB,17,0);
   \   0000009E   0x4620             MOV      R0,R4
   \   000000A0   0xE8BD 0x40F8      POP      {R3-R7,LR}
   \   000000A4   0x2200             MOVS     R2,#+0
   \   000000A6   0x2111             MOVS     R1,#+17
   \   000000A8   0x.... 0x....      B.W      GPIO_SetPinStat
     49          }
     50          
     51          //----------------------------------------------------------------------
     52          //函 数 名:Deal_Black                                                      
     53          //功    能:黑线识别                                                           
     54          //备注: 无                                                                           
     55          //----------------------------------------------------------------------

   \                                 In section .text, align 2, keep-with-next
     56          void Deal_Black(void)
     57          {
   \                     Deal_Black:
   \   00000000   0xB410             PUSH     {R4}
     58            int i=0;
     59            for(i=10;i<=118;i++)
   \   00000002   0x....             LDR.N    R2,??DataTable1_2
   \   00000004   0x8C13             LDRH     R3,[R2, #+32]
   \   00000006   0x8A94             LDRH     R4,[R2, #+20]
   \   00000008   0x210A             MOVS     R1,#+10
   \   0000000A   0xF06F 0x000A      MVN      R0,#+10
   \   0000000E   0x1AE4             SUBS     R4,R4,R3
   \   00000010   0x2C0C             CMP      R4,#+12
   \   00000012   0xDB03             BLT.N    ??Deal_Black_0
   \   00000014   0x8D94             LDRH     R4,[R2, #+44]
   \   00000016   0x1B1B             SUBS     R3,R3,R4
   \   00000018   0x4283             CMP      R3,R0
   \   0000001A   0xDB0B             BLT.N    ??Deal_Black_1
     60            {
     61              if((CCD_AD_Value[i]-CCD_AD_Value[i+6])>=12&& (CCD_AD_Value[i+6]-CCD_AD_Value[i+12])<=-12)
   \                     ??Deal_Black_0:
   \   0000001C   0x210B             MOVS     R1,#+11
   \   0000001E   0xF202 0x0216      ADDW     R2,R2,#+22
   \                     ??Deal_Black_2:
   \   00000022   0x8993             LDRH     R3,[R2, #+12]
   \   00000024   0x8814             LDRH     R4,[R2, #+0]
   \   00000026   0x1AE4             SUBS     R4,R4,R3
   \   00000028   0x2C0C             CMP      R4,#+12
   \   0000002A   0xDB08             BLT.N    ??Deal_Black_3
   \   0000002C   0x8B14             LDRH     R4,[R2, #+24]
   \   0000002E   0x1B1B             SUBS     R3,R3,R4
   \   00000030   0x4283             CMP      R3,R0
   \   00000032   0xDA04             BGE.N    ??Deal_Black_3
     62              {
     63                Black_Position=i-57; 
   \                     ??Deal_Black_1:
   \   00000034   0xF1A1 0x0039      SUB      R0,R1,#+57
   \   00000038   0x....             LDR.N    R1,??DataTable1_3
   \   0000003A   0x6008             STR      R0,[R1, #+0]
     64                break;
   \   0000003C   0xE018             B.N      ??Deal_Black_4
     65              } 
   \                     ??Deal_Black_3:
   \   0000003E   0x89D3             LDRH     R3,[R2, #+14]
   \   00000040   0x8854             LDRH     R4,[R2, #+2]
   \   00000042   0x1C49             ADDS     R1,R1,#+1
   \   00000044   0x1AE4             SUBS     R4,R4,R3
   \   00000046   0x2C0C             CMP      R4,#+12
   \   00000048   0xDB03             BLT.N    ??Deal_Black_5
   \   0000004A   0x8B54             LDRH     R4,[R2, #+26]
   \   0000004C   0x1B1B             SUBS     R3,R3,R4
   \   0000004E   0x4283             CMP      R3,R0
   \   00000050   0xDBF0             BLT.N    ??Deal_Black_1
   \                     ??Deal_Black_5:
   \   00000052   0x8A13             LDRH     R3,[R2, #+16]
   \   00000054   0x8894             LDRH     R4,[R2, #+4]
   \   00000056   0x1C49             ADDS     R1,R1,#+1
   \   00000058   0x1AE4             SUBS     R4,R4,R3
   \   0000005A   0x2C0C             CMP      R4,#+12
   \   0000005C   0xDB03             BLT.N    ??Deal_Black_6
   \   0000005E   0x8B94             LDRH     R4,[R2, #+28]
   \   00000060   0x1B1B             SUBS     R3,R3,R4
   \   00000062   0x4283             CMP      R3,R0
   \   00000064   0xDBE6             BLT.N    ??Deal_Black_1
     66            }
   \                     ??Deal_Black_6:
   \   00000066   0x1C49             ADDS     R1,R1,#+1
   \   00000068   0xF202 0x0206      ADDW     R2,R2,#+6
   \   0000006C   0x2977             CMP      R1,#+119
   \   0000006E   0xDBD8             BLT.N    ??Deal_Black_2
     67          }
   \                     ??Deal_Black_4:
   \   00000070   0xBC10             POP      {R4}
   \   00000072   0x4770             BX       LR               ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1:
   \   00000000   0x400FF040         DC32     0x400ff040

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_1:
   \   00000000   0x4003B000         DC32     0x4003b000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_2:
   \   00000000   0x........         DC32     CCD_AD_Value

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_3:
   \   00000000   0x........         DC32     Black_Position
     68          
     69             
     70          
     71             
     72          
     73          
     74          
     75            
     76          
     77          
     78          
     79          
     80          
     81          

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
        4  Deal_Black
       24  TSL1401_GetLine
             24 -> ADC_readResult
              0 -> GPIO_SetPinStat
             24 -> GPIO_SetPinStat
             24 -> delay


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable1
       4  ??DataTable1_1
       4  ??DataTable1_2
       4  ??DataTable1_3
       4  Black_Position
     256  CCD_AD_Value
     116  Deal_Black
     172  TSL1401_GetLine

 
 260 bytes in section .bss
 304 bytes in section .text
 
 304 bytes of CODE memory
 260 bytes of DATA memory

Errors: none
Warnings: none
