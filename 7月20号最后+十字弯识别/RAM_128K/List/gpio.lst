###############################################################################
#                                                                             #
#                                                       30/Oct/2014  20:23:23 #
# IAR ANSI C/C++ Compiler V6.30.6.23336/W32 EVALUATION for ARM                #
# Copyright 1999-2012 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  thumb                                                    #
#    Endian       =  little                                                   #
#    Source file  =  E:\´´ÐÂ»î¶¯\ÖÇÄÜ³µ\µÚÊ®½ì\±¾³µ³ÌÐò\1029µ÷ÊÔ°æ\Library\Dr #
#                    ivers\GPIO\gpio.c                                        #
#    Command line =  E:\´´ÐÂ»î¶¯\ÖÇÄÜ³µ\µÚÊ®½ì\±¾³µ³ÌÐò\1029µ÷ÊÔ°æ\Library\Dr #
#                    ivers\GPIO\gpio.c -D IAR -lCN                            #
#                    E:\´´ÐÂ»î¶¯\ÖÇÄÜ³µ\µÚÊ®½ì\±¾³µ³ÌÐò\1029µ÷ÊÔ°æ\RAM_128K\L #
#                    ist\ -lB E:\´´ÐÂ»î¶¯\ÖÇÄÜ³µ\µÚÊ®½ì\±¾³µ³ÌÐò\1029µ÷ÊÔ°æ\R #
#                    AM_128K\List\ -o E:\´´ÐÂ»î¶¯\ÖÇÄÜ³µ\µÚÊ®½ì\±¾³µ³ÌÐò\1029 #
#                    µ÷ÊÔ°æ\RAM_128K\Obj\ --debug --endian=little             #
#                    --cpu=Cortex-M4 -e --fpu=None --dlib_config "C:\Program  #
#                    Files\IAR Systems\Embedded Workbench 6.0                 #
#                    Evaluation\arm\INC\c\DLib_Config_Normal.h" -I            #
#                    E:\´´ÐÂ»î¶¯\ÖÇÄÜ³µ\µÚÊ®½ì\±¾³µ³ÌÐò\1029µ÷ÊÔ°æ\Library\CP #
#                    U\ -I E:\´´ÐÂ»î¶¯\ÖÇÄÜ³µ\µÚÊ®½ì\±¾³µ³ÌÐò\1029µ÷ÊÔ°æ\Libr #
#                    ary\Drivers\ADC\ -I E:\´´ÐÂ»î¶¯\ÖÇÄÜ³µ\µÚÊ®½ì\±¾³µ³ÌÐò\1 #
#                    029µ÷ÊÔ°æ\Library\Drivers\FTM\ -I                        #
#                    E:\´´ÐÂ»î¶¯\ÖÇÄÜ³µ\µÚÊ®½ì\±¾³µ³ÌÐò\1029µ÷ÊÔ°æ\Library\Dr #
#                    ivers\GPIO\ -I E:\´´ÐÂ»î¶¯\ÖÇÄÜ³µ\µÚÊ®½ì\±¾³µ³ÌÐò\1029µ÷ #
#                    ÊÔ°æ\Library\Drivers\PIT\ -I                             #
#                    E:\´´ÐÂ»î¶¯\ÖÇÄÜ³µ\µÚÊ®½ì\±¾³µ³ÌÐò\1029µ÷ÊÔ°æ\System_Ini #
#                    t\ -I E:\´´ÐÂ»î¶¯\ÖÇÄÜ³µ\µÚÊ®½ì\±¾³µ³ÌÐò\1029µ÷ÊÔ°æ\Sour #
#                    ce\ -I E:\´´ÐÂ»î¶¯\ÖÇÄÜ³µ\µÚÊ®½ì\±¾³µ³ÌÐò\1029µ÷ÊÔ°æ\OLE #
#                    D\ -I E:\´´ÐÂ»î¶¯\ÖÇÄÜ³µ\µÚÊ®½ì\±¾³µ³ÌÐò\1029µ÷ÊÔ°æ\SD_S #
#                    ystem\ -I E:\´´ÐÂ»î¶¯\ÖÇÄÜ³µ\µÚÊ®½ì\±¾³µ³ÌÐò\1029µ÷ÊÔ°æ\ #
#                    Simple_AD\ -I E:\´´ÐÂ»î¶¯\ÖÇÄÜ³µ\µÚÊ®½ì\±¾³µ³ÌÐò\1029µ÷Ê #
#                    Ô°æ\Delay\ -I E:\´´ÐÂ»î¶¯\ÖÇÄÜ³µ\µÚÊ®½ì\±¾³µ³ÌÐò\1029µ÷Ê #
#                    Ô°æ\Make_Desicion\ -Oh                                   #
#    List file    =  E:\´´ÐÂ»î¶¯\ÖÇÄÜ³µ\µÚÊ®½ì\±¾³µ³ÌÐò\1029µ÷ÊÔ°æ\RAM_128K\L #
#                    ist\gpio.lst                                             #
#    Object file  =  E:\´´ÐÂ»î¶¯\ÖÇÄÜ³µ\µÚÊ®½ì\±¾³µ³ÌÐò\1029µ÷ÊÔ°æ\RAM_128K\O #
#                    bj\gpio.o                                                #
#                                                                             #
#                                                                             #
###############################################################################

E:\´´ÐÂ»î¶¯\ÖÇÄÜ³µ\µÚÊ®½ì\±¾³µ³ÌÐò\1029µ÷ÊÔ°æ\Library\Drivers\GPIO\gpio.c
      1          /*******************************************************************************
      2          * ÎÄ¼þÃû³Æ£ºgpio.c
      3          * Ãè    Êö: GPIO¿ÚÇý¶¯³ÌÐò£¨²Î¿¼¼Í³ÉÊ¦ÐÖÇý¶¯³ÌÐò£©
      4          * ×÷    Õß£ºÍò±ù±ù
      5          * ÌØ±ðÃùÐ»£º¼Í³ÉÊ¦ÐÖ(²©¿Íhttp://blog.chinaaet.com/jihceng0622)
      6          * Ê±    ¼ä£º2012Äê5ÔÂ17ÈÕ
      7          *******************************************************************************/
      8          
      9          #include "gpio.h"
     10          
     11          
     12          static PORT_MemMapPtr GPIO_GetPortMapPtr(GPIO_MemMapPtr gpio);
     13          
     14          /*******************************************************************************
     15          * º¯ÊýÃû³Æ£ºGPIO_SetPinMod
     16          * Èë¿Ú²ÎÊý£ºgpio   GPIO¿Ú
     17                      pin    gpio¿ÚµÄÒý½ÅºÅ
     18                      mux    ¸ÃÒý½ÅµÄ¹¦ÄÜºÅ
     19          * Ãè    Êö£ºÉèÖÃGPIOÖÐµÚ pin ¸öÒý½ÅµÄ¹¦ÄÜºÅ
     20          *******************************************************************************/

   \                                 In section .text, align 2, keep-with-next
     21          void GPIO_SetPinMod(GPIO_MemMapPtr gpio, int8u_t pin, int8u_t mux)
     22          {
     23            PORT_MemMapPtr port;
     24            int32u_t       readReg = 0;
     25            
     26            port = GPIO_GetPortMapPtr(gpio);
   \                     GPIO_SetPinMod:
   \   00000000   0x.... 0x....      LDR.W    R12,??DataTable4  ;; 0x400ff000
   \   00000004   0xEBB0 0x000C      SUBS     R0,R0,R12
   \   00000008   0xD00F             BEQ.N    ??GPIO_SetPinMod_0
   \   0000000A   0x3840             SUBS     R0,R0,#+64
   \   0000000C   0xD00B             BEQ.N    ??GPIO_SetPinMod_1
   \   0000000E   0x3840             SUBS     R0,R0,#+64
   \   00000010   0xD007             BEQ.N    ??GPIO_SetPinMod_2
   \   00000012   0x3840             SUBS     R0,R0,#+64
   \   00000014   0xD003             BEQ.N    ??GPIO_SetPinMod_3
   \   00000016   0x3840             SUBS     R0,R0,#+64
   \   00000018   0xD108             BNE.N    ??GPIO_SetPinMod_4
   \   0000001A   0x....             LDR.N    R3,??DataTable4_1  ;; 0x4004d000
   \   0000001C   0xE006             B.N      ??GPIO_SetPinMod_4
   \                     ??GPIO_SetPinMod_3:
   \   0000001E   0x....             LDR.N    R3,??DataTable4_2  ;; 0x4004c000
   \   00000020   0xE004             B.N      ??GPIO_SetPinMod_4
   \                     ??GPIO_SetPinMod_2:
   \   00000022   0x....             LDR.N    R3,??DataTable4_3  ;; 0x4004b000
   \   00000024   0xE002             B.N      ??GPIO_SetPinMod_4
   \                     ??GPIO_SetPinMod_1:
   \   00000026   0x....             LDR.N    R3,??DataTable4_4  ;; 0x4004a000
   \   00000028   0xE000             B.N      ??GPIO_SetPinMod_4
   \                     ??GPIO_SetPinMod_0:
   \   0000002A   0x....             LDR.N    R3,??DataTable4_5  ;; 0x40049000
     27            readReg = PORT_PCR_REG(port,pin);
     28            readReg &= ~PORT_PCR_MUX_MASK;
     29            readReg |= PORT_PCR_MUX(mux);
     30            PORT_PCR_REG(port,pin) = readReg;
   \                     ??GPIO_SetPinMod_4:
   \   0000002C   0xF853 0x0021      LDR      R0,[R3, R1, LSL #+2]
   \   00000030   0xF362 0x200A      BFI      R0,R2,#+8,#+3
   \   00000034   0x....             B.N      ?Subroutine0
     31          }

   \                                 In section .text, align 2, keep-with-next
   \                     ?Subroutine0:
   \   00000000   0xF843 0x0021      STR      R0,[R3, R1, LSL #+2]
   \   00000004   0x4770             BX       LR               ;; return
     32          
     33          /*******************************************************************************
     34          * º¯ÊýÃû³Æ£ºGPIO_ConfigPinInt
     35          * Èë¿Ú²ÎÊý£ºgpio   GPIO¿ÚÖ¸Õë
     36                      pin    gpio¿ÚµÄÒý½ÅºÅ
     37                      irqc   ¸ÃÒý½ÅµÄÖÐ¶ÏÀàÐÍ
     38                              0000 Interrupt/DMA Request disabled.
     39                              0001 DMA Request on rising edge.
     40                              0010 DMA Request on falling edge.
     41                              0011 DMA Request on either edge.
     42                              0100 Reserved.
     43                              1000 Interrupt when logic zero
     44                              1001 Interrupt on rising edge.
     45                              1010 Interrupt on falling edge.
     46                              1011 Interrupt on either edge.
     47                              1100 Interrupt when logic one.
     48                              Others Reserved.
     49          * Ãè    Êö£ºÉèÖÃGPIOÖÐµÚ pin ¸öÒý½ÅµÄÖÐ¶ÏÀàÐÍ
     50          *******************************************************************************/

   \                                 In section .text, align 2, keep-with-next
     51          void GPIO_ConfigPinInt(GPIO_MemMapPtr gpio, int8u_t pin, int8u_t irqc)
     52          {
     53            PORT_MemMapPtr port;
     54            int32u_t       readReg = 0;
     55            
     56            port = GPIO_GetPortMapPtr(gpio);
   \                     GPIO_ConfigPinInt:
   \   00000000   0x.... 0x....      LDR.W    R12,??DataTable4  ;; 0x400ff000
   \   00000004   0xEBB0 0x000C      SUBS     R0,R0,R12
   \   00000008   0xD00F             BEQ.N    ??GPIO_ConfigPinInt_0
   \   0000000A   0x3840             SUBS     R0,R0,#+64
   \   0000000C   0xD00B             BEQ.N    ??GPIO_ConfigPinInt_1
   \   0000000E   0x3840             SUBS     R0,R0,#+64
   \   00000010   0xD007             BEQ.N    ??GPIO_ConfigPinInt_2
   \   00000012   0x3840             SUBS     R0,R0,#+64
   \   00000014   0xD003             BEQ.N    ??GPIO_ConfigPinInt_3
   \   00000016   0x3840             SUBS     R0,R0,#+64
   \   00000018   0xD108             BNE.N    ??GPIO_ConfigPinInt_4
   \   0000001A   0x....             LDR.N    R3,??DataTable4_1  ;; 0x4004d000
   \   0000001C   0xE006             B.N      ??GPIO_ConfigPinInt_4
   \                     ??GPIO_ConfigPinInt_3:
   \   0000001E   0x....             LDR.N    R3,??DataTable4_2  ;; 0x4004c000
   \   00000020   0xE004             B.N      ??GPIO_ConfigPinInt_4
   \                     ??GPIO_ConfigPinInt_2:
   \   00000022   0x....             LDR.N    R3,??DataTable4_3  ;; 0x4004b000
   \   00000024   0xE002             B.N      ??GPIO_ConfigPinInt_4
   \                     ??GPIO_ConfigPinInt_1:
   \   00000026   0x....             LDR.N    R3,??DataTable4_4  ;; 0x4004a000
   \   00000028   0xE000             B.N      ??GPIO_ConfigPinInt_4
   \                     ??GPIO_ConfigPinInt_0:
   \   0000002A   0x....             LDR.N    R3,??DataTable4_5  ;; 0x40049000
     57            readReg = PORT_PCR_REG(port,pin);
     58            readReg &= ~PORT_PCR_IRQC_MASK;
     59            readReg |= PORT_PCR_IRQC(irqc); 
     60            PORT_PCR_REG(port,pin) = readReg; 
   \                     ??GPIO_ConfigPinInt_4:
   \   0000002C   0xF853 0x0021      LDR      R0,[R3, R1, LSL #+2]
   \   00000030   0xF362 0x4013      BFI      R0,R2,#+16,#+4
   \   00000034                      REQUIRE ?Subroutine0
   \   00000034                      ;; // Fall through to label ?Subroutine0
     61          }
     62          
     63          /*******************************************************************************
     64          * º¯ÊýÃû³Æ£ºGPIO_SetPinDriveStrgth
     65          * Èë¿Ú²ÎÊý£ºgpio   GPIO¿ÚÖ¸Õë
     66                      pin    gpio¿ÚµÄÒý½ÅºÅ
     67                      mux    ¸ÃÒý½ÅµÄ¹¦ÄÜºÅ
     68                              0: ÈõÇý¶¯ÄÜÁ¦
     69                              1£ºÇ¿Çý¶¯ÄÜÁ¦
     70          * Ãè    Êö£ºÉèÖÃGPIOÖÐµÚ pin ¸öÒý½ÅµÄÇý¶¯ÄÜÁ¦
     71          *******************************************************************************/

   \                                 In section .text, align 2, keep-with-next
     72          void GPIO_SetPinDriveStrgth(GPIO_MemMapPtr gpio, int8u_t pin, int8u_t dse)
     73          {
     74            PORT_MemMapPtr port;
     75            
     76            port = GPIO_GetPortMapPtr(gpio);
   \                     GPIO_SetPinDriveStrgth:
   \   00000000   0x.... 0x....      LDR.W    R12,??DataTable4  ;; 0x400ff000
   \   00000004   0xEBB0 0x000C      SUBS     R0,R0,R12
   \   00000008   0xD00F             BEQ.N    ??GPIO_SetPinDriveStrgth_0
   \   0000000A   0x3840             SUBS     R0,R0,#+64
   \   0000000C   0xD00B             BEQ.N    ??GPIO_SetPinDriveStrgth_1
   \   0000000E   0x3840             SUBS     R0,R0,#+64
   \   00000010   0xD007             BEQ.N    ??GPIO_SetPinDriveStrgth_2
   \   00000012   0x3840             SUBS     R0,R0,#+64
   \   00000014   0xD003             BEQ.N    ??GPIO_SetPinDriveStrgth_3
   \   00000016   0x3840             SUBS     R0,R0,#+64
   \   00000018   0xD108             BNE.N    ??GPIO_SetPinDriveStrgth_4
   \   0000001A   0x....             LDR.N    R3,??DataTable4_1  ;; 0x4004d000
   \   0000001C   0xE006             B.N      ??GPIO_SetPinDriveStrgth_4
   \                     ??GPIO_SetPinDriveStrgth_3:
   \   0000001E   0x....             LDR.N    R3,??DataTable4_2  ;; 0x4004c000
   \   00000020   0xE004             B.N      ??GPIO_SetPinDriveStrgth_4
   \                     ??GPIO_SetPinDriveStrgth_2:
   \   00000022   0x....             LDR.N    R3,??DataTable4_3  ;; 0x4004b000
   \   00000024   0xE002             B.N      ??GPIO_SetPinDriveStrgth_4
   \                     ??GPIO_SetPinDriveStrgth_1:
   \   00000026   0x....             LDR.N    R3,??DataTable4_4  ;; 0x4004a000
   \   00000028   0xE000             B.N      ??GPIO_SetPinDriveStrgth_4
   \                     ??GPIO_SetPinDriveStrgth_0:
   \   0000002A   0x....             LDR.N    R3,??DataTable4_5  ;; 0x40049000
     77            if(dse == 1)
   \                     ??GPIO_SetPinDriveStrgth_4:
   \   0000002C   0x2A01             CMP      R2,#+1
   \   0000002E   0xF853 0x0021      LDR      R0,[R3, R1, LSL #+2]
   \   00000032   0xBF0C             ITE      EQ 
   \   00000034   0xF040 0x0040      ORREQ    R0,R0,#0x40
   \   00000038   0xF020 0x0040      BICNE    R0,R0,#0x40
     78            {
     79              PORT_PCR_REG(port,pin) |= PORT_PCR_DSE_MASK;
     80            }
     81            else
     82            {
     83              PORT_PCR_REG(port,pin) &= ~PORT_PCR_DSE_MASK;
   \   0000003C   0x....             B.N      ?Subroutine0
     84            }
     85          }
     86          
     87          /*******************************************************************************
     88          * º¯ÊýÃû³Æ£ºGPIO_SetPinOpenDrain
     89          * Èë¿Ú²ÎÊý£ºgpio   GPIO¿ÚÖ¸Õë
     90                      pin    gpio¿ÚµÄÒý½ÅºÅ
     91                      ode    ¸ÃÒý½ÅµÄ¹¦ÄÜºÅ
     92                              0: ½ûÖ¹¿ªÂ©Êä³ö
     93                              1£ºÊ¹ÄÜ¿ªÂ©Êä³ö
     94          * Ãè    Êö£ºÉèÖÃGPIOÖÐµÚ pin ¸öÒý½ÅµÄ¿ªÂ©Ä£Ê½
     95          *******************************************************************************/

   \                                 In section .text, align 2, keep-with-next
     96          void GPIO_SetPinOpenDrain(GPIO_MemMapPtr gpio, int8u_t pin, int8u_t ode)
     97          {
     98            PORT_MemMapPtr port;
     99            
    100            port = GPIO_GetPortMapPtr(gpio);
   \                     GPIO_SetPinOpenDrain:
   \   00000000   0x.... 0x....      LDR.W    R12,??DataTable4  ;; 0x400ff000
   \   00000004   0xEBB0 0x000C      SUBS     R0,R0,R12
   \   00000008   0xD00F             BEQ.N    ??GPIO_SetPinOpenDrain_0
   \   0000000A   0x3840             SUBS     R0,R0,#+64
   \   0000000C   0xD00B             BEQ.N    ??GPIO_SetPinOpenDrain_1
   \   0000000E   0x3840             SUBS     R0,R0,#+64
   \   00000010   0xD007             BEQ.N    ??GPIO_SetPinOpenDrain_2
   \   00000012   0x3840             SUBS     R0,R0,#+64
   \   00000014   0xD003             BEQ.N    ??GPIO_SetPinOpenDrain_3
   \   00000016   0x3840             SUBS     R0,R0,#+64
   \   00000018   0xD108             BNE.N    ??GPIO_SetPinOpenDrain_4
   \   0000001A   0x....             LDR.N    R3,??DataTable4_1  ;; 0x4004d000
   \   0000001C   0xE006             B.N      ??GPIO_SetPinOpenDrain_4
   \                     ??GPIO_SetPinOpenDrain_3:
   \   0000001E   0x....             LDR.N    R3,??DataTable4_2  ;; 0x4004c000
   \   00000020   0xE004             B.N      ??GPIO_SetPinOpenDrain_4
   \                     ??GPIO_SetPinOpenDrain_2:
   \   00000022   0x....             LDR.N    R3,??DataTable4_3  ;; 0x4004b000
   \   00000024   0xE002             B.N      ??GPIO_SetPinOpenDrain_4
   \                     ??GPIO_SetPinOpenDrain_1:
   \   00000026   0x....             LDR.N    R3,??DataTable4_4  ;; 0x4004a000
   \   00000028   0xE000             B.N      ??GPIO_SetPinOpenDrain_4
   \                     ??GPIO_SetPinOpenDrain_0:
   \   0000002A   0x....             LDR.N    R3,??DataTable4_5  ;; 0x40049000
    101            if(ode == 1)
   \                     ??GPIO_SetPinOpenDrain_4:
   \   0000002C   0x2A01             CMP      R2,#+1
   \   0000002E   0xF853 0x0021      LDR      R0,[R3, R1, LSL #+2]
   \   00000032   0xBF0C             ITE      EQ 
   \   00000034   0xF040 0x0020      ORREQ    R0,R0,#0x20
   \   00000038   0xF020 0x0020      BICNE    R0,R0,#0x20
    102            {
    103              PORT_PCR_REG(port,pin) |= PORT_PCR_ODE_MASK;
    104            }
    105            else
    106            {
    107              PORT_PCR_REG(port,pin) &= ~PORT_PCR_ODE_MASK;
   \   0000003C   0x....             B.N      ?Subroutine0
    108            }
    109          }
    110          
    111          /*******************************************************************************
    112          * º¯ÊýÃû³Æ£ºGPIO_SetPinPassiveFilter
    113          * Èë¿Ú²ÎÊý£ºgpio   GPIO¿ÚÖ¸Õë
    114                      pin    gpio¿ÚµÄÒý½ÅºÅ
    115                      ode    ¸ÃÒý½ÅµÄ¹¦ÄÜºÅ
    116                              0: ½ûÖ¹µÍÍ¨ÂË²¨
    117                              1£ºÊ¹ÄÜµÍÍ¨ÂË²¨£¨10MHZ~30MHZ´ø¿í£©£¬ÐÅºÅÆµÂÊ¸ßÓÚ2MHZÊ±Ó¦½ûÖ¹¸Ã¹¦ÄÜ
    118          * Ãè    Êö£ºÉèÖÃGPIOÖÐµÚ pin ¸öÒý½ÅµÄÂË²¨Ä£Ê½
    119          *******************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    120          void GPIO_SetPinPassiveFilter(GPIO_MemMapPtr gpio, int8u_t pin, int8u_t pfe)
    121          {
    122            PORT_MemMapPtr port;
    123            
    124            port = GPIO_GetPortMapPtr(gpio);
   \                     GPIO_SetPinPassiveFilter:
   \   00000000   0x.... 0x....      LDR.W    R12,??DataTable4  ;; 0x400ff000
   \   00000004   0xEBB0 0x000C      SUBS     R0,R0,R12
   \   00000008   0xD00F             BEQ.N    ??GPIO_SetPinPassiveFilter_0
   \   0000000A   0x3840             SUBS     R0,R0,#+64
   \   0000000C   0xD00B             BEQ.N    ??GPIO_SetPinPassiveFilter_1
   \   0000000E   0x3840             SUBS     R0,R0,#+64
   \   00000010   0xD007             BEQ.N    ??GPIO_SetPinPassiveFilter_2
   \   00000012   0x3840             SUBS     R0,R0,#+64
   \   00000014   0xD003             BEQ.N    ??GPIO_SetPinPassiveFilter_3
   \   00000016   0x3840             SUBS     R0,R0,#+64
   \   00000018   0xD108             BNE.N    ??GPIO_SetPinPassiveFilter_4
   \   0000001A   0x....             LDR.N    R3,??DataTable4_1  ;; 0x4004d000
   \   0000001C   0xE006             B.N      ??GPIO_SetPinPassiveFilter_4
   \                     ??GPIO_SetPinPassiveFilter_3:
   \   0000001E   0x....             LDR.N    R3,??DataTable4_2  ;; 0x4004c000
   \   00000020   0xE004             B.N      ??GPIO_SetPinPassiveFilter_4
   \                     ??GPIO_SetPinPassiveFilter_2:
   \   00000022   0x....             LDR.N    R3,??DataTable4_3  ;; 0x4004b000
   \   00000024   0xE002             B.N      ??GPIO_SetPinPassiveFilter_4
   \                     ??GPIO_SetPinPassiveFilter_1:
   \   00000026   0x....             LDR.N    R3,??DataTable4_4  ;; 0x4004a000
   \   00000028   0xE000             B.N      ??GPIO_SetPinPassiveFilter_4
   \                     ??GPIO_SetPinPassiveFilter_0:
   \   0000002A   0x....             LDR.N    R3,??DataTable4_5  ;; 0x40049000
    125            if(pfe == 1)
   \                     ??GPIO_SetPinPassiveFilter_4:
   \   0000002C   0x2A01             CMP      R2,#+1
   \   0000002E   0xF853 0x0021      LDR      R0,[R3, R1, LSL #+2]
   \   00000032   0xBF0C             ITE      EQ 
   \   00000034   0xF040 0x0010      ORREQ    R0,R0,#0x10
   \   00000038   0xF020 0x0010      BICNE    R0,R0,#0x10
    126            {
    127              PORT_PCR_REG(port,pin) |= PORT_PCR_PFE_MASK;
    128            }
    129            else
    130            {
    131              PORT_PCR_REG(port,pin) &= ~PORT_PCR_PFE_MASK;
   \   0000003C   0x....             B.N      ?Subroutine0
    132            }
    133          }
    134          
    135          /*******************************************************************************
    136          * º¯ÊýÃû³Æ£ºGPIO_SetPinPull
    137          * Èë¿Ú²ÎÊý£ºgpio   GPIO¿ÚÖ¸Õë
    138                      pin    gpio¿ÚµÄÒý½ÅºÅ
    139                      pe     ¸ÃÒý½ÅµÄ¹¦ÄÜºÅ
    140                              0: ½ûÖ¹ÉÏÀ­ºÍÏÂÀ­µç×è¹¦ÄÜ
    141                              1£ºÊ¹ÄÜÉÏÀ­ºÍÏÂÀ­µç×è¹¦ÄÜ
    142                      ps     ¸ÃÒý½ÅµÄ¹¦ÄÜºÅ£¬ÔÚ pe=1 Ê±ÓÐÐ§
    143                              0: Ê¹ÄÜÏÂÀ­µç×è¹¦ÄÜ
    144                              1£ºÊ¹ÄÜÉÏÀ­µç×è¹¦ÄÜ
    145          * Ãè    Êö£ºÉèÖÃGPIOÖÐµÚ pin ¸öÒý½ÅµÄÉÏÀ­ÏÂÀ­µç×èÄ£Ê½
    146          *******************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    147          void GPIO_SetPinPull(GPIO_MemMapPtr gpio, int8u_t pin, int8u_t pe, int8u_t ps)
    148          {
   \                     GPIO_SetPinPull:
   \   00000000   0xB430             PUSH     {R4,R5}
    149            PORT_MemMapPtr port;
    150            
    151            port = GPIO_GetPortMapPtr(gpio);
   \   00000002   0x....             LDR.N    R5,??DataTable4  ;; 0x400ff000
   \   00000004   0x1B40             SUBS     R0,R0,R5
   \   00000006   0xD00F             BEQ.N    ??GPIO_SetPinPull_0
   \   00000008   0x3840             SUBS     R0,R0,#+64
   \   0000000A   0xD00B             BEQ.N    ??GPIO_SetPinPull_1
   \   0000000C   0x3840             SUBS     R0,R0,#+64
   \   0000000E   0xD007             BEQ.N    ??GPIO_SetPinPull_2
   \   00000010   0x3840             SUBS     R0,R0,#+64
   \   00000012   0xD003             BEQ.N    ??GPIO_SetPinPull_3
   \   00000014   0x3840             SUBS     R0,R0,#+64
   \   00000016   0xD108             BNE.N    ??GPIO_SetPinPull_4
   \   00000018   0x....             LDR.N    R4,??DataTable4_1  ;; 0x4004d000
   \   0000001A   0xE006             B.N      ??GPIO_SetPinPull_4
   \                     ??GPIO_SetPinPull_3:
   \   0000001C   0x....             LDR.N    R4,??DataTable4_2  ;; 0x4004c000
   \   0000001E   0xE004             B.N      ??GPIO_SetPinPull_4
   \                     ??GPIO_SetPinPull_2:
   \   00000020   0x....             LDR.N    R4,??DataTable4_3  ;; 0x4004b000
   \   00000022   0xE002             B.N      ??GPIO_SetPinPull_4
   \                     ??GPIO_SetPinPull_1:
   \   00000024   0x....             LDR.N    R4,??DataTable4_4  ;; 0x4004a000
   \   00000026   0xE000             B.N      ??GPIO_SetPinPull_4
   \                     ??GPIO_SetPinPull_0:
   \   00000028   0x....             LDR.N    R4,??DataTable4_5  ;; 0x40049000
    152            if(pe == 1)
   \                     ??GPIO_SetPinPull_4:
   \   0000002A   0x2A01             CMP      R2,#+1
   \   0000002C   0xF854 0x0021      LDR      R0,[R4, R1, LSL #+2]
   \   00000030   0xD10C             BNE.N    ??GPIO_SetPinPull_5
    153            {
    154              PORT_PCR_REG(port,pin) |= PORT_PCR_PE_MASK;
   \   00000032   0xF040 0x0002      ORR      R0,R0,#0x2
   \   00000036   0xF844 0x0021      STR      R0,[R4, R1, LSL #+2]
    155              if(ps == 1)
   \   0000003A   0x2B01             CMP      R3,#+1
   \   0000003C   0xF854 0x0021      LDR      R0,[R4, R1, LSL #+2]
   \   00000040   0xBF1A             ITTE     NE 
   \   00000042   0x0840             LSRNE    R0,R0,#+1
   \   00000044   0x0040             LSLNE    R0,R0,#+1
   \   00000046   0xF040 0x0001      ORREQ    R0,R0,#0x1
    156              {
    157                PORT_PCR_REG(port,pin) |= PORT_PCR_PS_MASK;
   \   0000004A   0xE001             B.N      ??GPIO_SetPinPull_6
    158              }
    159              else
    160              {
    161                PORT_PCR_REG(port,pin) &= ~PORT_PCR_PS_MASK;
    162              }
    163            }
    164            else
    165            {
    166              PORT_PCR_REG(port,pin) &= ~PORT_PCR_PE_MASK;
   \                     ??GPIO_SetPinPull_5:
   \   0000004C   0xF020 0x0002      BIC      R0,R0,#0x2
   \                     ??GPIO_SetPinPull_6:
   \   00000050   0xF844 0x0021      STR      R0,[R4, R1, LSL #+2]
    167            }
    168          }
   \   00000054   0xBC30             POP      {R4,R5}
   \   00000056   0x4770             BX       LR               ;; return
    169          
    170          /*******************************************************************************
    171          * º¯ÊýÃû³Æ£ºGPIO_SetPortDir
    172          * Èë¿Ú²ÎÊý£ºgpio   GPIO¿ÚÖ¸Õë
    173                      dir    gpio¿ÚµÄÊäÈëÊä³öÄ£Ê½
    174          * Ãè    Êö£ºÉèÖÃGPIOÊäÈëÊä³öÄ£Ê½
    175          *******************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    176          void GPIO_SetPortDir(GPIO_MemMapPtr gpio, int32u_t dir)
    177          {
    178            GPIO_PDDR_REG(gpio) = GPIO_PDDR_PDD(dir);
   \                     GPIO_SetPortDir:
   \   00000000   0x6141             STR      R1,[R0, #+20]
    179          }
   \   00000002   0x4770             BX       LR               ;; return
    180            
    181          /*******************************************************************************
    182          * º¯ÊýÃû³Æ£ºGPIO_SetPinDir
    183          * Èë¿Ú²ÎÊý£ºgpio   GPIO¿Ú
    184                      pin    gpio¿ÚµÄÒý½ÅºÅ
    185                      dir    gpio¿ÚµÄÊäÈëÊä³öÄ£Ê½
    186                              0£ºÊäÈë
    187                              1£ºÊä³ö  
    188          * Ãè    Êö£ºÉèÖÃGPIOÖÐµÚ pin Î»µÄÊäÈëÊä³öÄ£Ê½
    189          *******************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    190          void GPIO_SetPinDir(GPIO_MemMapPtr gpio, int8u_t pin, int8u_t dir)
    191          {
   \                     GPIO_SetPinDir:
   \   00000000   0x2301             MOVS     R3,#+1
   \   00000002   0x2A01             CMP      R2,#+1
   \   00000004   0xFA03 0xF101      LSL      R1,R3,R1
   \   00000008   0x6942             LDR      R2,[R0, #+20]
   \   0000000A   0xBF0C             ITE      EQ 
   \   0000000C   0x4311             ORREQ    R1,R1,R2
   \   0000000E   0xEA22 0x0101      BICNE    R1,R2,R1
    192            if(dir == 1)                                        // ¶¨ÒåÒý½ÅÎªÊä³ö·½Ê½
    193            {
    194              GPIO_PDDR_REG(gpio) |= 1<<pin;                    // set the GPIO_DDR as output 
    195            }
    196            else
    197            {
    198              GPIO_PDDR_REG(gpio) &= ~(1<<pin);                 // set the GPIO_DDR as input 
   \   00000012   0x6141             STR      R1,[R0, #+20]
    199            }
    200          }
   \   00000014   0x4770             BX       LR               ;; return
    201          
    202          /*******************************************************************************
    203          * º¯ÊýÃû³Æ£ºGPIO_SetPortStat
    204          * Èë¿Ú²ÎÊý£ºgpio   GPIO¿ÚÖ¸Õë
    205                      state  gpio¿ÚµÄÊä³öµçÆ½
    206          * Ãè    Êö£ºÉèÖÃGPIOµÄÊä³öµçÆ½
    207          *******************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    208          void GPIO_SetPortStat(GPIO_MemMapPtr gpio, int32u_t state)
    209          {
    210            GPIO_PDOR_REG(gpio) = state;
   \                     GPIO_SetPortStat:
   \   00000000   0x6001             STR      R1,[R0, #+0]
    211          }
   \   00000002   0x4770             BX       LR               ;; return
    212          
    213          /*******************************************************************************
    214          * º¯ÊýÃû³Æ£ºGPIO_SetPinStat
    215          * Èë¿Ú²ÎÊý£ºgpio   GPIO¿ÚÖ¸Õë
    216                      pin    gpio¿ÚµÄÒý½ÅºÅ
    217                      state  gpio¿ÚµÄÊä³öµçÆ½
    218          * Ãè    Êö£ºÉèÖÃGPIOÖÐµÚ pin Î»µÄµçÆ½
    219          *******************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    220          void GPIO_SetPinStat(GPIO_MemMapPtr gpio, int8u_t pin, int8u_t state)
    221          {
   \                     GPIO_SetPinStat:
   \   00000000   0x2301             MOVS     R3,#+1
   \   00000002   0x2A01             CMP      R2,#+1
   \   00000004   0xFA03 0xF101      LSL      R1,R3,R1
   \   00000008   0x6802             LDR      R2,[R0, #+0]
   \   0000000A   0xBF0C             ITE      EQ 
   \   0000000C   0x4311             ORREQ    R1,R1,R2
   \   0000000E   0xEA22 0x0101      BICNE    R1,R2,R1
    222            if(state==1)
    223            {
    224              GPIO_PDOR_REG(gpio) |= 1<<pin;                     // set 1 to corresponding pin
    225            }    
    226            else 
    227            {
    228              GPIO_PDOR_REG(gpio) &= ~(1<<pin);                  // set 0 to corresponding pin
   \   00000012   0x6001             STR      R1,[R0, #+0]
    229            }
    230          }
   \   00000014   0x4770             BX       LR               ;; return
    231          
    232          /*******************************************************************************
    233          * º¯ÊýÃû³Æ£ºGPIO_ReadPortStat
    234          * Èë¿Ú²ÎÊý£ºgpio   GPIO¿ÚÖ¸Õë
    235                      state  gpio¿ÚµÄµçÆ½
    236          * Ãè    Êö£º¶ÁÈ¡ gpio ¿ÚµÄ×´Ì¬
    237          *******************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    238          void GPIO_ReadPortStat(GPIO_MemMapPtr gpio, int32u_t * state)
    239          {
    240            *state = GPIO_PDIR_REG(gpio);            
   \                     GPIO_ReadPortStat:
   \   00000000   0x6900             LDR      R0,[R0, #+16]
   \   00000002   0x6008             STR      R0,[R1, #+0]
    241          }
   \   00000004   0x4770             BX       LR               ;; return
    242          
    243          /*******************************************************************************
    244          * º¯ÊýÃû³Æ£ºGPIO_TogglePinStat
    245          * Èë¿Ú²ÎÊý£ºgpio   GPIO¿ÚÖ¸Õë
    246                      pin    gpio¿ÚµÄÒý½ÅºÅ
    247          * Ãè    Êö£º·´×ªGPIOÖÐµÚ pin Î»µÄµçÆ½
    248          *******************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    249          void GPIO_TogglePinStat(GPIO_MemMapPtr gpio, int8u_t pin)
    250          {
    251            GPIO_PTOR_REG(gpio) ^= 1<<pin;                       // toggle the corresponding pin's state
   \                     GPIO_TogglePinStat:
   \   00000000   0x68C2             LDR      R2,[R0, #+12]
   \   00000002   0x2301             MOVS     R3,#+1
   \   00000004   0xFA03 0xF101      LSL      R1,R3,R1
   \   00000008   0x4051             EORS     R1,R1,R2
   \   0000000A   0x60C1             STR      R1,[R0, #+12]
    252          }
   \   0000000C   0x4770             BX       LR               ;; return
    253          
    254          /*******************************************************************************
    255          * º¯ÊýÃû³Æ£ºGPIO_GetPortMapPtr
    256          * Èë¿Ú²ÎÊý£ºgpio   GPIO¿ÚÖ¸Õë
    257          * ·µ»Ø²ÎÊý£ºp      gpio¿Ú¼Ä´æÆ÷Ö¸Õë
    258          * Ãè    Êö£ºÍ¨¹ý GPIO_MemMapPtr Ö¸Õë²éÕÒ PORT_MemMapPtr Ö¸Õë
    259          *******************************************************************************/
    260          static PORT_MemMapPtr GPIO_GetPortMapPtr(GPIO_MemMapPtr gpio)
    261          {
    262            PORT_MemMapPtr p;
    263            switch((int32u_t)gpio)
    264            {
    265              case 0x400FF000u:
    266                                p = PORTA_BASE_PTR;
    267                                break;
    268              case 0x400FF040u:
    269                                p = PORTB_BASE_PTR;
    270                                break;
    271              case 0x400FF080u:
    272                                p = PORTC_BASE_PTR;
    273                                break;
    274              case 0x400FF0C0u:
    275                                p = PORTD_BASE_PTR;
    276                                break;
    277              case 0x400FF100u: 
    278                                p = PORTE_BASE_PTR;
    279                                break;
    280              default:
    281                      break;
    282                      
    283            }
    284            return p;
    285          }
    286          
    287          //===========================================================================
    288          //º¯ÊýÃû³Æ£ºGPIO_get
    289          //º¯Êý·µ»Ø£ºÖ¸¶¨Òý½Å×´Ì¬¡£0=µÍµçÆ½£¬1=¸ßµçÆ½¡£
    290          //²ÎÊýËµÃ÷£ºport£º¶Ë¿ÚºÅ¡£ÓÉºê¶¨Òå¡£
    291          //          pin£ºÒý½ÅºÅ¡£0¡«31¡£
    292          //¹¦ÄÜ¸ÅÒª£º»ñÈ¡Ö¸¶¨Òý½Å×´Ì¬¡£
    293          //===========================================================================

   \                                 In section .text, align 2, keep-with-next
    294          int8u_t GPIO_get(GPIO_MemMapPtr gpio, int8u_t pin)
    295          {
    296                  //PORT_MemMapPtr port;
    297          	int8u_t i; 
    298          	//½«GPIO¶Ë¿ÚºÅ×ª»»³É¶Ë¿Ú¼Ä´æÆ÷×éÖ¸Õë
    299          	//GPIO_MemMapPtr pt = gpio_get_pt_addr(port);
    300          	//²é¿´Òý½Å×´Ì¬
    301          	i = BGET(pin, GPIO_PDIR_REG(gpio));
   \                     GPIO_get:
   \   00000000   0x6900             LDR      R0,[R0, #+16]
    302          	return i;     //·µ»ØÒý½Å×´Ì¬£¨0»ò1£©
   \   00000002   0x40C8             LSRS     R0,R0,R1
   \   00000004   0xF000 0x0001      AND      R0,R0,#0x1
   \   00000008   0x4770             BX       LR               ;; return
    303          }

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4:
   \   00000000   0x400FF000         DC32     0x400ff000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_1:
   \   00000000   0x4004D000         DC32     0x4004d000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_2:
   \   00000000   0x4004C000         DC32     0x4004c000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_3:
   \   00000000   0x4004B000         DC32     0x4004b000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_4:
   \   00000000   0x4004A000         DC32     0x4004a000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_5:
   \   00000000   0x40049000         DC32     0x40049000

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
        0  GPIO_ConfigPinInt
        0  GPIO_ReadPortStat
        0  GPIO_SetPinDir
        0  GPIO_SetPinDriveStrgth
        0  GPIO_SetPinMod
        0  GPIO_SetPinOpenDrain
        0  GPIO_SetPinPassiveFilter
        8  GPIO_SetPinPull
        0  GPIO_SetPinStat
        0  GPIO_SetPortDir
        0  GPIO_SetPortStat
        0  GPIO_TogglePinStat
        0  GPIO_get


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable4
       4  ??DataTable4_1
       4  ??DataTable4_2
       4  ??DataTable4_3
       4  ??DataTable4_4
       4  ??DataTable4_5
       6  ?Subroutine0
      52  GPIO_ConfigPinInt
       6  GPIO_ReadPortStat
      22  GPIO_SetPinDir
      62  GPIO_SetPinDriveStrgth
      54  GPIO_SetPinMod
      62  GPIO_SetPinOpenDrain
      62  GPIO_SetPinPassiveFilter
      88  GPIO_SetPinPull
      22  GPIO_SetPinStat
       4  GPIO_SetPortDir
       4  GPIO_SetPortStat
      14  GPIO_TogglePinStat
      10  GPIO_get

 
 492 bytes in section .text
 
 492 bytes of CODE memory

Errors: none
Warnings: none
