###############################################################################
#                                                                             #
#                                                       14/Oct/2013  11:36:20 #
# IAR ANSI C/C++ Compiler V6.30.6.23336/W32 EVALUATION for ARM                #
# Copyright 1999-2012 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  thumb                                                    #
#    Endian       =  little                                                   #
#    Source file  =  C:\Users\qlalxx\Desktop\fighting\MyFunction\Adaptative_I #
#                    ntergrationTime.c                                        #
#    Command line =  C:\Users\qlalxx\Desktop\fighting\MyFunction\Adaptative_I #
#                    ntergrationTime.c -D IAR -lCN                            #
#                    C:\Users\qlalxx\Desktop\fighting\Flash_512K\List\ -lB    #
#                    C:\Users\qlalxx\Desktop\fighting\Flash_512K\List\ -o     #
#                    C:\Users\qlalxx\Desktop\fighting\Flash_512K\Obj\         #
#                    --no_cse --no_unroll --no_inline --no_code_motion        #
#                    --no_tbaa --no_clustering --no_scheduling --debug        #
#                    --endian=little --cpu=Cortex-M4 -e --fpu=None            #
#                    --dlib_config "C:\Program Files\IAR Systems\Embedded     #
#                    Workbench 6.0 Evaluation\arm\INC\c\DLib_Config_Normal.h" #
#                     -I C:\Users\qlalxx\Desktop\fighting\Library\CPU\ -I     #
#                    C:\Users\qlalxx\Desktop\fighting\Library\Drivers\ADC\    #
#                    -I C:\Users\qlalxx\Desktop\fighting\Library\Drivers\FTM\ #
#                     -I C:\Users\qlalxx\Desktop\fighting\Library\Drivers\GPI #
#                    O\ -I C:\Users\qlalxx\Desktop\fighting\Library\Drivers\P #
#                    IT\ -I C:\Users\qlalxx\Desktop\fighting\MyFunction\ -I   #
#                    C:\Users\qlalxx\Desktop\fighting\SD_System\ -Ol          #
#    List file    =  C:\Users\qlalxx\Desktop\fighting\Flash_512K\List\Adaptat #
#                    ive_IntergrationTime.lst                                 #
#    Object file  =  C:\Users\qlalxx\Desktop\fighting\Flash_512K\Obj\Adaptati #
#                    ve_IntergrationTime.o                                    #
#                                                                             #
#                                                                             #
###############################################################################

C:\Users\qlalxx\Desktop\fighting\MyFunction\Adaptative_IntergrationTime.c
      1          #include "AllHeaders.h"
      2          
      3          /***************************自适应曝光相关变量定义**************************/

   \                                 In section .bss, align 2
      4          int16s_t  Up_TimerFlag20ms = 0;                                      //20ms中断标志
   \                     Up_TimerFlag20ms:
   \   00000000                      DS8 2

   \                                 In section .data, align 2
      5          int16u_t  Up_integrationTime=14;                                 //Right_CCD曝光时间，单位ms 
   \                     Up_integrationTime:
   \   00000000   0x000E             DC16 14
      6          

   \                                 In section .bss, align 2
      7          int16u_t  Up_TimerCnt20ms=0;
   \                     Up_TimerCnt20ms:
   \   00000000                      DS8 2
      8          

   \                                 In section .bss, align 2
      9          int16u_t  Up_integration_piont;
   \                     Up_integration_piont:
   \   00000000                      DS8 2
     10          

   \                                 In section .bss, align 2
     11          int16u_t   Up_PixelAverageValue;
   \                     Up_PixelAverageValue:
   \   00000000                      DS8 2
     12          

   \                                 In section .bss, align 2
     13          int16u_t   Up_PixelAverageVoltage;                               //Left_CCD 128个像素点的平均电压值的10倍
   \                     Up_PixelAverageVoltage:
   \   00000000                      DS8 2
     14          

   \                                 In section .data, align 2
     15          int16u_t   Up_TargetPixelAverageVoltage=15;                      //目标平均电压值，实际电压的10倍 
   \                     Up_TargetPixelAverageVoltage:
   \   00000000   0x000F             DC16 15
     16          

   \                                 In section .bss, align 2
     17          int16s_t   Up_AverageVoltageError = 0;                           //目标平均电压值与实际值的偏差，实际电压的10倍
   \                     Up_AverageVoltageError:
   \   00000000                      DS8 2
     18          

   \                                 In section .data, align 2
     19          int16s_t   Up_TargetPixelAverageVoltageAllowError = 2 ;          //目标平均电压值允许的偏差，实际电压的10倍
   \                     Up_TargetPixelAverageVoltageAllowError:
   \   00000000   0x0002             DC16 2
     20          //----------------------------------------------------------------------
     21          //函 数 名: PixelAverage                                                                           
     22          //功    能:均值函数                                        
     23          //参    数:无                         
     24          //返    回:sum/len                                                                                      
     25          //----------------------------------------------------------------------
     26          

   \                                 In section .text, align 2, keep-with-next
     27          int16u_t PixelAverage(int8u_t len, int16u_t *data)               //均值函数用于计算曝光时间
     28          {
   \                     PixelAverage:
   \   00000000   0xB410             PUSH     {R4}
     29            int8u_t i;
     30            int16u_t sum = 0;
   \   00000002   0x2300             MOVS     R3,#+0
     31            for(i = 0; i<len; i++) 
   \   00000004   0x2200             MOVS     R2,#+0
   \   00000006   0xE003             B.N      ??PixelAverage_0
     32            {
     33              sum = sum + *data++;
   \                     ??PixelAverage_1:
   \   00000008   0x880C             LDRH     R4,[R1, #+0]
   \   0000000A   0x18E3             ADDS     R3,R4,R3
   \   0000000C   0x1C89             ADDS     R1,R1,#+2
     34            }
   \   0000000E   0x1C52             ADDS     R2,R2,#+1
   \                     ??PixelAverage_0:
   \   00000010   0xB2D2             UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \   00000012   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000014   0x4282             CMP      R2,R0
   \   00000016   0xD3F7             BCC.N    ??PixelAverage_1
     35            return ((int16u_t)(sum/len));
   \   00000018   0xB29B             UXTH     R3,R3            ;; ZeroExt  R3,R3,#+16,#+16
   \   0000001A   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000001C   0xFB93 0xF0F0      SDIV     R0,R3,R0
   \   00000020   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   00000022   0xBC10             POP      {R4}
   \   00000024   0x4770             BX       LR               ;; return
     36          }
     37          
     38          //----------------------------------------------------------------------
     39          //函 数 名:StartIntegration                                                                           
     40          //功    能:曝光补偿函数                                        
     41          //参    数:无                         
     42          //返    回:无                                                                                       
     43          //----------------------------------------------------------------------
     44          

   \                                 In section .text, align 2, keep-with-next
     45          void Up_StartIntegration(void)                                 //曝光补偿函数
     46          {
   \                     Up_StartIntegration:
   \   00000000   0xB510             PUSH     {R4,LR}
     47           int8u_t i;
     48            
     49            GPIO_SetPinStat(PORTB,16,1);
   \   00000002   0x2201             MOVS     R2,#+1
   \   00000004   0x2110             MOVS     R1,#+16
   \   00000006   0x....             LDR.N    R0,??DataTable2  ;; 0x400ff040
   \   00000008   0x.... 0x....      BL       GPIO_SetPinStat
     50            Integration_delay();
   \   0000000C   0x.... 0x....      BL       Integration_delay
     51            GPIO_SetPinStat(PORTB,17,1);
   \   00000010   0x2201             MOVS     R2,#+1
   \   00000012   0x2111             MOVS     R1,#+17
   \   00000014   0x....             LDR.N    R0,??DataTable2  ;; 0x400ff040
   \   00000016   0x.... 0x....      BL       GPIO_SetPinStat
     52            Integration_delay();
   \   0000001A   0x.... 0x....      BL       Integration_delay
     53            GPIO_SetPinStat(PORTB,16,0);
   \   0000001E   0x2200             MOVS     R2,#+0
   \   00000020   0x2110             MOVS     R1,#+16
   \   00000022   0x....             LDR.N    R0,??DataTable2  ;; 0x400ff040
   \   00000024   0x.... 0x....      BL       GPIO_SetPinStat
     54            Integration_delay();
   \   00000028   0x.... 0x....      BL       Integration_delay
     55            GPIO_SetPinStat(PORTB,17,0);
   \   0000002C   0x2200             MOVS     R2,#+0
   \   0000002E   0x2111             MOVS     R1,#+17
   \   00000030   0x....             LDR.N    R0,??DataTable2  ;; 0x400ff040
   \   00000032   0x.... 0x....      BL       GPIO_SetPinStat
     56            
     57                                            
     58            for(i=1; i<128; i++)                                           
   \   00000036   0x2401             MOVS     R4,#+1
   \   00000038   0xE012             B.N      ??Up_StartIntegration_0
     59            {
     60              Integration_delay();
   \                     ??Up_StartIntegration_1:
   \   0000003A   0x.... 0x....      BL       Integration_delay
     61              Integration_delay();
   \   0000003E   0x.... 0x....      BL       Integration_delay
     62              GPIO_SetPinStat(PORTB,17,1);
   \   00000042   0x2201             MOVS     R2,#+1
   \   00000044   0x2111             MOVS     R1,#+17
   \   00000046   0x....             LDR.N    R0,??DataTable2  ;; 0x400ff040
   \   00000048   0x.... 0x....      BL       GPIO_SetPinStat
     63              Integration_delay();
   \   0000004C   0x.... 0x....      BL       Integration_delay
     64              Integration_delay();
   \   00000050   0x.... 0x....      BL       Integration_delay
     65              GPIO_SetPinStat(PORTB,17,0);
   \   00000054   0x2200             MOVS     R2,#+0
   \   00000056   0x2111             MOVS     R1,#+17
   \   00000058   0x....             LDR.N    R0,??DataTable2  ;; 0x400ff040
   \   0000005A   0x.... 0x....      BL       GPIO_SetPinStat
     66            }
   \   0000005E   0x1C64             ADDS     R4,R4,#+1
   \                     ??Up_StartIntegration_0:
   \   00000060   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000062   0x2C80             CMP      R4,#+128
   \   00000064   0xD3E9             BCC.N    ??Up_StartIntegration_1
     67            
     68             Integration_delay();
   \   00000066   0x.... 0x....      BL       Integration_delay
     69             Integration_delay();                                       //发送第129个clk
   \   0000006A   0x.... 0x....      BL       Integration_delay
     70             GPIO_SetPinStat(PORTB,17,1);
   \   0000006E   0x2201             MOVS     R2,#+1
   \   00000070   0x2111             MOVS     R1,#+17
   \   00000072   0x....             LDR.N    R0,??DataTable2  ;; 0x400ff040
   \   00000074   0x.... 0x....      BL       GPIO_SetPinStat
     71             Integration_delay(); 
   \   00000078   0x.... 0x....      BL       Integration_delay
     72             Integration_delay();
   \   0000007C   0x.... 0x....      BL       Integration_delay
     73             GPIO_SetPinStat(PORTB,17,0);
   \   00000080   0x2200             MOVS     R2,#+0
   \   00000082   0x2111             MOVS     R1,#+17
   \   00000084   0x....             LDR.N    R0,??DataTable2  ;; 0x400ff040
   \   00000086   0x.... 0x....      BL       GPIO_SetPinStat
     74          }
   \   0000008A   0xBD10             POP      {R4,PC}          ;; return
     75          
     76          
     77          
     78          
     79          //----------------------------------------------------------------------
     80          //函 数 名:CalculateIntegrationTime                                                                           
     81          //功    能:计算曝光时间                                        
     82          //参    数:无                         
     83          //返    回:无                                                                                       
     84          //----------------------------------------------------------------------

   \                                 In section .text, align 2, keep-with-next
     85          void Up_CalculateIntegrationTime(void)                                             //计算曝光时间
     86          {
   \                     Up_CalculateIntegrationTime:
   \   00000000   0xB580             PUSH     {R7,LR}
     87              Up_PixelAverageValue=PixelAverage(67,Up_CCD_AD_Value+30);                     // 计算UP_CCD 前20个像素点
   \   00000002   0x....             LDR.N    R1,??DataTable2_1
   \   00000004   0x2043             MOVS     R0,#+67
   \   00000006   0x.... 0x....      BL       PixelAverage
   \   0000000A   0x....             LDR.N    R1,??DataTable2_2
   \   0000000C   0x8008             STRH     R0,[R1, #+0]
     88              
     89              Up_PixelAverageVoltage=(int8u_t)((int)Up_PixelAverageValue*33/255);         //计算UP_CCD 前20个像素点的平均电压值,实际值的10倍 
   \   0000000E   0x....             LDR.N    R0,??DataTable2_2
   \   00000010   0x8800             LDRH     R0,[R0, #+0]
   \   00000012   0x2121             MOVS     R1,#+33
   \   00000014   0x4348             MULS     R0,R1,R0
   \   00000016   0x21FF             MOVS     R1,#+255
   \   00000018   0xFB90 0xF0F1      SDIV     R0,R0,R1
   \   0000001C   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000001E   0x....             LDR.N    R1,??DataTable2_3
   \   00000020   0x8008             STRH     R0,[R1, #+0]
     90              
     91              Up_AverageVoltageError=Up_TargetPixelAverageVoltage-Up_PixelAverageVoltage;
   \   00000022   0x....             LDR.N    R0,??DataTable2_4
   \   00000024   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   00000028   0x....             LDR.N    R1,??DataTable2_3
   \   0000002A   0xF9B1 0x1000      LDRSH    R1,[R1, #+0]
   \   0000002E   0x1A40             SUBS     R0,R0,R1
   \   00000030   0x....             LDR.N    R1,??DataTable2_5
   \   00000032   0x8008             STRH     R0,[R1, #+0]
     92              
     93              
     94              if(Up_AverageVoltageError<-Up_TargetPixelAverageVoltageAllowError)
   \   00000034   0x....             LDR.N    R0,??DataTable2_5
   \   00000036   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   0000003A   0x....             LDR.N    R1,??DataTable2_6
   \   0000003C   0xF9B1 0x1000      LDRSH    R1,[R1, #+0]
   \   00000040   0x42C8             CMN      R0,R1
   \   00000042   0xDA04             BGE.N    ??Up_CalculateIntegrationTime_0
     95                 Up_integrationTime--;
   \   00000044   0x....             LDR.N    R0,??DataTable2_7
   \   00000046   0x8800             LDRH     R0,[R0, #+0]
   \   00000048   0x1E40             SUBS     R0,R0,#+1
   \   0000004A   0x....             LDR.N    R1,??DataTable2_7
   \   0000004C   0x8008             STRH     R0,[R1, #+0]
     96              if(Up_AverageVoltageError>Up_TargetPixelAverageVoltageAllowError)
   \                     ??Up_CalculateIntegrationTime_0:
   \   0000004E   0x....             LDR.N    R0,??DataTable2_6
   \   00000050   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   00000054   0x....             LDR.N    R1,??DataTable2_5
   \   00000056   0xF9B1 0x1000      LDRSH    R1,[R1, #+0]
   \   0000005A   0x4288             CMP      R0,R1
   \   0000005C   0xDA04             BGE.N    ??Up_CalculateIntegrationTime_1
     97                 Up_integrationTime++;
   \   0000005E   0x....             LDR.N    R0,??DataTable2_7
   \   00000060   0x8800             LDRH     R0,[R0, #+0]
   \   00000062   0x1C40             ADDS     R0,R0,#+1
   \   00000064   0x....             LDR.N    R1,??DataTable2_7
   \   00000066   0x8008             STRH     R0,[R1, #+0]
     98              if(Up_integrationTime<=1)
   \                     ??Up_CalculateIntegrationTime_1:
   \   00000068   0x....             LDR.N    R0,??DataTable2_7
   \   0000006A   0x8800             LDRH     R0,[R0, #+0]
   \   0000006C   0x2802             CMP      R0,#+2
   \   0000006E   0xD202             BCS.N    ??Up_CalculateIntegrationTime_2
     99                 Up_integrationTime=1;
   \   00000070   0x....             LDR.N    R0,??DataTable2_7
   \   00000072   0x2101             MOVS     R1,#+1
   \   00000074   0x8001             STRH     R1,[R0, #+0]
    100              if(Up_integrationTime>=20)
   \                     ??Up_CalculateIntegrationTime_2:
   \   00000076   0x....             LDR.N    R0,??DataTable2_7
   \   00000078   0x8800             LDRH     R0,[R0, #+0]
   \   0000007A   0x2814             CMP      R0,#+20
   \   0000007C   0xD302             BCC.N    ??Up_CalculateIntegrationTime_3
    101                 Up_integrationTime=20;
   \   0000007E   0x....             LDR.N    R0,??DataTable2_7
   \   00000080   0x2114             MOVS     R1,#+20
   \   00000082   0x8001             STRH     R1,[R0, #+0]
    102              
    103          }
   \                     ??Up_CalculateIntegrationTime_3:
   \   00000084   0xBD01             POP      {R0,PC}          ;; return
    104          
    105          
    106          //----------------------------------------------------------------------
    107          //函 数 名:Adaptative_IntegrationTime                                                                           
    108          //功    能:由计算得到的曝光时间计算积分开始的时间点                                        
    109          //参    数:无                         
    110          //返    回:无                                                                                       
    111          //----------------------------------------------------------------------

   \                                 In section .text, align 2, keep-with-next
    112          void Up_Adaptative_IntegrationTime(void)
    113          {
   \                     Up_Adaptative_IntegrationTime:
   \   00000000   0xB580             PUSH     {R7,LR}
    114           Up_TimerCnt20ms++;
   \   00000002   0x....             LDR.N    R0,??DataTable2_8
   \   00000004   0x8800             LDRH     R0,[R0, #+0]
   \   00000006   0x1C40             ADDS     R0,R0,#+1
   \   00000008   0x....             LDR.N    R1,??DataTable2_8
   \   0000000A   0x8008             STRH     R0,[R1, #+0]
    115           
    116           Up_integration_piont=20-Up_integrationTime;
   \   0000000C   0x....             LDR.N    R0,??DataTable2_7
   \   0000000E   0x8800             LDRH     R0,[R0, #+0]
   \   00000010   0xF1D0 0x0014      RSBS     R0,R0,#+20
   \   00000014   0x....             LDR.N    R1,??DataTable2_9
   \   00000016   0x8008             STRH     R0,[R1, #+0]
    117           
    118           if(Up_integration_piont>= 2) 
   \   00000018   0x....             LDR.N    R0,??DataTable2_9
   \   0000001A   0x8800             LDRH     R0,[R0, #+0]
   \   0000001C   0x2802             CMP      R0,#+2
   \   0000001E   0xD307             BCC.N    ??Up_Adaptative_IntegrationTime_0
    119            {                                                         // 上方CCD曝光点小于2(曝光时间大于18ms)则不进行再曝光 
    120                if(Up_TimerCnt20ms==Up_integration_piont)
   \   00000020   0x....             LDR.N    R0,??DataTable2_8
   \   00000022   0x8800             LDRH     R0,[R0, #+0]
   \   00000024   0x....             LDR.N    R1,??DataTable2_9
   \   00000026   0x8809             LDRH     R1,[R1, #+0]
   \   00000028   0x4288             CMP      R0,R1
   \   0000002A   0xD101             BNE.N    ??Up_Adaptative_IntegrationTime_0
    121                   Up_StartIntegration();                             //上方CCD曝光开始 
   \   0000002C   0x.... 0x....      BL       Up_StartIntegration
    122            }    
    123           
    124           
    125           
    126          
    127               if(Up_TimerCnt20ms>=20) 
   \                     ??Up_Adaptative_IntegrationTime_0:
   \   00000030   0x....             LDR.N    R0,??DataTable2_8
   \   00000032   0x8800             LDRH     R0,[R0, #+0]
   \   00000034   0x2814             CMP      R0,#+20
   \   00000036   0xD305             BCC.N    ??Up_Adaptative_IntegrationTime_1
    128               {
    129                  Up_TimerCnt20ms=0;
   \   00000038   0x....             LDR.N    R0,??DataTable2_8
   \   0000003A   0x2100             MOVS     R1,#+0
   \   0000003C   0x8001             STRH     R1,[R0, #+0]
    130                  Up_TimerFlag20ms=1;
   \   0000003E   0x....             LDR.N    R0,??DataTable2_10
   \   00000040   0x2101             MOVS     R1,#+1
   \   00000042   0x8001             STRH     R1,[R0, #+0]
    131               }
    132          }
   \                     ??Up_Adaptative_IntegrationTime_1:
   \   00000044   0xBD01             POP      {R0,PC}          ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2:
   \   00000000   0x400FF040         DC32     0x400ff040

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_1:
   \   00000000   0x........         DC32     Up_CCD_AD_Value+0x3C

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_2:
   \   00000000   0x........         DC32     Up_PixelAverageValue

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_3:
   \   00000000   0x........         DC32     Up_PixelAverageVoltage

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_4:
   \   00000000   0x........         DC32     Up_TargetPixelAverageVoltage

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_5:
   \   00000000   0x........         DC32     Up_AverageVoltageError

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_6:
   \   00000000   0x........         DC32     Up_TargetPixelAverageVoltageAllowError

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_7:
   \   00000000   0x........         DC32     Up_integrationTime

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_8:
   \   00000000   0x........         DC32     Up_TimerCnt20ms

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_9:
   \   00000000   0x........         DC32     Up_integration_piont

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_10:
   \   00000000   0x........         DC32     Up_TimerFlag20ms

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
        4  PixelAverage
        8  Up_Adaptative_IntegrationTime
             8 -> Up_StartIntegration
        8  Up_CalculateIntegrationTime
             8 -> PixelAverage
        8  Up_StartIntegration
             8 -> GPIO_SetPinStat
             8 -> Integration_delay


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable2
       4  ??DataTable2_1
       4  ??DataTable2_10
       4  ??DataTable2_2
       4  ??DataTable2_3
       4  ??DataTable2_4
       4  ??DataTable2_5
       4  ??DataTable2_6
       4  ??DataTable2_7
       4  ??DataTable2_8
       4  ??DataTable2_9
      38  PixelAverage
      70  Up_Adaptative_IntegrationTime
       2  Up_AverageVoltageError
     134  Up_CalculateIntegrationTime
       2  Up_PixelAverageValue
       2  Up_PixelAverageVoltage
     140  Up_StartIntegration
       2  Up_TargetPixelAverageVoltage
       2  Up_TargetPixelAverageVoltageAllowError
       2  Up_TimerCnt20ms
       2  Up_TimerFlag20ms
       2  Up_integrationTime
       2  Up_integration_piont

 
  12 bytes in section .bss
   6 bytes in section .data
 426 bytes in section .text
 
 426 bytes of CODE memory
  18 bytes of DATA memory

Errors: none
Warnings: none
