###############################################################################
#                                                                             #
#                                                       19/Jul/2014  21:11:13 #
# IAR ANSI C/C++ Compiler V6.30.6.23336/W32 EVALUATION for ARM                #
# Copyright 1999-2012 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  thumb                                                    #
#    Endian       =  little                                                   #
#    Source file  =  E:\Ñ§Ï°\µÚ¾Å½ìÖÇÄÜ³µ\Ê¡Èü³ÌÐò\140719_17.48\×Ó³ÌÐò\Moter_ #
#                    Control\Moter_Control.c                                  #
#    Command line =  E:\Ñ§Ï°\µÚ¾Å½ìÖÇÄÜ³µ\Ê¡Èü³ÌÐò\140719_17.48\×Ó³ÌÐò\Moter_ #
#                    Control\Moter_Control.c -D IAR -lCN                      #
#                    E:\Ñ§Ï°\µÚ¾Å½ìÖÇÄÜ³µ\Ê¡Èü³ÌÐò\140719_17.48\Flash_512K\Li #
#                    st\ -lB E:\Ñ§Ï°\µÚ¾Å½ìÖÇÄÜ³µ\Ê¡Èü³ÌÐò\140719_17.48\Flash #
#                    _512K\List\ -o E:\Ñ§Ï°\µÚ¾Å½ìÖÇÄÜ³µ\Ê¡Èü³ÌÐò\140719_17.4 #
#                    8\Flash_512K\Obj\ --no_cse --no_unroll --no_inline       #
#                    --no_code_motion --no_tbaa --no_clustering               #
#                    --no_scheduling --debug --endian=little --cpu=Cortex-M4  #
#                    -e --fpu=None --dlib_config "D:\Program Files            #
#                    (x86)\iar\arm\INC\c\DLib_Config_Normal.h" -I             #
#                    E:\Ñ§Ï°\µÚ¾Å½ìÖÇÄÜ³µ\Ê¡Èü³ÌÐò\140719_17.48\Library\CPU\  #
#                    -I E:\Ñ§Ï°\µÚ¾Å½ìÖÇÄÜ³µ\Ê¡Èü³ÌÐò\140719_17.48\Library\Dr #
#                    ivers\ADC\ -I E:\Ñ§Ï°\µÚ¾Å½ìÖÇÄÜ³µ\Ê¡Èü³ÌÐò\140719_17.48 #
#                    \Library\Drivers\FTM\ -I E:\Ñ§Ï°\µÚ¾Å½ìÖÇÄÜ³µ\Ê¡Èü³ÌÐò\1 #
#                    40719_17.48\Library\Drivers\GPIO\ -I                     #
#                    E:\Ñ§Ï°\µÚ¾Å½ìÖÇÄÜ³µ\Ê¡Èü³ÌÐò\140719_17.48\Library\Drive #
#                    rs\PIT\ -I E:\Ñ§Ï°\µÚ¾Å½ìÖÇÄÜ³µ\Ê¡Èü³ÌÐò\140719_17.48\My #
#                    Function\ -I E:\Ñ§Ï°\µÚ¾Å½ìÖÇÄÜ³µ\Ê¡Èü³ÌÐò\140719_17.48\ #
#                    SD_System\ -I E:\Ñ§Ï°\µÚ¾Å½ìÖÇÄÜ³µ\Ê¡Èü³ÌÐò\140719_17.48 #
#                    \×Ó³ÌÐò\OLED\ -I E:\Ñ§Ï°\µÚ¾Å½ìÖÇÄÜ³µ\Ê¡Èü³ÌÐò\140719_17 #
#                    .48\×Ó³ÌÐò\ -I E:\Ñ§Ï°\µÚ¾Å½ìÖÇÄÜ³µ\Ê¡Èü³ÌÐò\140719_17.4 #
#                    8\×Ó³ÌÐò\Sample_AD\ -I E:\Ñ§Ï°\µÚ¾Å½ìÖÇÄÜ³µ\Ê¡Èü³ÌÐò\140 #
#                    719_17.48\×Ó³ÌÐò\Judge_Way\ -I                           #
#                    E:\Ñ§Ï°\µÚ¾Å½ìÖÇÄÜ³µ\Ê¡Èü³ÌÐò\140719_17.48\×Ó³ÌÐò\Moter_ #
#                    Control\ -I E:\Ñ§Ï°\µÚ¾Å½ìÖÇÄÜ³µ\Ê¡Èü³ÌÐò\140719_17.48\× #
#                    Ó³ÌÐò\System_Init\ -I E:\Ñ§Ï°\µÚ¾Å½ìÖÇÄÜ³µ\Ê¡Èü³ÌÐò\1407 #
#                    19_17.48\×Ó³ÌÐò\Turn_Control\ -I                         #
#                    E:\Ñ§Ï°\µÚ¾Å½ìÖÇÄÜ³µ\Ê¡Èü³ÌÐò\140719_17.48\×Ó³ÌÐò\Yaotou #
#                    _Control\ -I E:\Ñ§Ï°\µÚ¾Å½ìÖÇÄÜ³µ\Ê¡Èü³ÌÐò\140719_17.48\ #
#                    ×Ó³ÌÐò\bomakaiguan\ -Ol                                  #
#    List file    =  E:\Ñ§Ï°\µÚ¾Å½ìÖÇÄÜ³µ\Ê¡Èü³ÌÐò\140719_17.48\Flash_512K\Li #
#                    st\Moter_Control.lst                                     #
#    Object file  =  E:\Ñ§Ï°\µÚ¾Å½ìÖÇÄÜ³µ\Ê¡Èü³ÌÐò\140719_17.48\Flash_512K\Ob #
#                    j\Moter_Control.o                                        #
#                                                                             #
#                                                                             #
###############################################################################

E:\Ñ§Ï°\µÚ¾Å½ìÖÇÄÜ³µ\Ê¡Èü³ÌÐò\140719_17.48\×Ó³ÌÐò\Moter_Control\Moter_Control.c
      1          #include "All_HeaderFiles.h"
      2          /**********************³µÌåËÙ¶È¿ØÖÆ±äÁ¿¶¨Òå***********************/
      3          /*-----------±äÁ¿¶¨Òå--------------*/              

   \                                 In section .data, align 1
      4          int8s_t  direction=1;                  //µç»úÕý×ªÎª1£¬·´×ªÎª-1
   \                     direction:
   \   00000000   0x01               DC8 1

   \                                 In section .bss, align 4
      5          int DCDuty=0;                     //¿ØÖÆµç»ú
   \                     DCDuty:
   \   00000000                      DS8 4
      6          
      7          
      8          
      9          /***********************************
     10          º¯ÊýÃû£ºMotor_Control()
     11          ×÷ÓÃ  £º¿ØÖÆµç»úµÄ×ª¶¯
     12          ±¸×¢  £ºÎÞ
     13          ***********************************/

   \                                 In section .text, align 2, keep-with-next
     14          void  Motor_Control(void)
     15          {   
   \                     Motor_Control:
   \   00000000   0xB580             PUSH     {R7,LR}
     16            
     17             if(Stop_GuDing==0)
   \   00000002   0x....             LDR.N    R0,??DataTable1
   \   00000004   0x7800             LDRB     R0,[R0, #+0]
   \   00000006   0x2800             CMP      R0,#+0
   \   00000008   0xD106             BNE.N    ??Motor_Control_0
     18              DCDuty = (int)TiaoJieZhi;
   \   0000000A   0x....             LDR.N    R0,??DataTable1_1
   \   0000000C   0x6800             LDR      R0,[R0, #+0]
   \   0000000E   0x.... 0x....      BL       __aeabi_f2iz
   \   00000012   0x....             LDR.N    R1,??DataTable1_2
   \   00000014   0x6008             STR      R0,[R1, #+0]
   \   00000016   0xE002             B.N      ??Motor_Control_1
     19             else
     20               DCDuty = 0;
   \                     ??Motor_Control_0:
   \   00000018   0x....             LDR.N    R0,??DataTable1_2
   \   0000001A   0x2100             MOVS     R1,#+0
   \   0000001C   0x6001             STR      R1,[R0, #+0]
     21              Motor_Output();
   \                     ??Motor_Control_1:
   \   0000001E   0x.... 0x....      BL       Motor_Output
     22          //    if( DCDuty>DC_Limit)                    //µç»úPWMµ÷½ÚÕ¼¿Õ±ÈÏÞ·ù
     23          //      {
     24          //          DCDuty= DC_Limit;
     25          //
     26          //      }
     27          //
     28          //    if( DCDuty<-DC_Limit)  
     29          //      {
     30          //          DCDuty=-DC_Limit;
     31          //
     32          //      }
     33              //FTM_setPWMDty(FTM2, 0,DCDuty);
     34          }
   \   00000022   0xBD01             POP      {R0,PC}          ;; return
     35          
     36          

   \                                 In section .text, align 2, keep-with-next
     37          void Motor_Output(void)
     38          {
   \                     Motor_Output:
   \   00000000   0xB580             PUSH     {R7,LR}
     39             
     40             
     41              if( DCDuty>DC_Limit)                    //µç»úPWMµ÷½ÚÕ¼¿Õ±ÈÏÞ·ù
   \   00000002   0x....             LDR.N    R0,??DataTable1_2
   \   00000004   0x6800             LDR      R0,[R0, #+0]
   \   00000006   0xF5B0 0x7FFA      CMP      R0,#+500
   \   0000000A   0xDD03             BLE.N    ??Motor_Output_0
     42                {
     43                    DCDuty= DC_Limit;
   \   0000000C   0x....             LDR.N    R0,??DataTable1_2
   \   0000000E   0xF44F 0x71FA      MOV      R1,#+500
   \   00000012   0x6001             STR      R1,[R0, #+0]
     44          
     45                }
     46          
     47              if( DCDuty<-DC_Limit)  
   \                     ??Motor_Output_0:
   \   00000014   0x....             LDR.N    R0,??DataTable1_2
   \   00000016   0x6800             LDR      R0,[R0, #+0]
   \   00000018   0xF510 0x7FFA      CMN      R0,#+500
   \   0000001C   0xDA02             BGE.N    ??Motor_Output_1
     48                {
     49                    DCDuty=-DC_Limit;
   \   0000001E   0x....             LDR.N    R0,??DataTable1_2
   \   00000020   0x....             LDR.N    R1,??DataTable1_3  ;; 0xfffffe0c
   \   00000022   0x6001             STR      R1,[R0, #+0]
     50          
     51                }
     52           
     53          
     54              if(DCDuty>=0) 
   \                     ??Motor_Output_1:
   \   00000024   0x....             LDR.N    R0,??DataTable1_2
   \   00000026   0x6800             LDR      R0,[R0, #+0]
   \   00000028   0x2800             CMP      R0,#+0
   \   0000002A   0xD428             BMI.N    ??Motor_Output_2
     55                {
     56                    if(direction==1)                   //µç»úÇ°Ò»Ê±¿ÌÊÇÕý×ª
   \   0000002C   0x....             LDR.N    R0,??DataTable1_4
   \   0000002E   0xF990 0x0000      LDRSB    R0,[R0, #+0]
   \   00000032   0x2801             CMP      R0,#+1
   \   00000034   0xD109             BNE.N    ??Motor_Output_3
     57                    {
     58                        //PWMDTY01 = DCDuty;
     59                        //PTT_PTT0 = 0;
     60                      FTM_setPWMDty(FTM2, 0,DCDuty);
   \   00000036   0x....             LDR.N    R0,??DataTable1_2
   \   00000038   0x6802             LDR      R2,[R0, #+0]
   \   0000003A   0xB292             UXTH     R2,R2            ;; ZeroExt  R2,R2,#+16,#+16
   \   0000003C   0x2100             MOVS     R1,#+0
   \   0000003E   0x....             LDR.N    R0,??DataTable1_5  ;; 0x400b8000
   \   00000040   0x.... 0x....      BL       FTM_setPWMDty
     61                        direction=1;
   \   00000044   0x....             LDR.N    R0,??DataTable1_4
   \   00000046   0x2101             MOVS     R1,#+1
   \   00000048   0x7001             STRB     R1,[R0, #+0]
     62                    }   
     63                    if(direction==-1)                  //µç»úÇ°Ò»Ê±¿ÌÊÇ·´×ª
   \                     ??Motor_Output_3:
   \   0000004A   0x....             LDR.N    R0,??DataTable1_4
   \   0000004C   0xF990 0x0000      LDRSB    R0,[R0, #+0]
   \   00000050   0xF05F 0x31FF      MOVS     R1,#-1
   \   00000054   0x4288             CMP      R0,R1
   \   00000056   0xD112             BNE.N    ??Motor_Output_2
     64                    {
     65                        //PWMDTY01 = 0; 
     66                        //PTT_PTT0 = 0;  
     67                      FTM_setPWMDty(FTM2, 0,0);
   \   00000058   0x2200             MOVS     R2,#+0
   \   0000005A   0x2100             MOVS     R1,#+0
   \   0000005C   0x....             LDR.N    R0,??DataTable1_5  ;; 0x400b8000
   \   0000005E   0x.... 0x....      BL       FTM_setPWMDty
     68                        Delay_us(1000);                   //ÏÈÍ£Ò»ÏÂPWM£¬È»ºóÔÙ·´×ª
   \   00000062   0xF44F 0x707A      MOV      R0,#+1000
   \   00000066   0x.... 0x....      BL       Delay_us
     69                          
     70                        //PWMDTY01 = DCDuty;	      
     71                        //PTT_PTT0 = 0;  
     72                        FTM_setPWMDty(FTM2, 0,DCDuty);
   \   0000006A   0x....             LDR.N    R0,??DataTable1_2
   \   0000006C   0x6802             LDR      R2,[R0, #+0]
   \   0000006E   0xB292             UXTH     R2,R2            ;; ZeroExt  R2,R2,#+16,#+16
   \   00000070   0x2100             MOVS     R1,#+0
   \   00000072   0x....             LDR.N    R0,??DataTable1_5  ;; 0x400b8000
   \   00000074   0x.... 0x....      BL       FTM_setPWMDty
     73                        direction=1;     
   \   00000078   0x....             LDR.N    R0,??DataTable1_4
   \   0000007A   0x2101             MOVS     R1,#+1
   \   0000007C   0x7001             STRB     R1,[R0, #+0]
     74                    } 
     75                }
     76              
     77               if(DCDuty<0)
   \                     ??Motor_Output_2:
   \   0000007E   0x....             LDR.N    R0,??DataTable1_2
   \   00000080   0x6800             LDR      R0,[R0, #+0]
   \   00000082   0x2800             CMP      R0,#+0
   \   00000084   0xD531             BPL.N    ??Motor_Output_4
     78                  {     
     79                        FTM_setPWMDty(FTM2, 0,0);
   \   00000086   0x2200             MOVS     R2,#+0
   \   00000088   0x2100             MOVS     R1,#+0
   \   0000008A   0x....             LDR.N    R0,??DataTable1_5  ;; 0x400b8000
   \   0000008C   0x.... 0x....      BL       FTM_setPWMDty
     80                      if(direction==1)                   //µç»úÇ°Ò»Ê±¿ÌÊÇÕý×ª
   \   00000090   0x....             LDR.N    R0,??DataTable1_4
   \   00000092   0xF990 0x0000      LDRSB    R0,[R0, #+0]
   \   00000096   0x2801             CMP      R0,#+1
   \   00000098   0xD114             BNE.N    ??Motor_Output_5
     81                      {
     82                          //PWMDTY01 = 0;	
     83                          //PTT_PTT0 = 0;
     84                          FTM_setPWMDty(FTM2, 0,0);  
   \   0000009A   0x2200             MOVS     R2,#+0
   \   0000009C   0x2100             MOVS     R1,#+0
   \   0000009E   0x....             LDR.N    R0,??DataTable1_5  ;; 0x400b8000
   \   000000A0   0x.... 0x....      BL       FTM_setPWMDty
     85                          Delay_us(1000);
   \   000000A4   0xF44F 0x707A      MOV      R0,#+1000
   \   000000A8   0x.... 0x....      BL       Delay_us
     86                            
     87                          //PTT_PTT0 = 1;	 
     88                          //PWMDTY01 = 500+DCDuty;
     89                          FTM_setPWMDty(FTM2, 1,-DCDuty);
   \   000000AC   0x....             LDR.N    R0,??DataTable1_2
   \   000000AE   0x6800             LDR      R0,[R0, #+0]
   \   000000B0   0x4242             RSBS     R2,R0,#+0
   \   000000B2   0xB292             UXTH     R2,R2            ;; ZeroExt  R2,R2,#+16,#+16
   \   000000B4   0x2101             MOVS     R1,#+1
   \   000000B6   0x....             LDR.N    R0,??DataTable1_5  ;; 0x400b8000
   \   000000B8   0x.... 0x....      BL       FTM_setPWMDty
     90                          direction=-1;  
   \   000000BC   0x....             LDR.N    R0,??DataTable1_4
   \   000000BE   0xF05F 0x31FF      MOVS     R1,#-1
   \   000000C2   0x7001             STRB     R1,[R0, #+0]
     91                      }
     92                      if(direction==-1)                  //µç»úÇ°Ò»Ê±¿ÌÊÇ·´×ª
   \                     ??Motor_Output_5:
   \   000000C4   0x....             LDR.N    R0,??DataTable1_4
   \   000000C6   0xF990 0x0000      LDRSB    R0,[R0, #+0]
   \   000000CA   0xF05F 0x31FF      MOVS     R1,#-1
   \   000000CE   0x4288             CMP      R0,R1
   \   000000D0   0xD10B             BNE.N    ??Motor_Output_4
     93                      {
     94                          //PTT_PTT0 = 1;	 
     95                          //PWMDTY01 = 500+DCDuty;
     96                        FTM_setPWMDty(FTM2, 1,-DCDuty);
   \   000000D2   0x....             LDR.N    R0,??DataTable1_2
   \   000000D4   0x6800             LDR      R0,[R0, #+0]
   \   000000D6   0x4242             RSBS     R2,R0,#+0
   \   000000D8   0xB292             UXTH     R2,R2            ;; ZeroExt  R2,R2,#+16,#+16
   \   000000DA   0x2101             MOVS     R1,#+1
   \   000000DC   0x....             LDR.N    R0,??DataTable1_5  ;; 0x400b8000
   \   000000DE   0x.... 0x....      BL       FTM_setPWMDty
     97                          direction=-1;
   \   000000E2   0x....             LDR.N    R0,??DataTable1_4
   \   000000E4   0xF05F 0x31FF      MOVS     R1,#-1
   \   000000E8   0x7001             STRB     R1,[R0, #+0]
     98                      }
     99                  }
    100          
    101          }   
   \                     ??Motor_Output_4:
   \   000000EA   0xBD01             POP      {R0,PC}          ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1:
   \   00000000   0x........         DC32     Stop_GuDing

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_1:
   \   00000000   0x........         DC32     TiaoJieZhi

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_2:
   \   00000000   0x........         DC32     DCDuty

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_3:
   \   00000000   0xFFFFFE0C         DC32     0xfffffe0c

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_4:
   \   00000000   0x........         DC32     direction

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_5:
   \   00000000   0x400B8000         DC32     0x400b8000

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
        8  Motor_Control
             8 -> Motor_Output
             8 -> __aeabi_f2iz
        8  Motor_Output
             8 -> Delay_us
             8 -> FTM_setPWMDty


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable1
       4  ??DataTable1_1
       4  ??DataTable1_2
       4  ??DataTable1_3
       4  ??DataTable1_4
       4  ??DataTable1_5
       4  DCDuty
      36  Motor_Control
     236  Motor_Output
       1  direction

 
   4 bytes in section .bss
   1 byte  in section .data
 296 bytes in section .text
 
 296 bytes of CODE memory
   5 bytes of DATA memory

Errors: none
Warnings: none
