###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V6.30.1.53127/W32 for ARM     05/May/2015  18:16:58 #
# Copyright 1999-2011 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  thumb                                                    #
#    Endian       =  little                                                   #
#    Source file  =  E:\2014ÖÇÄÜ³µ\ÖÇÄÜ³µ³ÌÐò\5ÔÂ3ºÅ×ª²î¿ª»·\SD_System\SD_dri #
#                    ver.c                                                    #
#    Command line =  E:\2014ÖÇÄÜ³µ\ÖÇÄÜ³µ³ÌÐò\5ÔÂ3ºÅ×ª²î¿ª»·\SD_System\SD_dri #
#                    ver.c -D IAR -lCN E:\2014ÖÇÄÜ³µ\ÖÇÄÜ³µ³ÌÐò\5ÔÂ3ºÅ×ª²î¿ª» #
#                    ·\Flash_512K\List\ -lB E:\2014ÖÇÄÜ³µ\ÖÇÄÜ³µ³ÌÐò\5ÔÂ3ºÅ×ª #
#                    ²î¿ª»·\Flash_512K\List\ -o E:\2014ÖÇÄÜ³µ\ÖÇÄÜ³µ³ÌÐò\5ÔÂ3 #
#                    ºÅ×ª²î¿ª»·\Flash_512K\Obj\ --no_cse --no_unroll          #
#                    --no_inline --no_code_motion --no_tbaa --no_clustering   #
#                    --no_scheduling --debug --endian=little --cpu=Cortex-M4  #
#                    -e --char_is_signed --fpu=None --dlib_config             #
#                    "D:\Program Files (x86)\IAR\arm\INC\c\DLib_Config_Normal #
#                    .h" -I E:\2014ÖÇÄÜ³µ\ÖÇÄÜ³µ³ÌÐò\5ÔÂ3ºÅ×ª²î¿ª»·\Library\C #
#                    PU\ -I E:\2014ÖÇÄÜ³µ\ÖÇÄÜ³µ³ÌÐò\5ÔÂ3ºÅ×ª²î¿ª»·\Library\D #
#                    rivers\ADC\ -I E:\2014ÖÇÄÜ³µ\ÖÇÄÜ³µ³ÌÐò\5ÔÂ3ºÅ×ª²î¿ª»·\L #
#                    ibrary\Drivers\FTM\ -I E:\2014ÖÇÄÜ³µ\ÖÇÄÜ³µ³ÌÐò\5ÔÂ3ºÅ×ª #
#                    ²î¿ª»·\Library\Drivers\GPIO\ -I                          #
#                    E:\2014ÖÇÄÜ³µ\ÖÇÄÜ³µ³ÌÐò\5ÔÂ3ºÅ×ª²î¿ª»·\Library\Drivers\ #
#                    PIT\ -I E:\2014ÖÇÄÜ³µ\ÖÇÄÜ³µ³ÌÐò\5ÔÂ3ºÅ×ª²î¿ª»·\Library\ #
#                    Drivers\I2C\ -I E:\2014ÖÇÄÜ³µ\ÖÇÄÜ³µ³ÌÐò\5ÔÂ3ºÅ×ª²î¿ª»·\ #
#                    Library\Drivers\UART\ -I E:\2014ÖÇÄÜ³µ\ÖÇÄÜ³µ³ÌÐò\5ÔÂ3ºÅ #
#                    ×ª²î¿ª»·\Library\Drivers\FTFL\ -I                        #
#                    E:\2014ÖÇÄÜ³µ\ÖÇÄÜ³µ³ÌÐò\5ÔÂ3ºÅ×ª²î¿ª»·\MyFunction\ -I   #
#                    E:\2014ÖÇÄÜ³µ\ÖÇÄÜ³µ³ÌÐò\5ÔÂ3ºÅ×ª²î¿ª»·\SD_System\ -I    #
#                    E:\2014ÖÇÄÜ³µ\ÖÇÄÜ³µ³ÌÐò\5ÔÂ3ºÅ×ª²î¿ª»·\Delay\ -I        #
#                    E:\2014ÖÇÄÜ³µ\ÖÇÄÜ³µ³ÌÐò\5ÔÂ3ºÅ×ª²î¿ª»·\System_Init\ -I  #
#                    E:\2014ÖÇÄÜ³µ\ÖÇÄÜ³µ³ÌÐò\5ÔÂ3ºÅ×ª²î¿ª»·\OLED\ -I         #
#                    E:\2014ÖÇÄÜ³µ\ÖÇÄÜ³µ³ÌÐò\5ÔÂ3ºÅ×ª²î¿ª»·\ZLG7290\ -I      #
#                    E:\2014ÖÇÄÜ³µ\ÖÇÄÜ³µ³ÌÐò\5ÔÂ3ºÅ×ª²î¿ª»·\Simple_AD\ -I    #
#                    E:\2014ÖÇÄÜ³µ\ÖÇÄÜ³µ³ÌÐò\5ÔÂ3ºÅ×ª²î¿ª»·\Make_Desicion\   #
#                    -I E:\2014ÖÇÄÜ³µ\ÖÇÄÜ³µ³ÌÐò\5ÔÂ3ºÅ×ª²î¿ª»·\Make_Desicion #
#                    \Judge_Way\ -I E:\2014ÖÇÄÜ³µ\ÖÇÄÜ³µ³ÌÐò\5ÔÂ3ºÅ×ª²î¿ª»·\M #
#                    ake_Desicion\Speed_Control\ -I                           #
#                    E:\2014ÖÇÄÜ³µ\ÖÇÄÜ³µ³ÌÐò\5ÔÂ3ºÅ×ª²î¿ª»·\Source\ -I       #
#                    E:\2014ÖÇÄÜ³µ\ÖÇÄÜ³µ³ÌÐò\5ÔÂ3ºÅ×ª²î¿ª»·\Peripheral_Opara #
#                    tion\ -I E:\2014ÖÇÄÜ³µ\ÖÇÄÜ³µ³ÌÐò\5ÔÂ3ºÅ×ª²î¿ª»·\Balance #
#                    _control\ -Ol                                            #
#    List file    =  E:\2014ÖÇÄÜ³µ\ÖÇÄÜ³µ³ÌÐò\5ÔÂ3ºÅ×ª²î¿ª»·\Flash_512K\List\ #
#                    SD_driver.lst                                            #
#    Object file  =  E:\2014ÖÇÄÜ³µ\ÖÇÄÜ³µ³ÌÐò\5ÔÂ3ºÅ×ª²î¿ª»·\Flash_512K\Obj\S #
#                    D_driver.o                                               #
#                                                                             #
#                                                                             #
###############################################################################

E:\2014ÖÇÄÜ³µ\ÖÇÄÜ³µ³ÌÐò\5ÔÂ3ºÅ×ª²î¿ª»·\SD_System\SD_driver.c
      1          /******************************************************************************
      2          
      3          * SD_driver.c
      4          
      5          * sd¿¨µÄµ×²ãÇý¶¯ÎÄ¼þ   
      6          
      7          * µÚÒ»×÷Õß£º  ¼Í³É   (µÚËÄ½ìÉãÏñÍ·)
      8            ÍêÉÆÓëÕûÀí£ºËïÎÄ½¡ (µÚÁù½ìÉãÏñÍ·)
      9          * °æ±¾£ºV1.15 (ÓëV1.13¡¢v1.14°æÏà¼æÈÝ,²»Ê¹ÄÜË«»º´æÊ±ÓëV1.10Ö®ºóµÄ°æ±¾Ïà¼æÈÝ)
     10          * °æ±¾¸üÐÂÊ±¼ä£º2012Äê1ÔÂ30ÈÕ
     11            
     12          * Ö÷¿ØÐ¾Æ¬£ºMK10N512VMD100
     13            ¿ª·¢Æ½Ì¨£ºCodeWarrior 10.1
     14          
     15          * (!!!¸ü¸ÄÓ²¼þÆ½Ì¨ºó±ØÐëÐÞ¸Ä!!!)                
     16           
     17          ******************************************************************************/
     18          
     19          #include "./SD_System.h"
     20                                            
     21          #ifdef EN_SD                  
     22           

   \                                 In section .bss, align 1
     23          byte_sd sd_initover = 0; /* SD¿¨³õÊ¼»¯½áÊø±êÖ¾ */
   \                     sd_initover:
   \   00000000                      DS8 1
     24          

   \                                 In section .bss, align 1
     25          byte_sd sd_yes=0;  //ÅÐ¶ÏÊÇ·ñÓÃSD¿¨(Ã»ÓÐÎª0£¬ÓÐÎª1)
   \                     sd_yes:
   \   00000000                      DS8 1

   \                                 In section .bss, align 1
     26          byte_sd flag_sdhc; //sdhc¿¨±êÖ¾,=1ÓÐÐ§         /************By Sword************/ 
   \                     flag_sdhc:
   \   00000000                      DS8 1

   \                                 In section .bss, align 1
     27          byte_sd flag_test_sd; //µ÷ÊÔÊ¹ÓÃ               /************By Sword************/ 
   \                     flag_test_sd:
   \   00000000                      DS8 1

   \                                 In section .bss, align 1
     28          byte_sd flag_err_sd;  //SD³ö´í±êÖ¾             /************By Sword************/ 
   \                     flag_err_sd:
   \   00000000                      DS8 1

   \                                 In section .bss, align 1
     29          byte_sd Flag_SDRdy;    //SD¿¨¾ÍÐ÷±êÖ¾(=1±íSD¿¨¾ÍÐ÷)
   \                     Flag_SDRdy:
   \   00000000                      DS8 1
     30          
     31          /*ÄÚ²¿±äÁ¿*/

   \                                 In section .bss, align 4
     32          static byte_sd resp_sd[4];                     /************By Sword************/ 
   \                     resp_sd:
   \   00000000                      DS8 4
     33          
     34          /**************************ÄÚ²¿º¯Êý¶¨Òå**************************/
     35          #if DELAY_WaitRead_SD != 0
     36          /**********************************************************
     37          * function:SD_Delay_ReadByte
     38          * description:¶ÁÈ¡1ByteÊý¾ÝÖ®ºóµÄÑÓÊ±,ÑÓÊ±Ê±¼äÔÚSD_driver.h
     39          *             ÖÐ¶¨Òå¡£
     40          **********************************************************/

   \                                 In section .text, align 4, keep-with-next
     41          static void SD_Delay_ReadByte(void)
     42          {
     43          	asm("nop");asm("nop");asm("nop");asm("nop");asm("nop");
   \                     SD_Delay_ReadByte:
   \   00000000   0xBF00             nop              
   \   00000002   0xBF00             nop              
   \   00000004   0xBF00             nop              
   \   00000006   0xBF00             nop              
   \   00000008   0xBF00             nop              
     44          	asm("nop");asm("nop");asm("nop");asm("nop");asm("nop");
   \   0000000A   0xBF00             nop              
   \   0000000C   0xBF00             nop              
   \   0000000E   0xBF00             nop              
   \   00000010   0xBF00             nop              
   \   00000012   0xBF00             nop              
     45          
     46          #if DELAY_WaitRead_SD > 1
     47          	asm("nop");asm("nop");asm("nop");asm("nop");asm("nop");
   \   00000014   0xBF00             nop              
   \   00000016   0xBF00             nop              
   \   00000018   0xBF00             nop              
   \   0000001A   0xBF00             nop              
   \   0000001C   0xBF00             nop              
     48          	asm("nop");asm("nop");asm("nop");asm("nop");asm("nop");
   \   0000001E   0xBF00             nop              
   \   00000020   0xBF00             nop              
   \   00000022   0xBF00             nop              
   \   00000024   0xBF00             nop              
   \   00000026   0xBF00             nop              
     49          #endif
     50          	
     51          #if DELAY_WaitRead_SD > 2
     52          	asm("nop");asm("nop");asm("nop");asm("nop");asm("nop");
   \   00000028   0xBF00             nop              
   \   0000002A   0xBF00             nop              
   \   0000002C   0xBF00             nop              
   \   0000002E   0xBF00             nop              
   \   00000030   0xBF00             nop              
     53          	asm("nop");asm("nop");asm("nop");asm("nop");asm("nop");
   \   00000032   0xBF00             nop              
   \   00000034   0xBF00             nop              
   \   00000036   0xBF00             nop              
   \   00000038   0xBF00             nop              
   \   0000003A   0xBF00             nop              
     54          #endif
     55          	
     56          #if DELAY_WaitRead_SD > 3
     57          	asm("nop");asm("nop");asm("nop");asm("nop");asm("nop");
   \   0000003C   0xBF00             nop              
   \   0000003E   0xBF00             nop              
   \   00000040   0xBF00             nop              
   \   00000042   0xBF00             nop              
   \   00000044   0xBF00             nop              
     58          	asm("nop");asm("nop");asm("nop");asm("nop");asm("nop");
   \   00000046   0xBF00             nop              
   \   00000048   0xBF00             nop              
   \   0000004A   0xBF00             nop              
   \   0000004C   0xBF00             nop              
   \   0000004E   0xBF00             nop              
     59          #endif
     60          	
     61          #if DELAY_WaitRead_SD > 4
     62          	asm("nop");asm("nop");asm("nop");asm("nop");asm("nop");
   \   00000050   0xBF00             nop              
   \   00000052   0xBF00             nop              
   \   00000054   0xBF00             nop              
   \   00000056   0xBF00             nop              
   \   00000058   0xBF00             nop              
     63          	asm("nop");asm("nop");asm("nop");asm("nop");asm("nop");
   \   0000005A   0xBF00             nop              
   \   0000005C   0xBF00             nop              
   \   0000005E   0xBF00             nop              
   \   00000060   0xBF00             nop              
   \   00000062   0xBF00             nop              
     64          #endif
     65          	
     66          #if DELAY_WaitRead_SD > 5
     67          	asm("nop");asm("nop");asm("nop");asm("nop");asm("nop");
     68          	asm("nop");asm("nop");asm("nop");asm("nop");asm("nop");
     69          #endif	
     70          
     71          #if DELAY_WaitRead_SD > 6
     72          	asm("nop");asm("nop");asm("nop");asm("nop");asm("nop");
     73          	asm("nop");asm("nop");asm("nop");asm("nop");asm("nop");
     74          #endif
     75          	
     76          #if DELAY_WaitRead_SD > 7
     77          	asm("nop");asm("nop");asm("nop");asm("nop");asm("nop");
     78          	asm("nop");asm("nop");asm("nop");asm("nop");asm("nop");
     79          #endif
     80          	
     81          #if DELAY_WaitRead_SD > 8
     82          	asm("nop");asm("nop");asm("nop");asm("nop");asm("nop");
     83          	asm("nop");asm("nop");asm("nop");asm("nop");asm("nop");
     84          #endif
     85          	
     86          #if DELAY_WaitRead_SD > 9
     87          	asm("nop");asm("nop");asm("nop");asm("nop");asm("nop");
     88          	asm("nop");asm("nop");asm("nop");asm("nop");asm("nop");
     89          #endif
     90          	
     91          #if DELAY_WaitRead_SD > 10
     92          	asm("nop");asm("nop");asm("nop");asm("nop");asm("nop");
     93          	asm("nop");asm("nop");asm("nop");asm("nop");asm("nop");
     94          #endif	
     95          }
   \   00000064   0x4770             BX       LR               ;; return
     96          #endif
     97          /**********************************************************
     98          * function:SD_WriteByte
     99          * description:Ð´Èë1ByteÊý¾Ý£¨²éÑ¯·½Ê½£©
    100          **********************************************************/

   \                                 In section .text, align 2, keep-with-next
    101          static void SD_WriteByte(byte_sd jc_data) 
    102          {	
    103          	SPI1_SR |= SPI_SR_EOQF_MASK;
   \                     SD_WriteByte:
   \   00000000   0x.... 0x....      LDR.W    R1,??DataTable11  ;; 0x4002d02c
   \   00000004   0x6809             LDR      R1,[R1, #+0]
   \   00000006   0xF051 0x5180      ORRS     R1,R1,#0x10000000
   \   0000000A   0x.... 0x....      LDR.W    R2,??DataTable11  ;; 0x4002d02c
   \   0000000E   0x6011             STR      R1,[R2, #+0]
    104          	SPI1_MCR &= (~SPI_MCR_HALT_MASK) & (~SPI_MCR_MDIS_MASK);   /* ½øÈëRUNNING×´Ì¬ */
   \   00000010   0x.... 0x....      LDR.W    R1,??DataTable11_1  ;; 0x4002d000
   \   00000014   0x6809             LDR      R1,[R1, #+0]
   \   00000016   0x.... 0x....      LDR.W    R2,??DataTable11_2  ;; 0xffffbffe
   \   0000001A   0x4011             ANDS     R1,R2,R1
   \   0000001C   0x.... 0x....      LDR.W    R2,??DataTable11_1  ;; 0x4002d000
   \   00000020   0x6011             STR      R1,[R2, #+0]
    105          	
    106          	SPI1_PUSHR = SPI_PUSHR_CTAS(0) | SPI_PUSHR_EOQ_MASK | SPI_PUSHR_CTCNT_MASK | jc_data;
   \   00000022   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000024   0xF050 0x6040      ORRS     R0,R0,#0xC000000
   \   00000028   0x.... 0x....      LDR.W    R1,??DataTable11_3  ;; 0x4002d034
   \   0000002C   0x6008             STR      R0,[R1, #+0]
    107          	                                                           /* Ð´ÈëÊý¾Ý²¢Çå¿Õ¼ÆÊý¼Ä´æÆ÷ */ 
    108          	                                                           /* ÖÃÎ»EOQ±íÊ¾¸ÃÊý¾ÝÊÇ¶ÓÁÐÖÐ×îºóÒ»¸ö,¼´Ê¹ÄÜ·¢ËÍ */
    109          	
    110          	while((SPI1_SR & SPI_SR_TCF_MASK) == 0);	
   \                     ??SD_WriteByte_0:
   \   0000002E   0x.... 0x....      LDR.W    R0,??DataTable11  ;; 0x4002d02c
   \   00000032   0x6800             LDR      R0,[R0, #+0]
   \   00000034   0x2800             CMP      R0,#+0
   \   00000036   0xD5FA             BPL.N    ??SD_WriteByte_0
    111          	SPI1_SR |= SPI_SR_TCF_MASK;
   \   00000038   0x.... 0x....      LDR.W    R0,??DataTable11  ;; 0x4002d02c
   \   0000003C   0x6800             LDR      R0,[R0, #+0]
   \   0000003E   0xF050 0x4000      ORRS     R0,R0,#0x80000000
   \   00000042   0x.... 0x....      LDR.W    R1,??DataTable11  ;; 0x4002d02c
   \   00000046   0x6008             STR      R0,[R1, #+0]
    112          	
    113          	SPI1_MCR |= SPI_MCR_CLR_TXF_MASK | SPI_MCR_CLR_RXF_MASK;   /* Çå¿Õ¶ÓÁÐ(Õâ¾äºÜÖØÒª) */
   \   00000048   0x.... 0x....      LDR.W    R0,??DataTable11_1  ;; 0x4002d000
   \   0000004C   0x6800             LDR      R0,[R0, #+0]
   \   0000004E   0xF450 0x6040      ORRS     R0,R0,#0xC00
   \   00000052   0x.... 0x....      LDR.W    R1,??DataTable11_1  ;; 0x4002d000
   \   00000056   0x6008             STR      R0,[R1, #+0]
    114          }
   \   00000058   0x4770             BX       LR               ;; return
    115          /**********************************************************
    116          * function:SD_ReadByte
    117          * description:¶Á³ö1ByteÊý¾Ý£¨²éÑ¯·½Ê½£©
    118          **********************************************************/

   \                                 In section .text, align 2, keep-with-next
    119          static byte_sd SD_ReadByte(byte_sd jc_data)
    120          {	
   \                     SD_ReadByte:
   \   00000000   0xB580             PUSH     {R7,LR}
    121          	byte_sd dat;
    122          	
    123          	SPI1_SR |= SPI_SR_EOQF_MASK;
   \   00000002   0x.... 0x....      LDR.W    R1,??DataTable11  ;; 0x4002d02c
   \   00000006   0x6809             LDR      R1,[R1, #+0]
   \   00000008   0xF051 0x5180      ORRS     R1,R1,#0x10000000
   \   0000000C   0x.... 0x....      LDR.W    R2,??DataTable11  ;; 0x4002d02c
   \   00000010   0x6011             STR      R1,[R2, #+0]
    124          	SPI1_MCR &= (~SPI_MCR_HALT_MASK) & (~SPI_MCR_MDIS_MASK);   /* ½øÈëRUNNING×´Ì¬ */
   \   00000012   0x.... 0x....      LDR.W    R1,??DataTable11_1  ;; 0x4002d000
   \   00000016   0x6809             LDR      R1,[R1, #+0]
   \   00000018   0x.... 0x....      LDR.W    R2,??DataTable11_2  ;; 0xffffbffe
   \   0000001C   0x4011             ANDS     R1,R2,R1
   \   0000001E   0x.... 0x....      LDR.W    R2,??DataTable11_1  ;; 0x4002d000
   \   00000022   0x6011             STR      R1,[R2, #+0]
    125          		
    126          	SPI1_PUSHR = SPI_PUSHR_CTAS(0) | SPI_PUSHR_EOQ_MASK |SPI_PUSHR_CTCNT_MASK | jc_data;
   \   00000024   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000026   0xF050 0x6040      ORRS     R0,R0,#0xC000000
   \   0000002A   0x.... 0x....      LDR.W    R1,??DataTable11_3  ;; 0x4002d034
   \   0000002E   0x6008             STR      R0,[R1, #+0]
    127          		
    128          	while((SPI1_SR & SPI_SR_TCF_MASK) == 0);
   \                     ??SD_ReadByte_0:
   \   00000030   0x.... 0x....      LDR.W    R0,??DataTable11  ;; 0x4002d02c
   \   00000034   0x6800             LDR      R0,[R0, #+0]
   \   00000036   0x2800             CMP      R0,#+0
   \   00000038   0xD5FA             BPL.N    ??SD_ReadByte_0
    129          	SPI1_SR |= SPI_SR_TCF_MASK;
   \   0000003A   0x.... 0x....      LDR.W    R0,??DataTable11  ;; 0x4002d02c
   \   0000003E   0x6800             LDR      R0,[R0, #+0]
   \   00000040   0xF050 0x4000      ORRS     R0,R0,#0x80000000
   \   00000044   0x.... 0x....      LDR.W    R1,??DataTable11  ;; 0x4002d02c
   \   00000048   0x6008             STR      R0,[R1, #+0]
    130          	
    131          #if DELAY_WaitRead_SD != 0	
    132          	SD_Delay_ReadByte();
   \   0000004A   0x.... 0x....      BL       SD_Delay_ReadByte
    133          #endif	
    134          		
    135          	dat = (byte_sd)SPI1_POPR;
   \   0000004E   0x.... 0x....      LDR.W    R0,??DataTable11_4  ;; 0x4002d038
   \   00000052   0x6800             LDR      R0,[R0, #+0]
    136          	
    137          	SPI1_MCR |= SPI_MCR_CLR_TXF_MASK | SPI_MCR_CLR_RXF_MASK;
   \   00000054   0x.... 0x....      LDR.W    R1,??DataTable11_1  ;; 0x4002d000
   \   00000058   0x6809             LDR      R1,[R1, #+0]
   \   0000005A   0xF451 0x6140      ORRS     R1,R1,#0xC00
   \   0000005E   0x.... 0x....      LDR.W    R2,??DataTable11_1  ;; 0x4002d000
   \   00000062   0x6011             STR      R1,[R2, #+0]
    138          	
    139          	return dat;
   \   00000064   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000066   0xBD02             POP      {R1,PC}          ;; return
    140          }
    141          
    142          
    143          /*
    144          º¯ÊýÃû³Æ£ºclose_SD
    145          º¯Êý¹¦ÄÜ£º¹Ø±ÕSD¿¨(¹Ø±ÕÎïÀí×ÜÏßµÄÍ¬Ê±ÇåÁãsd¿ÉÓÃ±êÖ¾±äÁ¿sd_yes)
    146          ±à Ð´ Õß£ºSword
    147          */

   \                                 In section .text, align 2, keep-with-next
    148          void CloseSD(void)
    149          {
    150            sd_yes = 0;
   \                     CloseSD:
   \   00000000   0x.... 0x....      LDR.W    R0,??DataTable11_5
   \   00000004   0x2100             MOVS     R1,#+0
   \   00000006   0x7001             STRB     R1,[R0, #+0]
    151            OFF_SD_CS;
   \   00000008   0x.... 0x....      LDR.W    R0,??DataTable11_6  ;; 0x400ff104
   \   0000000C   0x6800             LDR      R0,[R0, #+0]
   \   0000000E   0xF050 0x0020      ORRS     R0,R0,#0x20
   \   00000012   0x.... 0x....      LDR.W    R1,??DataTable11_6  ;; 0x400ff104
   \   00000016   0x6008             STR      R0,[R1, #+0]
    152            SIM_SCGC6 &= ~SIM_SCGC6_SPI1_MASK;              /* ¹Ø±ÕSPI1Ê±ÖÓ */
   \   00000018   0x.... 0x....      LDR.W    R0,??DataTable11_7  ;; 0x4004803c
   \   0000001C   0x6800             LDR      R0,[R0, #+0]
   \   0000001E   0xF430 0x5000      BICS     R0,R0,#0x2000
   \   00000022   0x.... 0x....      LDR.W    R1,??DataTable11_7  ;; 0x4004803c
   \   00000026   0x6008             STR      R0,[R1, #+0]
    153          }
   \   00000028   0x4770             BX       LR               ;; return
    154          /*
    155          º¯Êý¹¦ÄÜ£ºSetSD_Low
    156          º¯ÊýÃû³Æ£ºÉè¶¨×ÜÏßÎªµÍËÙ(Ô¼Îª230kHz)
    157          ±à Ð´ Õß£ºSword
    158          */

   \                                 In section .text, align 2, keep-with-next
    159          void SetSD_Low(void)
    160          {
    161          	SPI1_CTAR0 &= (~SPI_CTAR_DBR_MASK) & (~SPI_CTAR_BR_MASK) & (~SPI_CTAR_PBR_MASK);
   \                     SetSD_Low:
   \   00000000   0x.... 0x....      LDR.W    R0,??DataTable11_8  ;; 0x4002d00c
   \   00000004   0x6800             LDR      R0,[R0, #+0]
   \   00000006   0x.... 0x....      LDR.W    R1,??DataTable11_9  ;; 0x7ffcfff0
   \   0000000A   0x4008             ANDS     R0,R1,R0
   \   0000000C   0x.... 0x....      LDR.W    R1,??DataTable11_8  ;; 0x4002d00c
   \   00000010   0x6008             STR      R0,[R1, #+0]
    162          	SPI1_CTAR0 |= SPI_CTAR_BR(7) | SPI_CTAR_PBR(1);
   \   00000012   0x.... 0x....      LDR.W    R0,??DataTable11_8  ;; 0x4002d00c
   \   00000016   0x6800             LDR      R0,[R0, #+0]
   \   00000018   0xF440 0x3080      ORR      R0,R0,#0x10000
   \   0000001C   0xF050 0x0007      ORRS     R0,R0,#0x7
   \   00000020   0x.... 0x....      LDR.W    R1,??DataTable11_8  ;; 0x4002d00c
   \   00000024   0x6008             STR      R0,[R1, #+0]
    163          	/* DBR = 0, BR = 128, PBR = 3 ; f = f(bus)/PBR * [(1+DBR)/BR] */
    164          }
   \   00000026   0x4770             BX       LR               ;; return
    165          /*
    166          º¯Êý¹¦ÄÜ£ºSetSD_High
    167          º¯ÊýÃû³Æ£ºÉè¶¨×ÜÏßÎª¸ßËÙ(Ô¼Îª15MHz)
    168          ±à Ð´ Õß£ºSword
    169          */

   \                                 In section .text, align 2, keep-with-next
    170          void SetSD_High(void)
    171          {
    172          	SPI1_CTAR0 &= (~SPI_CTAR_DBR_MASK) & (~SPI_CTAR_BR_MASK) & (~SPI_CTAR_PBR_MASK);
   \                     SetSD_High:
   \   00000000   0x.... 0x....      LDR.W    R0,??DataTable11_8  ;; 0x4002d00c
   \   00000004   0x6800             LDR      R0,[R0, #+0]
   \   00000006   0x.... 0x....      LDR.W    R1,??DataTable11_9  ;; 0x7ffcfff0
   \   0000000A   0x4008             ANDS     R0,R1,R0
   \   0000000C   0x.... 0x....      LDR.W    R1,??DataTable11_8  ;; 0x4002d00c
   \   00000010   0x6008             STR      R0,[R1, #+0]
    173            SPI1_CTAR0 |= SPI_CTAR_BR(0) | SPI_CTAR_PBR(1);
   \   00000012   0x.... 0x....      LDR.W    R0,??DataTable11_8  ;; 0x4002d00c
   \   00000016   0x6800             LDR      R0,[R0, #+0]
   \   00000018   0xF450 0x3080      ORRS     R0,R0,#0x10000
   \   0000001C   0x.... 0x....      LDR.W    R1,??DataTable11_8  ;; 0x4002d00c
   \   00000020   0x6008             STR      R0,[R1, #+0]
    174          	/* DBR = 0, BR = 2, PBR = 3 ; f = f(bus)/PBR * [(1+DBR)/BR] */
    175          }
   \   00000022   0x4770             BX       LR               ;; return
    176          /*
    177          º¯ÊýÃû³Æ£ºSD_driver_Init
    178          º¯Êý¹¦ÄÜ£ºSD¿¨µÄÓ²¼þ³õÊ¼»¯
    179          ±à Ð´ Õß£ºSword
    180          */

   \                                 In section .text, align 2, keep-with-next
    181          void SD_driver_Init(void)
    182          { 
    183          	SIM_SCGC6 |= SIM_SCGC6_SPI1_MASK;              /* Ê¹ÄÜSPI1Ê±ÖÓ */
   \                     SD_driver_Init:
   \   00000000   0x.... 0x....      LDR.W    R0,??DataTable11_7  ;; 0x4004803c
   \   00000004   0x6800             LDR      R0,[R0, #+0]
   \   00000006   0xF450 0x5000      ORRS     R0,R0,#0x2000
   \   0000000A   0x.... 0x....      LDR.W    R1,??DataTable11_7  ;; 0x4004803c
   \   0000000E   0x6008             STR      R0,[R1, #+0]
    184          	
    185          	PORTE_PCR0 = PORT_PCR_MUX(2) | PORT_PCR_PE_MASK | PORT_PCR_PS_MASK;
   \   00000010   0x.... 0x....      LDR.W    R0,??DataTable11_10  ;; 0x4004d000
   \   00000014   0xF240 0x2103      MOVW     R1,#+515
   \   00000018   0x6001             STR      R1,[R0, #+0]
    186          	PORTE_PCR1 = PORT_PCR_MUX(2) | PORT_PCR_PE_MASK | PORT_PCR_PS_MASK;
   \   0000001A   0x.... 0x....      LDR.W    R0,??DataTable11_11  ;; 0x4004d004
   \   0000001E   0xF240 0x2103      MOVW     R1,#+515
   \   00000022   0x6001             STR      R1,[R0, #+0]
    187          	PORTE_PCR2 = PORT_PCR_MUX(2) | PORT_PCR_PE_MASK | PORT_PCR_PS_MASK;
   \   00000024   0x.... 0x....      LDR.W    R0,??DataTable11_12  ;; 0x4004d008
   \   00000028   0xF240 0x2103      MOVW     R1,#+515
   \   0000002C   0x6001             STR      R1,[R0, #+0]
    188          	PORTE_PCR3 = PORT_PCR_MUX(2) | PORT_PCR_PE_MASK;
   \   0000002E   0x.... 0x....      LDR.W    R0,??DataTable11_13  ;; 0x4004d00c
   \   00000032   0xF240 0x2102      MOVW     R1,#+514
   \   00000036   0x6001             STR      R1,[R0, #+0]
    189          	                                               /* ½«PE0-PE3ÉèÎªSPI¹¦ÄÜ,PTE0-2Ê¹ÄÜÉÏÀ­µç×è,PTE3ÎªÏÂÀ­µç×è */
    190          	PORTE_PCR5 = PORT_PCR_MUX(1) | PORT_PCR_PE_MASK | PORT_PCR_PS_MASK;
   \   00000038   0x.... 0x....      LDR.W    R0,??DataTable11_14  ;; 0x4004d014
   \   0000003C   0xF240 0x1103      MOVW     R1,#+259
   \   00000040   0x6001             STR      R1,[R0, #+0]
    191          	GPIOE_PDDR |= (1<<5);                          /* ½«PE5ÉèÎªÆÕÍ¨IO,¿ØÖÆCS */
   \   00000042   0x.... 0x....      LDR.W    R0,??DataTable11_15  ;; 0x400ff114
   \   00000046   0x6800             LDR      R0,[R0, #+0]
   \   00000048   0xF050 0x0020      ORRS     R0,R0,#0x20
   \   0000004C   0x.... 0x....      LDR.W    R1,??DataTable11_15  ;; 0x400ff114
   \   00000050   0x6008             STR      R0,[R1, #+0]
    192          	OFF_SD_CS;
   \   00000052   0x.... 0x....      LDR.W    R0,??DataTable11_6  ;; 0x400ff104
   \   00000056   0x6800             LDR      R0,[R0, #+0]
   \   00000058   0xF050 0x0020      ORRS     R0,R0,#0x20
   \   0000005C   0x.... 0x....      LDR.W    R1,??DataTable11_6  ;; 0x400ff104
   \   00000060   0x6008             STR      R0,[R1, #+0]
    193          	
    194          	SPI1_MCR |= SPI_MCR_MSTR_MASK | SPI_MCR_PCSIS(0x1F);                 
   \   00000062   0x.... 0x....      LDR.W    R0,??DataTable11_1  ;; 0x4002d000
   \   00000066   0x6800             LDR      R0,[R0, #+0]
   \   00000068   0x.... 0x....      LDR.W    R1,??DataTable11_16  ;; 0x801f0000
   \   0000006C   0x4308             ORRS     R0,R1,R0
   \   0000006E   0x.... 0x....      LDR.W    R1,??DataTable11_1  ;; 0x4002d000
   \   00000072   0x6008             STR      R0,[R1, #+0]
    195          	                                               /* ÉèÖÃÎªSPIÖ÷»ú,CSµÄÎÞÐ§×´Ì¬Îª¸ßµçÆ½ */
    196          	
    197          	SPI1_RSER |= SPI_RSER_TCF_RE_MASK | SPI_RSER_EOQF_RE_MASK;
   \   00000074   0x.... 0x....      LDR.W    R0,??DataTable11_17  ;; 0x4002d030
   \   00000078   0x6800             LDR      R0,[R0, #+0]
   \   0000007A   0xF050 0x4010      ORRS     R0,R0,#0x90000000
   \   0000007E   0x.... 0x....      LDR.W    R1,??DataTable11_17  ;; 0x4002d030
   \   00000082   0x6008             STR      R0,[R1, #+0]
    198          	
    199          	SPI1_CTAR0 = SPI_CTAR_FMSZ(7);                 
   \   00000084   0x.... 0x....      LDR.W    R0,??DataTable11_8  ;; 0x4002d00c
   \   00000088   0xF05F 0x5160      MOVS     R1,#+939524096
   \   0000008C   0x6001             STR      R1,[R0, #+0]
    200          	                                               /* ÉèÖÃÒ»Ö¡´«ËÍ8bit */
    201          }
   \   0000008E   0x4770             BX       LR               ;; return
    202          /**********************************************************
    203          * function:Wait_SDRdy
    204          * description:µÈ´ýSD¿¨¾ÍÐ÷(µ±ÏòSD¿¨Ð´ÈëÊý¾ÝÊ±SD¿¨½øÈëÃ¦×´Ì¬)
    205          * Input:µÈ´ýÊ±ÏÞ
    206          **********************************************************/

   \                                 In section .text, align 4, keep-with-next
    207          void Wait_SDRdy(dword_sd Limit)
    208          {
   \                     Wait_SDRdy:
   \   00000000   0xB538             PUSH     {R3-R5,LR}
   \   00000002   0x0004             MOVS     R4,R0
    209            dword_sd retry=0;
   \   00000004   0x2500             MOVS     R5,#+0
    210            while(Flag_SDRdy==0 && (++retry)<Limit) 
   \                     ??Wait_SDRdy_0:
   \   00000006   0x.... 0x....      LDR.W    R0,??DataTable11_18
   \   0000000A   0x7800             LDRB     R0,[R0, #+0]
   \   0000000C   0x2800             CMP      R0,#+0
   \   0000000E   0xD11C             BNE.N    ??Wait_SDRdy_1
   \   00000010   0x1C6D             ADDS     R5,R5,#+1
   \   00000012   0x42A5             CMP      R5,R4
   \   00000014   0xD219             BCS.N    ??Wait_SDRdy_1
    211            {
    212              C_WDOG();
   \   00000016   0xB672             CPSID i          
   \   00000018   0x.... 0x....      LDR.W    R0,??DataTable11_19  ;; 0x4005200c
   \   0000001C   0xF24A 0x6102      MOVW     R1,#+42498
   \   00000020   0x8001             STRH     R1,[R0, #+0]
   \   00000022   0x.... 0x....      LDR.W    R0,??DataTable11_19  ;; 0x4005200c
   \   00000026   0xF24B 0x4180      MOVW     R1,#+46208
   \   0000002A   0x8001             STRH     R1,[R0, #+0]
   \   0000002C   0x.... 0x....      LDR.W    R0,??DataTable11_20
   \   00000030   0x7800             LDRB     R0,[R0, #+0]
   \   00000032   0x2800             CMP      R0,#+0
   \   00000034   0xD000             BEQ.N    ??Wait_SDRdy_2
   \   00000036   0xB662             CPSIE i          
    213              if(SD_ReadByte(0xff)!=0)
   \                     ??Wait_SDRdy_2:
   \   00000038   0x20FF             MOVS     R0,#+255
   \   0000003A   0x.... 0x....      BL       SD_ReadByte
   \   0000003E   0x2800             CMP      R0,#+0
   \   00000040   0xD0E1             BEQ.N    ??Wait_SDRdy_0
    214              {
    215                Flag_SDRdy=1;
   \   00000042   0x.... 0x....      LDR.W    R0,??DataTable11_18
   \   00000046   0x2101             MOVS     R1,#+1
   \   00000048   0x7001             STRB     R1,[R0, #+0]
    216                break;
    217              }
    218            }
    219          }
   \                     ??Wait_SDRdy_1:
   \   0000004A   0xBD31             POP      {R0,R4,R5,PC}    ;; return
    220          /*********************************************************/
    221          //function:jc_sd_cmd
    222          //description:¸øSD¿¨·¢ËÍÃüÁî
    223          //input: 48¸ö×Ö½Ú£¬Ç°8Î»ÎªCMDÖ¸Áî£¬½Ó×Å32Î»ÎªµØÖ·²ÎÊý£¬
    224          //       ×îºó8Î»ÎªCRCÐ£Ñé£¨¸ÃÄ£Ê½ÔÚSPIÄ£Ê½ÏÂÎÞÐ§£©
    225          /***********************************************************/

   \                                 In section .text, align 4, keep-with-next
    226          byte_sd jc_sd_cmd(byte_sd cmd,dword_sd arg,byte_sd crc)
    227          {
   \                     jc_sd_cmd:
   \   00000000   0xB5F8             PUSH     {R3-R7,LR}
   \   00000002   0x0004             MOVS     R4,R0
   \   00000004   0x000E             MOVS     R6,R1
   \   00000006   0x0017             MOVS     R7,R2
    228            byte_sd r1,i;
    229            word_sd retry=0;
   \   00000008   0x2500             MOVS     R5,#+0
    230           
    231            if(Flag_SDRdy == 0)
   \   0000000A   0x.... 0x....      LDR.W    R0,??DataTable11_18
   \   0000000E   0x7800             LDRB     R0,[R0, #+0]
   \   00000010   0x2800             CMP      R0,#+0
   \   00000012   0xD10B             BNE.N    ??jc_sd_cmd_0
    232            {
    233              Wait_SDRdy(SD_LONG_Wait);
   \   00000014   0x.... 0x....      LDR.W    R0,??DataTable11_21  ;; 0x1e8480
   \   00000018   0x.... 0x....      BL       Wait_SDRdy
    234              OFF_SD_CS;
   \   0000001C   0x.... 0x....      LDR.W    R0,??DataTable11_6  ;; 0x400ff104
   \   00000020   0x6800             LDR      R0,[R0, #+0]
   \   00000022   0xF050 0x0020      ORRS     R0,R0,#0x20
   \   00000026   0x.... 0x....      LDR.W    R1,??DataTable11_6  ;; 0x400ff104
   \   0000002A   0x6008             STR      R0,[R1, #+0]
    235            }
    236           
    237            SD_WriteByte(0xff);
   \                     ??jc_sd_cmd_0:
   \   0000002C   0x20FF             MOVS     R0,#+255
   \   0000002E   0x.... 0x....      BL       SD_WriteByte
    238            ON_SD_CS;
   \   00000032   0x.... 0x....      LDR.W    R0,??DataTable11_22  ;; 0x400ff108
   \   00000036   0x6800             LDR      R0,[R0, #+0]
   \   00000038   0xF050 0x0020      ORRS     R0,R0,#0x20
   \   0000003C   0x.... 0x....      LDR.W    R1,??DataTable11_22  ;; 0x400ff108
   \   00000040   0x6008             STR      R0,[R1, #+0]
    239            SD_WriteByte(0xff);
   \   00000042   0x20FF             MOVS     R0,#+255
   \   00000044   0x.... 0x....      BL       SD_WriteByte
    240            SD_WriteByte(cmd|0x40);
   \   00000048   0xF054 0x0040      ORRS     R0,R4,#0x40
   \   0000004C   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000004E   0x.... 0x....      BL       SD_WriteByte
    241            if(flag_sdhc==0)      /************By Sword************/  
   \   00000052   0x.... 0x....      LDR.W    R0,??DataTable11_23
   \   00000056   0x7800             LDRB     R0,[R0, #+0]
   \   00000058   0x2800             CMP      R0,#+0
   \   0000005A   0xD100             BNE.N    ??jc_sd_cmd_1
    242              arg=arg << 9;  //¶ÔÓÚ·ÇsdhcµÄsd¿¨,¡¢µØÖ·ÊÇÒÔ×Ö½ÚÎªµ¥Î»µÄ
   \   0000005C   0x0276             LSLS     R6,R6,#+9
    243          //¼æÈÝsdhcºÍsd1.0µÄÉèÖÃ   
    244            SD_WriteByte((byte_sd)((arg>>24)&0x0000FF)); //´«ËÍ32Î»µØÖ·
   \                     ??jc_sd_cmd_1:
   \   0000005E   0x0E30             LSRS     R0,R6,#+24
   \   00000060   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000062   0x.... 0x....      BL       SD_WriteByte
    245            SD_WriteByte((byte_sd)((arg>>16)&0x0000FF));
   \   00000066   0x0C30             LSRS     R0,R6,#+16
   \   00000068   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000006A   0x.... 0x....      BL       SD_WriteByte
    246            SD_WriteByte((byte_sd)((arg>>8)&0x0000FF));
   \   0000006E   0x0A30             LSRS     R0,R6,#+8
   \   00000070   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000072   0x.... 0x....      BL       SD_WriteByte
    247            SD_WriteByte((byte_sd)(arg&0x0000FF));
   \   00000076   0x0030             MOVS     R0,R6
   \   00000078   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000007A   0x.... 0x....      BL       SD_WriteByte
    248            SD_WriteByte(crc); 
   \   0000007E   0x0038             MOVS     R0,R7
   \   00000080   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000082   0x.... 0x....      BL       SD_WriteByte
    249            do
    250            {
    251            	r1=SD_ReadByte(0xff);
   \                     ??jc_sd_cmd_2:
   \   00000086   0x20FF             MOVS     R0,#+255
   \   00000088   0x.... 0x....      BL       SD_ReadByte
   \   0000008C   0x0006             MOVS     R6,R0
    252              retry++;
   \   0000008E   0x1C6D             ADDS     R5,R5,#+1
    253              C_WDOG(); //Çå¿ªÃÅ¹· 
   \   00000090   0xB672             CPSID i          
   \   00000092   0x.... 0x....      LDR.W    R0,??DataTable11_19  ;; 0x4005200c
   \   00000096   0xF24A 0x6102      MOVW     R1,#+42498
   \   0000009A   0x8001             STRH     R1,[R0, #+0]
   \   0000009C   0x.... 0x....      LDR.W    R0,??DataTable11_19  ;; 0x4005200c
   \   000000A0   0xF24B 0x4180      MOVW     R1,#+46208
   \   000000A4   0x8001             STRH     R1,[R0, #+0]
   \   000000A6   0x.... 0x....      LDR.W    R0,??DataTable11_20
   \   000000AA   0x7800             LDRB     R0,[R0, #+0]
   \   000000AC   0x2800             CMP      R0,#+0
   \   000000AE   0xD000             BEQ.N    ??jc_sd_cmd_3
   \   000000B0   0xB662             CPSIE i          
    254              if(retry==250) 
   \                     ??jc_sd_cmd_3:
   \   000000B2   0xB2AD             UXTH     R5,R5            ;; ZeroExt  R5,R5,#+16,#+16
   \   000000B4   0x2DFA             CMP      R5,#+250
   \   000000B6   0xD101             BNE.N    ??jc_sd_cmd_4
    255              {
    256                retry=0;
   \   000000B8   0x2500             MOVS     R5,#+0
    257                break;
   \   000000BA   0xE002             B.N      ??jc_sd_cmd_5
    258              }
    259                 
    260            }while(r1==0xff);
   \                     ??jc_sd_cmd_4:
   \   000000BC   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   000000BE   0x2EFF             CMP      R6,#+255
   \   000000C0   0xD0E1             BEQ.N    ??jc_sd_cmd_2
    261            if(cmd==8||cmd==58)   /************By Sword************/  
   \                     ??jc_sd_cmd_5:
   \   000000C2   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   000000C4   0x2C08             CMP      R4,#+8
   \   000000C6   0xD002             BEQ.N    ??jc_sd_cmd_6
   \   000000C8   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   000000CA   0x2C3A             CMP      R4,#+58
   \   000000CC   0xD10C             BNE.N    ??jc_sd_cmd_7
    262              for(i=0;i<4;i++) resp_sd[i]=SD_ReadByte(0xff);   
   \                     ??jc_sd_cmd_6:
   \   000000CE   0x2400             MOVS     R4,#+0
   \   000000D0   0xE007             B.N      ??jc_sd_cmd_8
   \                     ??jc_sd_cmd_9:
   \   000000D2   0x20FF             MOVS     R0,#+255
   \   000000D4   0x.... 0x....      BL       SD_ReadByte
   \   000000D8   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   000000DA   0x.... 0x....      LDR.W    R1,??DataTable11_24
   \   000000DE   0x5460             STRB     R0,[R4, R1]
   \   000000E0   0x1C64             ADDS     R4,R4,#+1
   \                     ??jc_sd_cmd_8:
   \   000000E2   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   000000E4   0x2C04             CMP      R4,#+4
   \   000000E6   0xD3F4             BCC.N    ??jc_sd_cmd_9
    263          //¶ÁÈ¡sdhc¿¨µÄÏà¹ØÐÅÏ¢ 
    264            OFF_SD_CS;
   \                     ??jc_sd_cmd_7:
   \   000000E8   0x....             LDR.N    R0,??DataTable11_6  ;; 0x400ff104
   \   000000EA   0x6800             LDR      R0,[R0, #+0]
   \   000000EC   0xF050 0x0020      ORRS     R0,R0,#0x20
   \   000000F0   0x....             LDR.N    R1,??DataTable11_6  ;; 0x400ff104
   \   000000F2   0x6008             STR      R0,[R1, #+0]
    265            SD_WriteByte(0xff);
   \   000000F4   0x20FF             MOVS     R0,#+255
   \   000000F6   0x.... 0x....      BL       SD_WriteByte
    266            return(r1);
   \   000000FA   0x0030             MOVS     R0,R6
   \   000000FC   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000000FE   0xBDF2             POP      {R1,R4-R7,PC}    ;; return
    267          }
    268          /*********************************************************/
    269          //function: sd_init
    270          //description:sd¿¨³õÊ¼»¯º¯Êý
    271          /***********************************************************/

   \                                 In section .text, align 4, keep-with-next
    272          byte_sd sd_init(void)
    273          {
   \                     sd_init:
   \   00000000   0xB538             PUSH     {R3-R5,LR}
    274            byte_sd i=0,r1=0;
   \   00000002   0x2500             MOVS     R5,#+0
   \   00000004   0x2000             MOVS     R0,#+0
    275            word_sd retry=0;
   \   00000006   0x2400             MOVS     R4,#+0
    276            for(i=0;i<10;i++)
   \   00000008   0x2100             MOVS     R1,#+0
   \   0000000A   0x000D             MOVS     R5,R1
   \   0000000C   0xE003             B.N      ??sd_init_0
    277              SD_WriteByte(0xFF);//µÈ´ý74¸öÊ±ÖÓÖÜÆÚ£¬sd¹¤×÷µçÑ¹ÉýÖÁÕý³£Öµ
   \                     ??sd_init_1:
   \   0000000E   0x20FF             MOVS     R0,#+255
   \   00000010   0x.... 0x....      BL       SD_WriteByte
   \   00000014   0x1C6D             ADDS     R5,R5,#+1
   \                     ??sd_init_0:
   \   00000016   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   00000018   0x2D0A             CMP      R5,#+10
   \   0000001A   0xD3F8             BCC.N    ??sd_init_1
    278            
    279            flag_sdhc=1; //ÏÈÄ¬ÈÏÎªsdhc¿¨
   \   0000001C   0x....             LDR.N    R0,??DataTable11_23
   \   0000001E   0x2101             MOVS     R1,#+1
   \   00000020   0x7001             STRB     R1,[R0, #+0]
    280            
    281            do
    282             {
    283                //·¢ËÍCMD0£¬ÈÃSD¿¨½øÈëIDLE×´Ì¬
    284                r1 = jc_sd_cmd(0,0,0x95);
   \                     ??sd_init_2:
   \   00000022   0x2295             MOVS     R2,#+149
   \   00000024   0x2100             MOVS     R1,#+0
   \   00000026   0x2000             MOVS     R0,#+0
   \   00000028   0x.... 0x....      BL       jc_sd_cmd
    285                retry++;
   \   0000002C   0x1C64             ADDS     R4,R4,#+1
    286                C_WDOG(); //Çå¿ªÃÅ¹·
   \   0000002E   0xB672             CPSID i          
   \   00000030   0x....             LDR.N    R1,??DataTable11_19  ;; 0x4005200c
   \   00000032   0xF24A 0x6202      MOVW     R2,#+42498
   \   00000036   0x800A             STRH     R2,[R1, #+0]
   \   00000038   0x....             LDR.N    R1,??DataTable11_19  ;; 0x4005200c
   \   0000003A   0xF24B 0x4280      MOVW     R2,#+46208
   \   0000003E   0x800A             STRH     R2,[R1, #+0]
   \   00000040   0x....             LDR.N    R1,??DataTable11_20
   \   00000042   0x7809             LDRB     R1,[R1, #+0]
   \   00000044   0x2900             CMP      R1,#+0
   \   00000046   0xD000             BEQ.N    ??sd_init_3
   \   00000048   0xB662             CPSIE i          
    287             } while ((r1 != 0x01) && (retry < 100));
   \                     ??sd_init_3:
   \   0000004A   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000004C   0x2801             CMP      R0,#+1
   \   0000004E   0xD002             BEQ.N    ??sd_init_4
   \   00000050   0xB2A4             UXTH     R4,R4            ;; ZeroExt  R4,R4,#+16,#+16
   \   00000052   0x2C64             CMP      R4,#+100
   \   00000054   0xD3E5             BCC.N    ??sd_init_2
    288            if (retry==100) 
   \                     ??sd_init_4:
   \   00000056   0xB2A4             UXTH     R4,R4            ;; ZeroExt  R4,R4,#+16,#+16
   \   00000058   0x2C64             CMP      R4,#+100
   \   0000005A   0xD104             BNE.N    ??sd_init_5
    289             {          //·¢ËÍCMD0³ö´í
    290               flag_err_sd=SDERR_CMD0;
   \   0000005C   0x....             LDR.N    R0,??DataTable11_25
   \   0000005E   0x2101             MOVS     R1,#+1
   \   00000060   0x7001             STRB     R1,[R0, #+0]
    291               return 1; 
   \   00000062   0x2001             MOVS     R0,#+1
   \   00000064   0xE052             B.N      ??sd_init_6
    292             }
    293            retry=0;
   \                     ??sd_init_5:
   \   00000066   0x2400             MOVS     R4,#+0
    294           
    295            //³õ²½È·ÈÏÊÇSDHC»¹ÊÇSD1.0
    296            r1=jc_sd_cmd(8,0x1aa,0x87);
   \   00000068   0x2287             MOVS     R2,#+135
   \   0000006A   0xF44F 0x71D5      MOV      R1,#+426
   \   0000006E   0x2008             MOVS     R0,#+8
   \   00000070   0x.... 0x....      BL       jc_sd_cmd
    297            if(r1!=0x01||resp_sd[2]!=1||resp_sd[3]!=170) flag_sdhc=0;
   \   00000074   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000076   0x2801             CMP      R0,#+1
   \   00000078   0xD107             BNE.N    ??sd_init_7
   \   0000007A   0x....             LDR.N    R0,??DataTable11_24
   \   0000007C   0x7880             LDRB     R0,[R0, #+2]
   \   0000007E   0x2801             CMP      R0,#+1
   \   00000080   0xD103             BNE.N    ??sd_init_7
   \   00000082   0x....             LDR.N    R0,??DataTable11_24
   \   00000084   0x78C0             LDRB     R0,[R0, #+3]
   \   00000086   0x28AA             CMP      R0,#+170
   \   00000088   0xD002             BEQ.N    ??sd_init_8
   \                     ??sd_init_7:
   \   0000008A   0x....             LDR.N    R0,??DataTable11_23
   \   0000008C   0x2100             MOVS     R1,#+0
   \   0000008E   0x7001             STRB     R1,[R0, #+0]
    298           /************By Sword************/ 
    299             
    300            retry=0;
   \                     ??sd_init_8:
   \   00000090   0x2400             MOVS     R4,#+0
    301            //·¢ËÍcmd55+acmd41Ê¹sd¿¨¹¤×÷ÔÚspiÄ£Ê½
    302            do
    303             {
    304                r1=jc_sd_cmd(55,0,0xff);
   \                     ??sd_init_9:
   \   00000092   0x22FF             MOVS     R2,#+255
   \   00000094   0x2100             MOVS     R1,#+0
   \   00000096   0x2037             MOVS     R0,#+55
   \   00000098   0x.... 0x....      BL       jc_sd_cmd
    305                if(r1==0x01)
   \   0000009C   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000009E   0x2801             CMP      R0,#+1
   \   000000A0   0xD106             BNE.N    ??sd_init_10
    306                  r1=jc_sd_cmd(41,((dword_sd)flag_sdhc)<<30,0xff);
   \   000000A2   0x22FF             MOVS     R2,#+255
   \   000000A4   0x....             LDR.N    R0,??DataTable11_23
   \   000000A6   0x7800             LDRB     R0,[R0, #+0]
   \   000000A8   0x0781             LSLS     R1,R0,#+30
   \   000000AA   0x2029             MOVS     R0,#+41
   \   000000AC   0x.... 0x....      BL       jc_sd_cmd
    307                retry++;
   \                     ??sd_init_10:
   \   000000B0   0x1C64             ADDS     R4,R4,#+1
    308                C_WDOG(); //Çå¿ªÃÅ¹· 
   \   000000B2   0xB672             CPSID i          
   \   000000B4   0x....             LDR.N    R1,??DataTable11_19  ;; 0x4005200c
   \   000000B6   0xF24A 0x6202      MOVW     R2,#+42498
   \   000000BA   0x800A             STRH     R2,[R1, #+0]
   \   000000BC   0x....             LDR.N    R1,??DataTable11_19  ;; 0x4005200c
   \   000000BE   0xF24B 0x4280      MOVW     R2,#+46208
   \   000000C2   0x800A             STRH     R2,[R1, #+0]
   \   000000C4   0x....             LDR.N    R1,??DataTable11_20
   \   000000C6   0x7809             LDRB     R1,[R1, #+0]
   \   000000C8   0x2900             CMP      R1,#+0
   \   000000CA   0xD000             BEQ.N    ??sd_init_11
   \   000000CC   0xB662             CPSIE i          
    309             } while ((r1 != 0x00) && (retry < 100));
   \                     ??sd_init_11:
   \   000000CE   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000000D0   0x2800             CMP      R0,#+0
   \   000000D2   0xD002             BEQ.N    ??sd_init_12
   \   000000D4   0xB2A4             UXTH     R4,R4            ;; ZeroExt  R4,R4,#+16,#+16
   \   000000D6   0x2C64             CMP      R4,#+100
   \   000000D8   0xD3DB             BCC.N    ??sd_init_9
    310            
    311            if(retry>=100)
   \                     ??sd_init_12:
   \   000000DA   0xB2A4             UXTH     R4,R4            ;; ZeroExt  R4,R4,#+16,#+16
   \   000000DC   0x2C64             CMP      R4,#+100
   \   000000DE   0xD304             BCC.N    ??sd_init_13
    312             {       //·¢ËÍACMD41Ö¸ÁîÊ±³ö´í
    313               flag_err_sd=SDERR_ACMD41; 
   \   000000E0   0x....             LDR.N    R0,??DataTable11_25
   \   000000E2   0x2102             MOVS     R1,#+2
   \   000000E4   0x7001             STRB     R1,[R0, #+0]
    314               return 1;
   \   000000E6   0x2001             MOVS     R0,#+1
   \   000000E8   0xE010             B.N      ??sd_init_6
    315             }
    316             
    317            if(flag_sdhc) 
   \                     ??sd_init_13:
   \   000000EA   0x....             LDR.N    R0,??DataTable11_23
   \   000000EC   0x7800             LDRB     R0,[R0, #+0]
   \   000000EE   0x2800             CMP      R0,#+0
   \   000000F0   0xD00B             BEQ.N    ??sd_init_14
    318             {
    319               (void)jc_sd_cmd(58,0,0xff);      //×îÖÕÈ·ÈÏÊÇ·ñÊÇsdhc¿¨
   \   000000F2   0x22FF             MOVS     R2,#+255
   \   000000F4   0x2100             MOVS     R1,#+0
   \   000000F6   0x203A             MOVS     R0,#+58
   \   000000F8   0x.... 0x....      BL       jc_sd_cmd
    320               if((resp_sd[0]&0x40)==0) flag_sdhc=0; 
   \   000000FC   0x....             LDR.N    R1,??DataTable11_24
   \   000000FE   0x7809             LDRB     R1,[R1, #+0]
   \   00000100   0x0649             LSLS     R1,R1,#+25
   \   00000102   0xD402             BMI.N    ??sd_init_14
   \   00000104   0x....             LDR.N    R0,??DataTable11_23
   \   00000106   0x2100             MOVS     R1,#+0
   \   00000108   0x7001             STRB     R1,[R0, #+0]
    321             }
    322           /************By Sword************/   
    323          
    324            return 0;
   \                     ??sd_init_14:
   \   0000010A   0x2000             MOVS     R0,#+0
   \                     ??sd_init_6:
   \   0000010C   0xBD32             POP      {R1,R4,R5,PC}    ;; return
    325          }
    326          /*********************************************************/
    327          //function:sd_rdata
    328          //description:´Ósd¿¨¶ÁÈ¡Ö¸¶¨³¤¶ÈÊý¾Ý
    329          /***********************************************************/

   \                                 In section .text, align 4, keep-with-next
    330          byte_sd sd_rdata(byte_sd * data,word_sd len)
    331          {
   \                     sd_rdata:
   \   00000000   0xB570             PUSH     {R4-R6,LR}
   \   00000002   0x0004             MOVS     R4,R0
   \   00000004   0x000D             MOVS     R5,R1
    332            byte_sd r1=0;
   \   00000006   0x2000             MOVS     R0,#+0
    333            word_sd retry=0;
   \   00000008   0x2600             MOVS     R6,#+0
    334            /************By Sword************/  
    335           //Ô­ÏÈretryÎªbyte_sdÐÍ  
    336            ON_SD_CS;
   \   0000000A   0x....             LDR.N    R1,??DataTable11_22  ;; 0x400ff108
   \   0000000C   0x6809             LDR      R1,[R1, #+0]
   \   0000000E   0xF051 0x0120      ORRS     R1,R1,#0x20
   \   00000012   0x....             LDR.N    R2,??DataTable11_22  ;; 0x400ff108
   \   00000014   0x6011             STR      R1,[R2, #+0]
    337            do
    338            {
    339              r1=SD_ReadByte(0xff);
   \                     ??sd_rdata_0:
   \   00000016   0x20FF             MOVS     R0,#+255
   \   00000018   0x.... 0x....      BL       SD_ReadByte
    340              retry++;
   \   0000001C   0x1C76             ADDS     R6,R6,#+1
    341            }while(r1!=0xfe&&retry<500);
   \   0000001E   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000020   0x28FE             CMP      R0,#+254
   \   00000022   0xD004             BEQ.N    ??sd_rdata_1
   \   00000024   0xF44F 0x71FA      MOV      R1,#+500
   \   00000028   0xB2B6             UXTH     R6,R6            ;; ZeroExt  R6,R6,#+16,#+16
   \   0000002A   0x428E             CMP      R6,R1
   \   0000002C   0xD3F3             BCC.N    ??sd_rdata_0
    342            if(retry>=500) return r1;
   \                     ??sd_rdata_1:
   \   0000002E   0xF44F 0x71FA      MOV      R1,#+500
   \   00000032   0xB2B6             UXTH     R6,R6            ;; ZeroExt  R6,R6,#+16,#+16
   \   00000034   0x428E             CMP      R6,R1
   \   00000036   0xD301             BCC.N    ??sd_rdata_2
   \   00000038   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000003A   0xE029             B.N      ??sd_rdata_3
    343          /************By Sword************/  
    344           //Ô­ÏÈÎªretry<200£¬Ð¡ÓÚ200µÄÊ±¼äÌ«¶Ì,ºÜ¶àµÍ¶ËµÄ¿¨¶Á²»³öÀ´
    345           //£¡£¡£¡£¡£¡£¡£¡£¡£¡£¡£¡  
    346            retry=0;
   \                     ??sd_rdata_2:
   \   0000003C   0x2600             MOVS     R6,#+0
   \   0000003E   0xE012             B.N      ??sd_rdata_4
    347            while(len--)
    348            {
    349            	C_WDOG(); //Çå¿ªÃÅ¹· 
   \                     ??sd_rdata_5:
   \   00000040   0xB672             CPSID i          
   \   00000042   0x....             LDR.N    R0,??DataTable11_19  ;; 0x4005200c
   \   00000044   0xF24A 0x6102      MOVW     R1,#+42498
   \   00000048   0x8001             STRH     R1,[R0, #+0]
   \   0000004A   0x....             LDR.N    R0,??DataTable11_19  ;; 0x4005200c
   \   0000004C   0xF24B 0x4180      MOVW     R1,#+46208
   \   00000050   0x8001             STRH     R1,[R0, #+0]
   \   00000052   0x....             LDR.N    R0,??DataTable11_20
   \   00000054   0x7800             LDRB     R0,[R0, #+0]
   \   00000056   0x2800             CMP      R0,#+0
   \   00000058   0xD000             BEQ.N    ??sd_rdata_6
   \   0000005A   0xB662             CPSIE i          
    350              *data=SD_ReadByte(0xff);
   \                     ??sd_rdata_6:
   \   0000005C   0x20FF             MOVS     R0,#+255
   \   0000005E   0x.... 0x....      BL       SD_ReadByte
   \   00000062   0x7020             STRB     R0,[R4, #+0]
    351              data++;
   \   00000064   0x1C64             ADDS     R4,R4,#+1
    352            }
   \                     ??sd_rdata_4:
   \   00000066   0x0028             MOVS     R0,R5
   \   00000068   0x1E45             SUBS     R5,R0,#+1
   \   0000006A   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   0000006C   0x2800             CMP      R0,#+0
   \   0000006E   0xD1E7             BNE.N    ??sd_rdata_5
    353            SD_WriteByte(0xff);    //ÕâÁ½¾äÊÇ¶ÁÎ±Ö¸Áî
   \   00000070   0x20FF             MOVS     R0,#+255
   \   00000072   0x.... 0x....      BL       SD_WriteByte
    354            SD_WriteByte(0xff);
   \   00000076   0x20FF             MOVS     R0,#+255
   \   00000078   0x.... 0x....      BL       SD_WriteByte
    355            OFF_SD_CS;
   \   0000007C   0x....             LDR.N    R0,??DataTable11_6  ;; 0x400ff104
   \   0000007E   0x6800             LDR      R0,[R0, #+0]
   \   00000080   0xF050 0x0020      ORRS     R0,R0,#0x20
   \   00000084   0x....             LDR.N    R1,??DataTable11_6  ;; 0x400ff104
   \   00000086   0x6008             STR      R0,[R1, #+0]
    356            SD_WriteByte(0xff);
   \   00000088   0x20FF             MOVS     R0,#+255
   \   0000008A   0x.... 0x....      BL       SD_WriteByte
    357            return 0;
   \   0000008E   0x2000             MOVS     R0,#+0
   \                     ??sd_rdata_3:
   \   00000090   0xBD70             POP      {R4-R6,PC}       ;; return
    358          }
    359          /*********************************************************/
    360          //function:sd_readsingleblock
    361          //description:sd¿¨¶ÁÈ¡µ¥¿éÊý¾Ý£¨Ò»°ãÎª512×Ö½Ú£©
    362          //input: data   ´æ·ÅÊý¾ÝµÄÊý×éÊ×µØÖ·
    363          //       sector ÉÈÇøºÅ£¨×¢ÒâÎªÎïÀíÉÈÇøºÅ£¡£¡£©
    364          /***********************************************************/

   \                                 In section .text, align 2, keep-with-next
    365          byte_sd sd_readsingleblock(byte_sd * data,dword_sd sector)
    366          {
   \                     sd_readsingleblock:
   \   00000000   0xB570             PUSH     {R4-R6,LR}
   \   00000002   0x0004             MOVS     R4,R0
   \   00000004   0x000D             MOVS     R5,R1
    367             byte_sd r1=0;
   \   00000006   0x2000             MOVS     R0,#+0
    368             word_sd retry=0;
   \   00000008   0x2600             MOVS     R6,#+0
    369             
    370             if(Flag_SDRdy == 0)
   \   0000000A   0x....             LDR.N    R1,??DataTable11_18
   \   0000000C   0x7809             LDRB     R1,[R1, #+0]
   \   0000000E   0x2900             CMP      R1,#+0
   \   00000010   0xD108             BNE.N    ??sd_readsingleblock_0
    371             {
    372               Wait_SDRdy(SD_LONG_Wait);
   \   00000012   0x....             LDR.N    R0,??DataTable11_21  ;; 0x1e8480
   \   00000014   0x.... 0x....      BL       Wait_SDRdy
    373               OFF_SD_CS;
   \   00000018   0x....             LDR.N    R0,??DataTable11_6  ;; 0x400ff104
   \   0000001A   0x6800             LDR      R0,[R0, #+0]
   \   0000001C   0xF050 0x0020      ORRS     R0,R0,#0x20
   \   00000020   0x....             LDR.N    R1,??DataTable11_6  ;; 0x400ff104
   \   00000022   0x6008             STR      R0,[R1, #+0]
    374             }
    375             
    376           /************By Sword************/  
    377           //Ô­ÏÈretryÎªbyte_sdÐÍ  
    378             do
    379             {
    380              r1=jc_sd_cmd(17,sector,0);
   \                     ??sd_readsingleblock_0:
   \   00000024   0x2200             MOVS     R2,#+0
   \   00000026   0x0029             MOVS     R1,R5
   \   00000028   0x2011             MOVS     R0,#+17
   \   0000002A   0x.... 0x....      BL       jc_sd_cmd
    381              retry++;
   \   0000002E   0x1C76             ADDS     R6,R6,#+1
    382             } while(r1!=0&&retry<200);
   \   00000030   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000032   0x2800             CMP      R0,#+0
   \   00000034   0xD002             BEQ.N    ??sd_readsingleblock_1
   \   00000036   0xB2B6             UXTH     R6,R6            ;; ZeroExt  R6,R6,#+16,#+16
   \   00000038   0x2EC8             CMP      R6,#+200
   \   0000003A   0xD3F3             BCC.N    ??sd_readsingleblock_0
    383             if(retry>=200) return r1;
   \                     ??sd_readsingleblock_1:
   \   0000003C   0xB2B6             UXTH     R6,R6            ;; ZeroExt  R6,R6,#+16,#+16
   \   0000003E   0x2EC8             CMP      R6,#+200
   \   00000040   0xD301             BCC.N    ??sd_readsingleblock_2
   \   00000042   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000044   0xE00B             B.N      ??sd_readsingleblock_3
    384           /************By Sword************/  
    385           //BUG£¡£¡£¡£¡£¬Ô­À´ÊÇr1==200 £¡£¡£¡ 
    386             retry=0;
   \                     ??sd_readsingleblock_2:
   \   00000046   0x2600             MOVS     R6,#+0
    387             r1=sd_rdata(data,512);
   \   00000048   0xF44F 0x7100      MOV      R1,#+512
   \   0000004C   0x0020             MOVS     R0,R4
   \   0000004E   0x.... 0x....      BL       sd_rdata
    388             if(r1!=0) return r1;
   \   00000052   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000054   0x2800             CMP      R0,#+0
   \   00000056   0xD001             BEQ.N    ??sd_readsingleblock_4
   \   00000058   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000005A   0xE000             B.N      ??sd_readsingleblock_3
    389             else return 0; 
   \                     ??sd_readsingleblock_4:
   \   0000005C   0x2000             MOVS     R0,#+0
   \                     ??sd_readsingleblock_3:
   \   0000005E   0xBD70             POP      {R4-R6,PC}       ;; return
    390          } 
    391          /*********************************************************/
    392          //function:sd_writesingleblock
    393          //description:sd¿¨Ð´µ¥¿éÊý¾Ý
    394          //input:Ô¤ÁôramÇøµÄÖ¸Õë£¬ÉÈÇøºÅ£¨×¢ÒâÎªÎïÀíÉÈÇøºÅ£©
    395          /***********************************************************/

   \                                 In section .text, align 4, keep-with-next
    396          byte_sd sd_writesingleblock(byte_sd *data,dword_sd sector)
    397          {
   \                     sd_writesingleblock:
   \   00000000   0xB570             PUSH     {R4-R6,LR}
   \   00000002   0x0004             MOVS     R4,R0
   \   00000004   0x000D             MOVS     R5,R1
    398          	byte_sd r1=0;
   \   00000006   0x2000             MOVS     R0,#+0
    399          	dword_sd i=0;
   \   00000008   0x2600             MOVS     R6,#+0
    400            
    401            if(Flag_SDRdy == 0)
   \   0000000A   0x....             LDR.N    R1,??DataTable11_18
   \   0000000C   0x7809             LDRB     R1,[R1, #+0]
   \   0000000E   0x2900             CMP      R1,#+0
   \   00000010   0xD108             BNE.N    ??sd_writesingleblock_0
    402            {
    403              Wait_SDRdy(SD_LONG_Wait);
   \   00000012   0x....             LDR.N    R0,??DataTable11_21  ;; 0x1e8480
   \   00000014   0x.... 0x....      BL       Wait_SDRdy
    404              OFF_SD_CS;
   \   00000018   0x....             LDR.N    R0,??DataTable11_6  ;; 0x400ff104
   \   0000001A   0x6800             LDR      R0,[R0, #+0]
   \   0000001C   0xF050 0x0020      ORRS     R0,R0,#0x20
   \   00000020   0x....             LDR.N    R1,??DataTable11_6  ;; 0x400ff104
   \   00000022   0x6008             STR      R0,[R1, #+0]
    405            }
    406            
    407            r1=jc_sd_cmd(24,sector,0);
   \                     ??sd_writesingleblock_0:
   \   00000024   0x2200             MOVS     R2,#+0
   \   00000026   0x0029             MOVS     R1,R5
   \   00000028   0x2018             MOVS     R0,#+24
   \   0000002A   0x.... 0x....      BL       jc_sd_cmd
    408            
    409            if(r1!=0) return r1;
   \   0000002E   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000030   0x2800             CMP      R0,#+0
   \   00000032   0xD001             BEQ.N    ??sd_writesingleblock_1
   \   00000034   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000036   0xE044             B.N      ??sd_writesingleblock_2
    410            ON_SD_CS;
   \                     ??sd_writesingleblock_1:
   \   00000038   0x....             LDR.N    R0,??DataTable11_22  ;; 0x400ff108
   \   0000003A   0x6800             LDR      R0,[R0, #+0]
   \   0000003C   0xF050 0x0020      ORRS     R0,R0,#0x20
   \   00000040   0x....             LDR.N    R1,??DataTable11_22  ;; 0x400ff108
   \   00000042   0x6008             STR      R0,[R1, #+0]
    411            SD_WriteByte(0xff);//ÏÈ·¢Èý¸ö¿ÕÊý¾ÝµÈ´ýsd¿¨×¼±¸ºÃ
   \   00000044   0x20FF             MOVS     R0,#+255
   \   00000046   0x.... 0x....      BL       SD_WriteByte
    412            SD_WriteByte(0xff);
   \   0000004A   0x20FF             MOVS     R0,#+255
   \   0000004C   0x.... 0x....      BL       SD_WriteByte
    413            SD_WriteByte(0xff);
   \   00000050   0x20FF             MOVS     R0,#+255
   \   00000052   0x.... 0x....      BL       SD_WriteByte
    414            SD_WriteByte(0xfe);//·¢ËÍÆðÊ¼ÁîÅÆ
   \   00000056   0x20FE             MOVS     R0,#+254
   \   00000058   0x.... 0x....      BL       SD_WriteByte
    415            for(i=0;i<512;i++)
   \   0000005C   0x2600             MOVS     R6,#+0
   \   0000005E   0xE012             B.N      ??sd_writesingleblock_3
    416            {
    417              C_WDOG(); //Çå¿ªÃÅ¹· 
   \                     ??sd_writesingleblock_4:
   \   00000060   0xB672             CPSID i          
   \   00000062   0x....             LDR.N    R0,??DataTable11_19  ;; 0x4005200c
   \   00000064   0xF24A 0x6102      MOVW     R1,#+42498
   \   00000068   0x8001             STRH     R1,[R0, #+0]
   \   0000006A   0x....             LDR.N    R0,??DataTable11_19  ;; 0x4005200c
   \   0000006C   0xF24B 0x4180      MOVW     R1,#+46208
   \   00000070   0x8001             STRH     R1,[R0, #+0]
   \   00000072   0x....             LDR.N    R0,??DataTable11_20
   \   00000074   0x7800             LDRB     R0,[R0, #+0]
   \   00000076   0x2800             CMP      R0,#+0
   \   00000078   0xD000             BEQ.N    ??sd_writesingleblock_5
   \   0000007A   0xB662             CPSIE i          
    418              SD_WriteByte(*data++);
   \                     ??sd_writesingleblock_5:
   \   0000007C   0x7820             LDRB     R0,[R4, #+0]
   \   0000007E   0x.... 0x....      BL       SD_WriteByte
   \   00000082   0x1C64             ADDS     R4,R4,#+1
    419            } 
   \   00000084   0x1C76             ADDS     R6,R6,#+1
   \                     ??sd_writesingleblock_3:
   \   00000086   0xF44F 0x7000      MOV      R0,#+512
   \   0000008A   0x4286             CMP      R6,R0
   \   0000008C   0xD3E8             BCC.N    ??sd_writesingleblock_4
    420              
    421            SD_WriteByte(0xff);
   \   0000008E   0x20FF             MOVS     R0,#+255
   \   00000090   0x.... 0x....      BL       SD_WriteByte
    422            SD_WriteByte(0xff);
   \   00000094   0x20FF             MOVS     R0,#+255
   \   00000096   0x.... 0x....      BL       SD_WriteByte
    423            r1=SD_ReadByte(0xff);
   \   0000009A   0x20FF             MOVS     R0,#+255
   \   0000009C   0x.... 0x....      BL       SD_ReadByte
    424            if((r1&0x1f)!=0x05) 
   \   000000A0   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000000A2   0xF010 0x011F      ANDS     R1,R0,#0x1F
   \   000000A6   0x2905             CMP      R1,#+5
   \   000000A8   0xD007             BEQ.N    ??sd_writesingleblock_6
    425            {
    426              OFF_SD_CS;
   \   000000AA   0x....             LDR.N    R1,??DataTable11_6  ;; 0x400ff104
   \   000000AC   0x6809             LDR      R1,[R1, #+0]
   \   000000AE   0xF051 0x0120      ORRS     R1,R1,#0x20
   \   000000B2   0x....             LDR.N    R2,??DataTable11_6  ;; 0x400ff104
   \   000000B4   0x6011             STR      R1,[R2, #+0]
    427              return (r1 | 0);
   \   000000B6   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000000B8   0xE003             B.N      ??sd_writesingleblock_2
    428            }
    429            else
    430            { //·¢ËÍÍêÊý¾Ýºó²¢²»µÈ´ýSD¿¨Ð´ºÃ,¶øÊÇÔÚÏÂÒ»´ÎÐ´Êý¾ÝÊ±ÔÙµÈ´ý
    431              Flag_SDRdy=0;
   \                     ??sd_writesingleblock_6:
   \   000000BA   0x....             LDR.N    R0,??DataTable11_18
   \   000000BC   0x2100             MOVS     R1,#+0
   \   000000BE   0x7001             STRB     R1,[R0, #+0]
    432              return 0; 
   \   000000C0   0x2000             MOVS     R0,#+0
   \                     ??sd_writesingleblock_2:
   \   000000C2   0xBD70             POP      {R4-R6,PC}       ;; return
    433            }
    434          }

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11:
   \   00000000   0x4002D02C         DC32     0x4002d02c

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_1:
   \   00000000   0x4002D000         DC32     0x4002d000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_2:
   \   00000000   0xFFFFBFFE         DC32     0xffffbffe

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_3:
   \   00000000   0x4002D034         DC32     0x4002d034

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_4:
   \   00000000   0x4002D038         DC32     0x4002d038

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_5:
   \   00000000   0x........         DC32     sd_yes

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_6:
   \   00000000   0x400FF104         DC32     0x400ff104

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_7:
   \   00000000   0x4004803C         DC32     0x4004803c

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_8:
   \   00000000   0x4002D00C         DC32     0x4002d00c

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_9:
   \   00000000   0x7FFCFFF0         DC32     0x7ffcfff0

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_10:
   \   00000000   0x4004D000         DC32     0x4004d000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_11:
   \   00000000   0x4004D004         DC32     0x4004d004

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_12:
   \   00000000   0x4004D008         DC32     0x4004d008

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_13:
   \   00000000   0x4004D00C         DC32     0x4004d00c

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_14:
   \   00000000   0x4004D014         DC32     0x4004d014

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_15:
   \   00000000   0x400FF114         DC32     0x400ff114

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_16:
   \   00000000   0x801F0000         DC32     0x801f0000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_17:
   \   00000000   0x4002D030         DC32     0x4002d030

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_18:
   \   00000000   0x........         DC32     Flag_SDRdy

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_19:
   \   00000000   0x4005200C         DC32     0x4005200c

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_20:
   \   00000000   0x........         DC32     sd_initover

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_21:
   \   00000000   0x001E8480         DC32     0x1e8480

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_22:
   \   00000000   0x400FF108         DC32     0x400ff108

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_23:
   \   00000000   0x........         DC32     flag_sdhc

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_24:
   \   00000000   0x........         DC32     resp_sd

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_25:
   \   00000000   0x........         DC32     flag_err_sd
    435          
    436          #endif    

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
        0  CloseSD
        0  SD_Delay_ReadByte
        8  SD_ReadByte
              8 -> SD_Delay_ReadByte
        0  SD_WriteByte
        0  SD_driver_Init
        0  SetSD_High
        0  SetSD_Low
       16  Wait_SDRdy
             16 -> SD_ReadByte
       24  jc_sd_cmd
             24 -> SD_ReadByte
             24 -> SD_WriteByte
             24 -> Wait_SDRdy
       16  sd_init
             16 -> SD_WriteByte
             16 -> jc_sd_cmd
       16  sd_rdata
             16 -> SD_ReadByte
             16 -> SD_WriteByte
       16  sd_readsingleblock
             16 -> Wait_SDRdy
             16 -> jc_sd_cmd
             16 -> sd_rdata
       16  sd_writesingleblock
             16 -> SD_ReadByte
             16 -> SD_WriteByte
             16 -> Wait_SDRdy
             16 -> jc_sd_cmd


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable11
       4  ??DataTable11_1
       4  ??DataTable11_10
       4  ??DataTable11_11
       4  ??DataTable11_12
       4  ??DataTable11_13
       4  ??DataTable11_14
       4  ??DataTable11_15
       4  ??DataTable11_16
       4  ??DataTable11_17
       4  ??DataTable11_18
       4  ??DataTable11_19
       4  ??DataTable11_2
       4  ??DataTable11_20
       4  ??DataTable11_21
       4  ??DataTable11_22
       4  ??DataTable11_23
       4  ??DataTable11_24
       4  ??DataTable11_25
       4  ??DataTable11_3
       4  ??DataTable11_4
       4  ??DataTable11_5
       4  ??DataTable11_6
       4  ??DataTable11_7
       4  ??DataTable11_8
       4  ??DataTable11_9
      42  CloseSD
       1  Flag_SDRdy
     102  SD_Delay_ReadByte
     104  SD_ReadByte
      90  SD_WriteByte
     144  SD_driver_Init
      36  SetSD_High
      40  SetSD_Low
      76  Wait_SDRdy
       1  flag_err_sd
       1  flag_sdhc
       1  flag_test_sd
     256  jc_sd_cmd
       4  resp_sd
     270  sd_init
       1  sd_initover
     146  sd_rdata
      96  sd_readsingleblock
     196  sd_writesingleblock
       1  sd_yes

 
    10 bytes in section .bss
 1 702 bytes in section .text
 
 1 702 bytes of CODE memory
    10 bytes of DATA memory

Errors: none
Warnings: none
