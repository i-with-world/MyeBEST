###############################################################################
#                                                                             #
#                                                       22/Jul/2015  10:59:25 #
# IAR ANSI C/C++ Compiler V6.30.6.23336/W32 EVALUATION for ARM                #
# Copyright 1999-2012 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  thumb                                                    #
#    Endian       =  little                                                   #
#    Source file  =  C:\Users\dong\Desktop\7ÔÂ20ºÅ×îºó+Ê®×ÖÍäÊ¶±ð\ZLG7290\key #
#                    _7290.c                                                  #
#    Command line =  C:\Users\dong\Desktop\7ÔÂ20ºÅ×îºó+Ê®×ÖÍäÊ¶±ð\ZLG7290\key #
#                    _7290.c -D IAR -lCN C:\Users\dong\Desktop\7ÔÂ20ºÅ×îºó+Ê® #
#                    ×ÖÍäÊ¶±ð\Flash_512K\List\ -lB                            #
#                    C:\Users\dong\Desktop\7ÔÂ20ºÅ×îºó+Ê®×ÖÍäÊ¶±ð\Flash_512K\ #
#                    List\ -o C:\Users\dong\Desktop\7ÔÂ20ºÅ×îºó+Ê®×ÖÍäÊ¶±ð\Fl #
#                    ash_512K\Obj\ --no_cse --no_unroll --no_inline           #
#                    --no_code_motion --no_tbaa --no_clustering               #
#                    --no_scheduling --debug --endian=little --cpu=Cortex-M4  #
#                    -e --char_is_signed --fpu=None --dlib_config             #
#                    "C:\Program Files\IAR Systems\Embedded Workbench 6.0     #
#                    Evaluation\arm\INC\c\DLib_Config_Normal.h" -I            #
#                    C:\Users\dong\Desktop\7ÔÂ20ºÅ×îºó+Ê®×ÖÍäÊ¶±ð\Library\CPU #
#                    \ -I C:\Users\dong\Desktop\7ÔÂ20ºÅ×îºó+Ê®×ÖÍäÊ¶±ð\Librar #
#                    y\Drivers\ADC\ -I C:\Users\dong\Desktop\7ÔÂ20ºÅ×îºó+Ê®×Ö #
#                    ÍäÊ¶±ð\Library\Drivers\FTM\ -I                           #
#                    C:\Users\dong\Desktop\7ÔÂ20ºÅ×îºó+Ê®×ÖÍäÊ¶±ð\Library\Dri #
#                    vers\GPIO\ -I C:\Users\dong\Desktop\7ÔÂ20ºÅ×îºó+Ê®×ÖÍäÊ¶ #
#                    ±ð\Library\Drivers\PIT\ -I C:\Users\dong\Desktop\7ÔÂ20ºÅ #
#                    ×îºó+Ê®×ÖÍäÊ¶±ð\Library\Drivers\I2C\ -I                  #
#                    C:\Users\dong\Desktop\7ÔÂ20ºÅ×îºó+Ê®×ÖÍäÊ¶±ð\Library\Dri #
#                    vers\UART\ -I C:\Users\dong\Desktop\7ÔÂ20ºÅ×îºó+Ê®×ÖÍäÊ¶ #
#                    ±ð\Library\Drivers\FTFL\ -I                              #
#                    C:\Users\dong\Desktop\7ÔÂ20ºÅ×îºó+Ê®×ÖÍäÊ¶±ð\MyFunction\ #
#                     -I C:\Users\dong\Desktop\7ÔÂ20ºÅ×îºó+Ê®×ÖÍäÊ¶±ð\SD_Syst #
#                    em\ -I C:\Users\dong\Desktop\7ÔÂ20ºÅ×îºó+Ê®×ÖÍäÊ¶±ð\Dela #
#                    y\ -I C:\Users\dong\Desktop\7ÔÂ20ºÅ×îºó+Ê®×ÖÍäÊ¶±ð\Syste #
#                    m_Init\ -I C:\Users\dong\Desktop\7ÔÂ20ºÅ×îºó+Ê®×ÖÍäÊ¶±ð\ #
#                    OLED\ -I C:\Users\dong\Desktop\7ÔÂ20ºÅ×îºó+Ê®×ÖÍäÊ¶±ð\ZL #
#                    G7290\ -I C:\Users\dong\Desktop\7ÔÂ20ºÅ×îºó+Ê®×ÖÍäÊ¶±ð\S #
#                    imple_AD\ -I C:\Users\dong\Desktop\7ÔÂ20ºÅ×îºó+Ê®×ÖÍäÊ¶± #
#                    ð\Make_Desicion\ -I C:\Users\dong\Desktop\7ÔÂ20ºÅ×îºó+Ê® #
#                    ×ÖÍäÊ¶±ð\Make_Desicion\Judge_Way\ -I                     #
#                    C:\Users\dong\Desktop\7ÔÂ20ºÅ×îºó+Ê®×ÖÍäÊ¶±ð\Make_Desici #
#                    on\Speed_Control\ -I C:\Users\dong\Desktop\7ÔÂ20ºÅ×îºó+Ê #
#                    ®×ÖÍäÊ¶±ð\Source\ -I C:\Users\dong\Desktop\7ÔÂ20ºÅ×îºó+Ê #
#                    ®×ÖÍäÊ¶±ð\Peripheral_Oparation\ -I                       #
#                    C:\Users\dong\Desktop\7ÔÂ20ºÅ×îºó+Ê®×ÖÍäÊ¶±ð\Balance_con #
#                    trol\ -Ol                                                #
#    List file    =  C:\Users\dong\Desktop\7ÔÂ20ºÅ×îºó+Ê®×ÖÍäÊ¶±ð\Flash_512K\ #
#                    List\key_7290.lst                                        #
#    Object file  =  C:\Users\dong\Desktop\7ÔÂ20ºÅ×îºó+Ê®×ÖÍäÊ¶±ð\Flash_512K\ #
#                    Obj\key_7290.o                                           #
#                                                                             #
#                                                                             #
###############################################################################

C:\Users\dong\Desktop\7ÔÂ20ºÅ×îºó+Ê®×ÖÍäÊ¶±ð\ZLG7290\key_7290.c
      1          /******************************************************************************
      2          
      3          * key_7290.c
      4          
      5          * Zlg7290µ×²ãÇý¶¯Ô´ÎÄ¼þ. Ö§³Ö°´¼ü¼üÖµ¶ÁÈ¡, µ¥¸öÊýÂë¹ÜÏÔÊ¾/Çå³ý, ±äÁ¿ÊýÖµÏÔÊ¾,
      6          * ÒÔ¼°²ÎÊýÉè¶¨¹¦ÄÜ.
      7          
      8          * ×÷Õß     : ËïÎÄ½¡ @ SDU  
      9          * °æ±¾     : Ver 1.01
     10          * ¸üÐÂÊ±¼ä : 2013 - 04 - 19
     11          
     12          ******************************************************************************/
     13          
     14          #include "key_7290.h"
     15          
     16          /******************************************************************************
     17          *                                 ÄÚ²¿±äÁ¿¶¨Òå
     18          ******************************************************************************/
     19          /* Êý×Ö-ÊýÂë¹ÜÏÔÊ¾±í */

   \                                 In section .rodata, align 4
     20          static const unsigned char DigTab_7290[10]=
   \                     DigTab_7290:
   \   00000000   0xFC 0x60          DC8 252, 96, 218, 242, 102, 182, 190, 224, 254, 246, 0, 0
   \              0xDA 0xF2    
   \              0x66 0xB6    
   \              0xBE 0xE0    
   \              0xFE 0xF6    
   \              0x00 0x00    
     21          {                     
     22              0xFC, 0x60, 0xDA, 0xF2, 0x66, 0xB6, 0xBE, 0xE0, 0xFE, 0xF6
     23          };
     24          
     25          
     26          /******************************************************************************
     27          * º¯ÊýÃû³Æ: LongDelay_7290
     28          * º¯Êý¹¦ÄÜ: 7290³¤Ê±¼äÑÓÊ±º¯Êý.
     29          ******************************************************************************/

   \                                 In section .text, align 2, keep-with-next
     30          static void LongDelay_7290(void)
     31          {
   \                     LongDelay_7290:
   \   00000000   0xB082             SUB      SP,SP,#+8
     32              volatile unsigned int i, j;
     33              
     34              for(j = 120; j > 0; j--)
   \   00000002   0x2078             MOVS     R0,#+120
   \   00000004   0x9000             STR      R0,[SP, #+0]
   \   00000006   0xE008             B.N      ??LongDelay_7290_0
     35              {
     36                  for(i = LONG_DELAY_TIME_7290; i > 0; i--);
   \                     ??LongDelay_7290_1:
   \   00000008   0x9801             LDR      R0,[SP, #+4]
   \   0000000A   0x1E40             SUBS     R0,R0,#+1
   \   0000000C   0x9001             STR      R0,[SP, #+4]
   \                     ??LongDelay_7290_2:
   \   0000000E   0x9801             LDR      R0,[SP, #+4]
   \   00000010   0x2800             CMP      R0,#+0
   \   00000012   0xD1F9             BNE.N    ??LongDelay_7290_1
   \   00000014   0x9800             LDR      R0,[SP, #+0]
   \   00000016   0x1E40             SUBS     R0,R0,#+1
   \   00000018   0x9000             STR      R0,[SP, #+0]
   \                     ??LongDelay_7290_0:
   \   0000001A   0x9800             LDR      R0,[SP, #+0]
   \   0000001C   0x2800             CMP      R0,#+0
   \   0000001E   0xD003             BEQ.N    ??LongDelay_7290_3
   \   00000020   0xF44F 0x7061      MOV      R0,#+900
   \   00000024   0x9001             STR      R0,[SP, #+4]
   \   00000026   0xE7F2             B.N      ??LongDelay_7290_2
     37              }
     38          }
   \                     ??LongDelay_7290_3:
   \   00000028   0xB002             ADD      SP,SP,#+8
   \   0000002A   0x4770             BX       LR               ;; return
     39          /******************************************************************************
     40          * º¯ÊýÃû³Æ: ShortDelay_7290
     41          * º¯Êý¹¦ÄÜ: 7290¶ÌÊ±¼äÑÓÊ±º¯Êý.
     42          ******************************************************************************/

   \                                 In section .text, align 2, keep-with-next
     43          static void ShortDelay_7290(void)
     44          { 
   \                     ShortDelay_7290:
   \   00000000   0xB082             SUB      SP,SP,#+8
     45              volatile int Num = SHORT_DELAY_TIME_7290;
   \   00000002   0x205A             MOVS     R0,#+90
   \   00000004   0x9001             STR      R0,[SP, #+4]
     46              volatile int i;
     47            
     48              while(Num--)
   \                     ??ShortDelay_7290_0:
   \   00000006   0x9801             LDR      R0,[SP, #+4]
   \   00000008   0x1E41             SUBS     R1,R0,#+1
   \   0000000A   0x9101             STR      R1,[SP, #+4]
   \   0000000C   0x2800             CMP      R0,#+0
   \   0000000E   0xD008             BEQ.N    ??ShortDelay_7290_1
     49              {
     50                  for(i = 0; i < 2; i++);
   \   00000010   0x2000             MOVS     R0,#+0
   \   00000012   0x9000             STR      R0,[SP, #+0]
   \                     ??ShortDelay_7290_2:
   \   00000014   0x9800             LDR      R0,[SP, #+0]
   \   00000016   0x2802             CMP      R0,#+2
   \   00000018   0xDAF5             BGE.N    ??ShortDelay_7290_0
   \   0000001A   0x9800             LDR      R0,[SP, #+0]
   \   0000001C   0x1C40             ADDS     R0,R0,#+1
   \   0000001E   0x9000             STR      R0,[SP, #+0]
   \   00000020   0xE7F8             B.N      ??ShortDelay_7290_2
     51              }
     52          }
   \                     ??ShortDelay_7290_1:
   \   00000022   0xB002             ADD      SP,SP,#+8
   \   00000024   0x4770             BX       LR               ;; return
     53          
     54          /******************************************************************************
     55          * º¯ÊýÃû³Æ: StartI2C_7290
     56          * º¯Êý¹¦ÄÜ: I2CÆô¶¯ÐÅºÅ.
     57          ******************************************************************************/

   \                                 In section .text, align 2, keep-with-next
     58          static void StartI2C_7290(void)
     59          {
   \                     StartI2C_7290:
   \   00000000   0xB580             PUSH     {R7,LR}
     60              SET_SCL_OUT_7290();
   \   00000002   0x.... 0x....      LDR.W    R0,??DataTable6  ;; 0x400ff114
   \   00000006   0x6800             LDR      R0,[R0, #+0]
   \   00000008   0xF050 0x0004      ORRS     R0,R0,#0x4
   \   0000000C   0x.... 0x....      LDR.W    R1,??DataTable6  ;; 0x400ff114
   \   00000010   0x6008             STR      R0,[R1, #+0]
     61              SET_SDA_OUT_7290();
   \   00000012   0x.... 0x....      LDR.W    R0,??DataTable6  ;; 0x400ff114
   \   00000016   0x6800             LDR      R0,[R0, #+0]
   \   00000018   0xF050 0x0008      ORRS     R0,R0,#0x8
   \   0000001C   0x.... 0x....      LDR.W    R1,??DataTable6  ;; 0x400ff114
   \   00000020   0x6008             STR      R0,[R1, #+0]
     62              
     63              SET_SDA_HIGH_7290();  
   \   00000022   0x.... 0x....      LDR.W    R0,??DataTable6_1  ;; 0x400ff104
   \   00000026   0x6800             LDR      R0,[R0, #+0]
   \   00000028   0xF050 0x0008      ORRS     R0,R0,#0x8
   \   0000002C   0x.... 0x....      LDR.W    R1,??DataTable6_1  ;; 0x400ff104
   \   00000030   0x6008             STR      R0,[R1, #+0]
     64              ShortDelay_7290();
   \   00000032   0x.... 0x....      BL       ShortDelay_7290
     65            
     66              SET_SCL_HIGH_7290();
   \   00000036   0x.... 0x....      LDR.W    R0,??DataTable6_1  ;; 0x400ff104
   \   0000003A   0x6800             LDR      R0,[R0, #+0]
   \   0000003C   0xF050 0x0004      ORRS     R0,R0,#0x4
   \   00000040   0x.... 0x....      LDR.W    R1,??DataTable6_1  ;; 0x400ff104
   \   00000044   0x6008             STR      R0,[R1, #+0]
     67              ShortDelay_7290();ShortDelay_7290();
   \   00000046   0x.... 0x....      BL       ShortDelay_7290
   \   0000004A   0x.... 0x....      BL       ShortDelay_7290
     68              ShortDelay_7290();ShortDelay_7290();
   \   0000004E   0x.... 0x....      BL       ShortDelay_7290
   \   00000052   0x.... 0x....      BL       ShortDelay_7290
     69            
     70              SET_SDA_LOW_7290();
   \   00000056   0x.... 0x....      LDR.W    R0,??DataTable6_2  ;; 0x400ff108
   \   0000005A   0x6800             LDR      R0,[R0, #+0]
   \   0000005C   0xF050 0x0008      ORRS     R0,R0,#0x8
   \   00000060   0x.... 0x....      LDR.W    R1,??DataTable6_2  ;; 0x400ff108
   \   00000064   0x6008             STR      R0,[R1, #+0]
     71              ShortDelay_7290();ShortDelay_7290();
   \   00000066   0x.... 0x....      BL       ShortDelay_7290
   \   0000006A   0x.... 0x....      BL       ShortDelay_7290
     72              ShortDelay_7290();ShortDelay_7290();
   \   0000006E   0x.... 0x....      BL       ShortDelay_7290
   \   00000072   0x.... 0x....      BL       ShortDelay_7290
     73          }
   \   00000076   0xBD01             POP      {R0,PC}          ;; return
     74          /******************************************************************************
     75          * º¯ÊýÃû³Æ: StopI2C_7290
     76          * º¯Êý¹¦ÄÜ: I2C½áÊøÐÅºÅ.
     77          ******************************************************************************/

   \                                 In section .text, align 2, keep-with-next
     78          static void StopI2C_7290(void)
     79          {
   \                     StopI2C_7290:
   \   00000000   0xB580             PUSH     {R7,LR}
     80              SET_SCL_OUT_7290();
   \   00000002   0x.... 0x....      LDR.W    R0,??DataTable6  ;; 0x400ff114
   \   00000006   0x6800             LDR      R0,[R0, #+0]
   \   00000008   0xF050 0x0004      ORRS     R0,R0,#0x4
   \   0000000C   0x.... 0x....      LDR.W    R1,??DataTable6  ;; 0x400ff114
   \   00000010   0x6008             STR      R0,[R1, #+0]
     81              SET_SDA_OUT_7290();
   \   00000012   0x.... 0x....      LDR.W    R0,??DataTable6  ;; 0x400ff114
   \   00000016   0x6800             LDR      R0,[R0, #+0]
   \   00000018   0xF050 0x0008      ORRS     R0,R0,#0x8
   \   0000001C   0x.... 0x....      LDR.W    R1,??DataTable6  ;; 0x400ff114
   \   00000020   0x6008             STR      R0,[R1, #+0]
     82              
     83              SET_SDA_LOW_7290();
   \   00000022   0x.... 0x....      LDR.W    R0,??DataTable6_2  ;; 0x400ff108
   \   00000026   0x6800             LDR      R0,[R0, #+0]
   \   00000028   0xF050 0x0008      ORRS     R0,R0,#0x8
   \   0000002C   0x.... 0x....      LDR.W    R1,??DataTable6_2  ;; 0x400ff108
   \   00000030   0x6008             STR      R0,[R1, #+0]
     84              ShortDelay_7290();
   \   00000032   0x.... 0x....      BL       ShortDelay_7290
     85            
     86              SET_SCL_HIGH_7290();
   \   00000036   0x.... 0x....      LDR.W    R0,??DataTable6_1  ;; 0x400ff104
   \   0000003A   0x6800             LDR      R0,[R0, #+0]
   \   0000003C   0xF050 0x0004      ORRS     R0,R0,#0x4
   \   00000040   0x.... 0x....      LDR.W    R1,??DataTable6_1  ;; 0x400ff104
   \   00000044   0x6008             STR      R0,[R1, #+0]
     87              ShortDelay_7290();ShortDelay_7290();
   \   00000046   0x.... 0x....      BL       ShortDelay_7290
   \   0000004A   0x.... 0x....      BL       ShortDelay_7290
     88              ShortDelay_7290();ShortDelay_7290();
   \   0000004E   0x.... 0x....      BL       ShortDelay_7290
   \   00000052   0x.... 0x....      BL       ShortDelay_7290
     89            
     90              SET_SDA_HIGH_7290();
   \   00000056   0x.... 0x....      LDR.W    R0,??DataTable6_1  ;; 0x400ff104
   \   0000005A   0x6800             LDR      R0,[R0, #+0]
   \   0000005C   0xF050 0x0008      ORRS     R0,R0,#0x8
   \   00000060   0x.... 0x....      LDR.W    R1,??DataTable6_1  ;; 0x400ff104
   \   00000064   0x6008             STR      R0,[R1, #+0]
     91              ShortDelay_7290();ShortDelay_7290();
   \   00000066   0x.... 0x....      BL       ShortDelay_7290
   \   0000006A   0x.... 0x....      BL       ShortDelay_7290
     92              ShortDelay_7290();ShortDelay_7290();
   \   0000006E   0x.... 0x....      BL       ShortDelay_7290
   \   00000072   0x.... 0x....      BL       ShortDelay_7290
     93          }
   \   00000076   0xBD01             POP      {R0,PC}          ;; return
     94          
     95          /******************************************************************************
     96          * º¯ÊýÃû³Æ: WackI2C_7290
     97          * º¯Êý¹¦ÄÜ: ½ÓÊÕI2CÓ¦´ðÐÅºÅ.
     98          ******************************************************************************/

   \                                 In section .text, align 2, keep-with-next
     99          static void WackI2C_7290(void)
    100          { 
   \                     WackI2C_7290:
   \   00000000   0xB580             PUSH     {R7,LR}
    101              SET_SCL_OUT_7290();
   \   00000002   0x.... 0x....      LDR.W    R0,??DataTable6  ;; 0x400ff114
   \   00000006   0x6800             LDR      R0,[R0, #+0]
   \   00000008   0xF050 0x0004      ORRS     R0,R0,#0x4
   \   0000000C   0x.... 0x....      LDR.W    R1,??DataTable6  ;; 0x400ff114
   \   00000010   0x6008             STR      R0,[R1, #+0]
    102              SET_SDA_OUT_7290();
   \   00000012   0x.... 0x....      LDR.W    R0,??DataTable6  ;; 0x400ff114
   \   00000016   0x6800             LDR      R0,[R0, #+0]
   \   00000018   0xF050 0x0008      ORRS     R0,R0,#0x8
   \   0000001C   0x.... 0x....      LDR.W    R1,??DataTable6  ;; 0x400ff114
   \   00000020   0x6008             STR      R0,[R1, #+0]
    103              SET_SDA_HIGH_7290();
   \   00000022   0x.... 0x....      LDR.W    R0,??DataTable6_1  ;; 0x400ff104
   \   00000026   0x6800             LDR      R0,[R0, #+0]
   \   00000028   0xF050 0x0008      ORRS     R0,R0,#0x8
   \   0000002C   0x.... 0x....      LDR.W    R1,??DataTable6_1  ;; 0x400ff104
   \   00000030   0x6008             STR      R0,[R1, #+0]
    104              ShortDelay_7290();
   \   00000032   0x.... 0x....      BL       ShortDelay_7290
    105            
    106              SET_SCL_LOW_7290();
   \   00000036   0x.... 0x....      LDR.W    R0,??DataTable6_2  ;; 0x400ff108
   \   0000003A   0x6800             LDR      R0,[R0, #+0]
   \   0000003C   0xF050 0x0004      ORRS     R0,R0,#0x4
   \   00000040   0x.... 0x....      LDR.W    R1,??DataTable6_2  ;; 0x400ff108
   \   00000044   0x6008             STR      R0,[R1, #+0]
    107              ShortDelay_7290();ShortDelay_7290();
   \   00000046   0x.... 0x....      BL       ShortDelay_7290
   \   0000004A   0x.... 0x....      BL       ShortDelay_7290
    108              ShortDelay_7290();ShortDelay_7290();
   \   0000004E   0x.... 0x....      BL       ShortDelay_7290
   \   00000052   0x.... 0x....      BL       ShortDelay_7290
    109            
    110              SET_SCL_HIGH_7290();
   \   00000056   0x....             LDR.N    R0,??DataTable6_1  ;; 0x400ff104
   \   00000058   0x6800             LDR      R0,[R0, #+0]
   \   0000005A   0xF050 0x0004      ORRS     R0,R0,#0x4
   \   0000005E   0x....             LDR.N    R1,??DataTable6_1  ;; 0x400ff104
   \   00000060   0x6008             STR      R0,[R1, #+0]
    111              ShortDelay_7290();ShortDelay_7290();
   \   00000062   0x.... 0x....      BL       ShortDelay_7290
   \   00000066   0x.... 0x....      BL       ShortDelay_7290
    112              ShortDelay_7290();ShortDelay_7290();
   \   0000006A   0x.... 0x....      BL       ShortDelay_7290
   \   0000006E   0x.... 0x....      BL       ShortDelay_7290
    113            
    114              SET_SCL_LOW_7290();
   \   00000072   0x....             LDR.N    R0,??DataTable6_2  ;; 0x400ff108
   \   00000074   0x6800             LDR      R0,[R0, #+0]
   \   00000076   0xF050 0x0004      ORRS     R0,R0,#0x4
   \   0000007A   0x....             LDR.N    R1,??DataTable6_2  ;; 0x400ff108
   \   0000007C   0x6008             STR      R0,[R1, #+0]
    115              ShortDelay_7290();ShortDelay_7290();
   \   0000007E   0x.... 0x....      BL       ShortDelay_7290
   \   00000082   0x.... 0x....      BL       ShortDelay_7290
    116              ShortDelay_7290();ShortDelay_7290();
   \   00000086   0x.... 0x....      BL       ShortDelay_7290
   \   0000008A   0x.... 0x....      BL       ShortDelay_7290
    117          }
   \   0000008E   0xBD01             POP      {R0,PC}          ;; return
    118          
    119          /******************************************************************************
    120          * º¯ÊýÃû³Æ: WriteByteI2C_7290
    121          * º¯Êý¹¦ÄÜ: Í¨¹ýI2C·¢ËÍÒ»×Ö½ÚÊý¾Ý.
    122          * Èë¿Ú²ÎÊý: dat  ´ý·¢ËÍÊý¾Ý
    123          ******************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    124          static void WriteByteI2C_7290(unsigned char dat)
    125          {
   \                     WriteByteI2C_7290:
   \   00000000   0xB538             PUSH     {R3-R5,LR}
   \   00000002   0x0004             MOVS     R4,R0
    126              unsigned char i = 8, temp;
   \   00000004   0x2508             MOVS     R5,#+8
    127              
    128              SET_SCL_OUT_7290();
   \   00000006   0x....             LDR.N    R0,??DataTable6  ;; 0x400ff114
   \   00000008   0x6800             LDR      R0,[R0, #+0]
   \   0000000A   0xF050 0x0004      ORRS     R0,R0,#0x4
   \   0000000E   0x....             LDR.N    R1,??DataTable6  ;; 0x400ff114
   \   00000010   0x6008             STR      R0,[R1, #+0]
    129              SET_SDA_OUT_7290();
   \   00000012   0x....             LDR.N    R0,??DataTable6  ;; 0x400ff114
   \   00000014   0x6800             LDR      R0,[R0, #+0]
   \   00000016   0xF050 0x0008      ORRS     R0,R0,#0x8
   \   0000001A   0x....             LDR.N    R1,??DataTable6  ;; 0x400ff114
   \   0000001C   0x6008             STR      R0,[R1, #+0]
    130              
    131              SET_SCL_LOW_7290();
   \   0000001E   0x....             LDR.N    R0,??DataTable6_2  ;; 0x400ff108
   \   00000020   0x6800             LDR      R0,[R0, #+0]
   \   00000022   0xF050 0x0004      ORRS     R0,R0,#0x4
   \   00000026   0x....             LDR.N    R1,??DataTable6_2  ;; 0x400ff108
   \   00000028   0x6008             STR      R0,[R1, #+0]
    132              ShortDelay_7290();ShortDelay_7290();
   \   0000002A   0x.... 0x....      BL       ShortDelay_7290
   \   0000002E   0x.... 0x....      BL       ShortDelay_7290
    133              ShortDelay_7290();ShortDelay_7290();
   \   00000032   0x.... 0x....      BL       ShortDelay_7290
   \   00000036   0x.... 0x....      BL       ShortDelay_7290
   \   0000003A   0xE02A             B.N      ??WriteByteI2C_7290_0
    134          
    135              while(i--)
    136              {     
    137                temp = dat & 0x80;
    138                if(temp == 0)
    139                {
    140                    SET_SDA_LOW_7290();
    141                }
    142                else
    143                {
    144                    SET_SDA_HIGH_7290();
   \                     ??WriteByteI2C_7290_1:
   \   0000003C   0x....             LDR.N    R0,??DataTable6_1  ;; 0x400ff104
   \   0000003E   0x6800             LDR      R0,[R0, #+0]
   \   00000040   0xF050 0x0008      ORRS     R0,R0,#0x8
   \   00000044   0x....             LDR.N    R1,??DataTable6_1  ;; 0x400ff104
   \   00000046   0x6008             STR      R0,[R1, #+0]
    145                }
    146                ShortDelay_7290();ShortDelay_7290();
   \                     ??WriteByteI2C_7290_2:
   \   00000048   0x.... 0x....      BL       ShortDelay_7290
   \   0000004C   0x.... 0x....      BL       ShortDelay_7290
    147                ShortDelay_7290();ShortDelay_7290();
   \   00000050   0x.... 0x....      BL       ShortDelay_7290
   \   00000054   0x.... 0x....      BL       ShortDelay_7290
    148          
    149                dat <<= 1;
   \   00000058   0x0064             LSLS     R4,R4,#+1
    150          
    151                SET_SCL_HIGH_7290();
   \   0000005A   0x....             LDR.N    R0,??DataTable6_1  ;; 0x400ff104
   \   0000005C   0x6800             LDR      R0,[R0, #+0]
   \   0000005E   0xF050 0x0004      ORRS     R0,R0,#0x4
   \   00000062   0x....             LDR.N    R1,??DataTable6_1  ;; 0x400ff104
   \   00000064   0x6008             STR      R0,[R1, #+0]
    152                ShortDelay_7290();ShortDelay_7290();
   \   00000066   0x.... 0x....      BL       ShortDelay_7290
   \   0000006A   0x.... 0x....      BL       ShortDelay_7290
    153                ShortDelay_7290();ShortDelay_7290();
   \   0000006E   0x.... 0x....      BL       ShortDelay_7290
   \   00000072   0x.... 0x....      BL       ShortDelay_7290
    154          
    155                SET_SCL_LOW_7290();
   \   00000076   0x....             LDR.N    R0,??DataTable6_2  ;; 0x400ff108
   \   00000078   0x6800             LDR      R0,[R0, #+0]
   \   0000007A   0xF050 0x0004      ORRS     R0,R0,#0x4
   \   0000007E   0x....             LDR.N    R1,??DataTable6_2  ;; 0x400ff108
   \   00000080   0x6008             STR      R0,[R1, #+0]
    156                ShortDelay_7290();ShortDelay_7290();
   \   00000082   0x.... 0x....      BL       ShortDelay_7290
   \   00000086   0x.... 0x....      BL       ShortDelay_7290
    157                ShortDelay_7290();ShortDelay_7290();
   \   0000008A   0x.... 0x....      BL       ShortDelay_7290
   \   0000008E   0x.... 0x....      BL       ShortDelay_7290
   \                     ??WriteByteI2C_7290_0:
   \   00000092   0x0028             MOVS     R0,R5
   \   00000094   0x1E45             SUBS     R5,R0,#+1
   \   00000096   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000098   0x2800             CMP      R0,#+0
   \   0000009A   0xD00B             BEQ.N    ??WriteByteI2C_7290_3
   \   0000009C   0xF014 0x0080      ANDS     R0,R4,#0x80
   \   000000A0   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000000A2   0x2800             CMP      R0,#+0
   \   000000A4   0xD1CA             BNE.N    ??WriteByteI2C_7290_1
   \   000000A6   0x....             LDR.N    R0,??DataTable6_2  ;; 0x400ff108
   \   000000A8   0x6800             LDR      R0,[R0, #+0]
   \   000000AA   0xF050 0x0008      ORRS     R0,R0,#0x8
   \   000000AE   0x....             LDR.N    R1,??DataTable6_2  ;; 0x400ff108
   \   000000B0   0x6008             STR      R0,[R1, #+0]
   \   000000B2   0xE7C9             B.N      ??WriteByteI2C_7290_2
    158              }
    159          
    160              ShortDelay_7290();ShortDelay_7290();
   \                     ??WriteByteI2C_7290_3:
   \   000000B4   0x.... 0x....      BL       ShortDelay_7290
   \   000000B8   0x.... 0x....      BL       ShortDelay_7290
    161              ShortDelay_7290();ShortDelay_7290();
   \   000000BC   0x.... 0x....      BL       ShortDelay_7290
   \   000000C0   0x.... 0x....      BL       ShortDelay_7290
    162              ShortDelay_7290();ShortDelay_7290();
   \   000000C4   0x.... 0x....      BL       ShortDelay_7290
   \   000000C8   0x.... 0x....      BL       ShortDelay_7290
    163          }
   \   000000CC   0xBD31             POP      {R0,R4,R5,PC}    ;; return
    164          /******************************************************************************
    165          * º¯ÊýÃû³Æ: ReadByteI2C_7290
    166          * º¯Êý¹¦ÄÜ: Í¨¹ýI2C¶ÁÈ¡Ò»×Ö½ÚÊý¾Ý.
    167          * ·µ»Ø²ÎÊý: ¶ÁÈ¡½á¹û
    168          ******************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    169          static unsigned char ReadByteI2C_7290(void)
    170          {
   \                     ReadByteI2C_7290:
   \   00000000   0xB538             PUSH     {R3-R5,LR}
    171              unsigned char dat = 0x00;
   \   00000002   0x2400             MOVS     R4,#+0
    172              unsigned char i   = 8;
   \   00000004   0x2508             MOVS     R5,#+8
   \   00000006   0xE048             B.N      ??ReadByteI2C_7290_0
    173              
    174              while(i--)
    175              { 
    176                  SET_SCL_OUT_7290();
   \                     ??ReadByteI2C_7290_1:
   \   00000008   0x....             LDR.N    R0,??DataTable6  ;; 0x400ff114
   \   0000000A   0x6800             LDR      R0,[R0, #+0]
   \   0000000C   0xF050 0x0004      ORRS     R0,R0,#0x4
   \   00000010   0x....             LDR.N    R1,??DataTable6  ;; 0x400ff114
   \   00000012   0x6008             STR      R0,[R1, #+0]
    177                  SET_SDA_OUT_7290();
   \   00000014   0x....             LDR.N    R0,??DataTable6  ;; 0x400ff114
   \   00000016   0x6800             LDR      R0,[R0, #+0]
   \   00000018   0xF050 0x0008      ORRS     R0,R0,#0x8
   \   0000001C   0x....             LDR.N    R1,??DataTable6  ;; 0x400ff114
   \   0000001E   0x6008             STR      R0,[R1, #+0]
    178                  
    179                  SET_SDA_HIGH_7290();
   \   00000020   0x....             LDR.N    R0,??DataTable6_1  ;; 0x400ff104
   \   00000022   0x6800             LDR      R0,[R0, #+0]
   \   00000024   0xF050 0x0008      ORRS     R0,R0,#0x8
   \   00000028   0x....             LDR.N    R1,??DataTable6_1  ;; 0x400ff104
   \   0000002A   0x6008             STR      R0,[R1, #+0]
    180                  ShortDelay_7290();ShortDelay_7290();
   \   0000002C   0x.... 0x....      BL       ShortDelay_7290
   \   00000030   0x.... 0x....      BL       ShortDelay_7290
    181                  ShortDelay_7290();ShortDelay_7290();
   \   00000034   0x.... 0x....      BL       ShortDelay_7290
   \   00000038   0x.... 0x....      BL       ShortDelay_7290
    182                  
    183                  SET_SCL_OUT_7290();
   \   0000003C   0x....             LDR.N    R0,??DataTable6  ;; 0x400ff114
   \   0000003E   0x6800             LDR      R0,[R0, #+0]
   \   00000040   0xF050 0x0004      ORRS     R0,R0,#0x4
   \   00000044   0x....             LDR.N    R1,??DataTable6  ;; 0x400ff114
   \   00000046   0x6008             STR      R0,[R1, #+0]
    184                  SET_SDA_IN_7290();  /* SDAµÄ·½Ïò¸Ä±ä:SCLÊä³ö£¬SDAÊäÈë */
   \   00000048   0x....             LDR.N    R0,??DataTable6  ;; 0x400ff114
   \   0000004A   0x6800             LDR      R0,[R0, #+0]
   \   0000004C   0xF030 0x0008      BICS     R0,R0,#0x8
   \   00000050   0x....             LDR.N    R1,??DataTable6  ;; 0x400ff114
   \   00000052   0x6008             STR      R0,[R1, #+0]
    185                  
    186                  dat <<= 1;
   \   00000054   0x0064             LSLS     R4,R4,#+1
    187                  SET_SCL_LOW_7290();
   \   00000056   0x....             LDR.N    R0,??DataTable6_2  ;; 0x400ff108
   \   00000058   0x6800             LDR      R0,[R0, #+0]
   \   0000005A   0xF050 0x0004      ORRS     R0,R0,#0x4
   \   0000005E   0x....             LDR.N    R1,??DataTable6_2  ;; 0x400ff108
   \   00000060   0x6008             STR      R0,[R1, #+0]
    188                  ShortDelay_7290();ShortDelay_7290();
   \   00000062   0x.... 0x....      BL       ShortDelay_7290
   \   00000066   0x.... 0x....      BL       ShortDelay_7290
    189                  ShortDelay_7290();ShortDelay_7290();
   \   0000006A   0x.... 0x....      BL       ShortDelay_7290
   \   0000006E   0x.... 0x....      BL       ShortDelay_7290
    190          
    191                  SET_SCL_HIGH_7290();
   \   00000072   0x....             LDR.N    R0,??DataTable6_1  ;; 0x400ff104
   \   00000074   0x6800             LDR      R0,[R0, #+0]
   \   00000076   0xF050 0x0004      ORRS     R0,R0,#0x4
   \   0000007A   0x....             LDR.N    R1,??DataTable6_1  ;; 0x400ff104
   \   0000007C   0x6008             STR      R0,[R1, #+0]
    192                  ShortDelay_7290();ShortDelay_7290();
   \   0000007E   0x.... 0x....      BL       ShortDelay_7290
   \   00000082   0x.... 0x....      BL       ShortDelay_7290
    193                  ShortDelay_7290();ShortDelay_7290();
   \   00000086   0x.... 0x....      BL       ShortDelay_7290
   \   0000008A   0x.... 0x....      BL       ShortDelay_7290
    194          
    195                  if(READ_SDA_7290() != 0)
   \   0000008E   0x....             LDR.N    R0,??DataTable6_3  ;; 0x400ff110
   \   00000090   0x6800             LDR      R0,[R0, #+0]
   \   00000092   0x0700             LSLS     R0,R0,#+28
   \   00000094   0xD501             BPL.N    ??ReadByteI2C_7290_0
    196                  {
    197                      dat |= 0x01;
   \   00000096   0xF054 0x0401      ORRS     R4,R4,#0x1
    198                  }
    199              }
   \                     ??ReadByteI2C_7290_0:
   \   0000009A   0x0028             MOVS     R0,R5
   \   0000009C   0x1E45             SUBS     R5,R0,#+1
   \   0000009E   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000000A0   0x2800             CMP      R0,#+0
   \   000000A2   0xD1B1             BNE.N    ??ReadByteI2C_7290_1
    200          
    201              SET_SCL_OUT_7290();
   \   000000A4   0x....             LDR.N    R0,??DataTable6  ;; 0x400ff114
   \   000000A6   0x6800             LDR      R0,[R0, #+0]
   \   000000A8   0xF050 0x0004      ORRS     R0,R0,#0x4
   \   000000AC   0x....             LDR.N    R1,??DataTable6  ;; 0x400ff114
   \   000000AE   0x6008             STR      R0,[R1, #+0]
    202              SET_SDA_OUT_7290();
   \   000000B0   0x....             LDR.N    R0,??DataTable6  ;; 0x400ff114
   \   000000B2   0x6800             LDR      R0,[R0, #+0]
   \   000000B4   0xF050 0x0008      ORRS     R0,R0,#0x8
   \   000000B8   0x....             LDR.N    R1,??DataTable6  ;; 0x400ff114
   \   000000BA   0x6008             STR      R0,[R1, #+0]
    203              SET_SCL_LOW_7290();
   \   000000BC   0x....             LDR.N    R0,??DataTable6_2  ;; 0x400ff108
   \   000000BE   0x6800             LDR      R0,[R0, #+0]
   \   000000C0   0xF050 0x0004      ORRS     R0,R0,#0x4
   \   000000C4   0x....             LDR.N    R1,??DataTable6_2  ;; 0x400ff108
   \   000000C6   0x6008             STR      R0,[R1, #+0]
    204              SET_SDA_HIGH_7290();
   \   000000C8   0x....             LDR.N    R0,??DataTable6_1  ;; 0x400ff104
   \   000000CA   0x6800             LDR      R0,[R0, #+0]
   \   000000CC   0xF050 0x0008      ORRS     R0,R0,#0x8
   \   000000D0   0x....             LDR.N    R1,??DataTable6_1  ;; 0x400ff104
   \   000000D2   0x6008             STR      R0,[R1, #+0]
    205              
    206              return dat;
   \   000000D4   0x0020             MOVS     R0,R4
   \   000000D6   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000000D8   0xBD32             POP      {R1,R4,R5,PC}    ;; return
    207          }
    208          
    209          /******************************************************************************
    210          * º¯ÊýÃû³Æ: Init_7290
    211          * º¯Êý¹¦ÄÜ: ³õÊ¼»¯7290
    212          ******************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    213          void Init_7290(void)
    214          {
   \                     Init_7290:
   \   00000000   0xB580             PUSH     {R7,LR}
    215            INIT_SCL_7290();
   \   00000002   0x....             LDR.N    R0,??DataTable6_4  ;; 0x4004d008
   \   00000004   0xF240 0x1103      MOVW     R1,#+259
   \   00000008   0x6001             STR      R1,[R0, #+0]
    216            INIT_SDA_7290();
   \   0000000A   0x....             LDR.N    R0,??DataTable6_5  ;; 0x4004d00c
   \   0000000C   0xF240 0x1103      MOVW     R1,#+259
   \   00000010   0x6001             STR      R1,[R0, #+0]
    217            INIT_INT_7290();
   \   00000012   0x....             LDR.N    R0,??DataTable6_6  ;; 0x4004d000
   \   00000014   0xF240 0x1103      MOVW     R1,#+259
   \   00000018   0x6001             STR      R1,[R0, #+0]
    218            SET_INT_IN_7290();
   \   0000001A   0x....             LDR.N    R0,??DataTable6  ;; 0x400ff114
   \   0000001C   0x6800             LDR      R0,[R0, #+0]
   \   0000001E   0x0840             LSRS     R0,R0,#+1
   \   00000020   0x0040             LSLS     R0,R0,#+1
   \   00000022   0x....             LDR.N    R1,??DataTable6  ;; 0x400ff114
   \   00000024   0x6008             STR      R0,[R1, #+0]
    219            
    220            StartI2C_7290();              
   \   00000026   0x.... 0x....      BL       StartI2C_7290
    221            WriteByteI2C_7290(SLVADDR_7290);
   \   0000002A   0x2070             MOVS     R0,#+112
   \   0000002C   0x.... 0x....      BL       WriteByteI2C_7290
    222            WackI2C_7290();
   \   00000030   0x.... 0x....      BL       WackI2C_7290
    223          
    224            WriteByteI2C_7290(0x0D);
   \   00000034   0x200D             MOVS     R0,#+13
   \   00000036   0x.... 0x....      BL       WriteByteI2C_7290
    225            WackI2C_7290();
   \   0000003A   0x.... 0x....      BL       WackI2C_7290
    226          
    227            WriteByteI2C_7290(0x03);
   \   0000003E   0x2003             MOVS     R0,#+3
   \   00000040   0x.... 0x....      BL       WriteByteI2C_7290
    228            WackI2C_7290();
   \   00000044   0x.... 0x....      BL       WackI2C_7290
    229          
    230            StopI2C_7290();
   \   00000048   0x.... 0x....      BL       StopI2C_7290
    231            LongDelay_7290();
   \   0000004C   0x.... 0x....      BL       LongDelay_7290
    232          }
   \   00000050   0xBD01             POP      {R0,PC}          ;; return
    233          
    234          /******************************************************************************
    235          * º¯ÊýÃû³Æ: DisplayOne_7290
    236          * º¯Êý¹¦ÄÜ: Ê¹Ä³Ò»Î»ÊýÂë¹ÜÏÔÊ¾×Ö·û
    237          * Èë¿Ú²ÎÊý: pos ±íÊ¾ÒªÏÔÊ¾ÄÄÒ»Î»ÊýÂë¹Ü(×î×ó±ßÎªµÚ0Î»)
    238          *           c   ÒªÏÔÊ¾µÄ×Ö·û(ASCIIÂë)
    239          ******************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    240          void DisplayOne_7290(unsigned char pos,unsigned char c)
    241          {
   \                     DisplayOne_7290:
   \   00000000   0xB538             PUSH     {R3-R5,LR}
   \   00000002   0x0004             MOVS     R4,R0
    242              unsigned char dis; 
    243            
    244              dis = 0xFF;    /* ×Ö·û³ö´í(·Ç¿ÉÏÔÊ¾×Ö·û)Ê±,µãÁÁËùÓÐ¶ÎÒÔÊ¾´íÎó */
   \   00000004   0x25FF             MOVS     R5,#+255
    245            
    246              if(c >= '0' && c <= '9')  dis = DigTab_7290[c-'0']; 
   \   00000006   0xF1B1 0x0030      SUBS     R0,R1,#+48
   \   0000000A   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000000C   0x280A             CMP      R0,#+10
   \   0000000E   0xD205             BCS.N    ??DisplayOne_7290_0
   \   00000010   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000012   0x....             LDR.N    R0,??DataTable6_7
   \   00000014   0x1808             ADDS     R0,R1,R0
   \   00000016   0xF810 0x5C30      LDRB     R5,[R0, #-48]
   \   0000001A   0xE04E             B.N      ??DisplayOne_7290_1
    247              else if(c == '-')         dis = _DISP_7290__;
   \                     ??DisplayOne_7290_0:
   \   0000001C   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   0000001E   0x292D             CMP      R1,#+45
   \   00000020   0xD101             BNE.N    ??DisplayOne_7290_2
   \   00000022   0x2502             MOVS     R5,#+2
   \   00000024   0xE049             B.N      ??DisplayOne_7290_1
    248              else if(c == 'A')         dis = _DISP_7290_A;
   \                     ??DisplayOne_7290_2:
   \   00000026   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000028   0x2941             CMP      R1,#+65
   \   0000002A   0xD101             BNE.N    ??DisplayOne_7290_3
   \   0000002C   0x25EE             MOVS     R5,#+238
   \   0000002E   0xE044             B.N      ??DisplayOne_7290_1
    249              else if(c == 'b')         dis = _DISP_7290_b;
   \                     ??DisplayOne_7290_3:
   \   00000030   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000032   0x2962             CMP      R1,#+98
   \   00000034   0xD101             BNE.N    ??DisplayOne_7290_4
   \   00000036   0x253E             MOVS     R5,#+62
   \   00000038   0xE03F             B.N      ??DisplayOne_7290_1
    250              else if(c == 'C')         dis = _DISP_7290_C;
   \                     ??DisplayOne_7290_4:
   \   0000003A   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   0000003C   0x2943             CMP      R1,#+67
   \   0000003E   0xD101             BNE.N    ??DisplayOne_7290_5
   \   00000040   0x259C             MOVS     R5,#+156
   \   00000042   0xE03A             B.N      ??DisplayOne_7290_1
    251              else if(c == 'c')         dis = _DISP_7290_c;
   \                     ??DisplayOne_7290_5:
   \   00000044   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000046   0x2963             CMP      R1,#+99
   \   00000048   0xD101             BNE.N    ??DisplayOne_7290_6
   \   0000004A   0x251A             MOVS     R5,#+26
   \   0000004C   0xE035             B.N      ??DisplayOne_7290_1
    252              else if(c == 'd')         dis = _DISP_7290_d;
   \                     ??DisplayOne_7290_6:
   \   0000004E   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000050   0x2964             CMP      R1,#+100
   \   00000052   0xD101             BNE.N    ??DisplayOne_7290_7
   \   00000054   0x257A             MOVS     R5,#+122
   \   00000056   0xE030             B.N      ??DisplayOne_7290_1
    253              else if(c == 'E')         dis = _DISP_7290_E;            
   \                     ??DisplayOne_7290_7:
   \   00000058   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   0000005A   0x2945             CMP      R1,#+69
   \   0000005C   0xD101             BNE.N    ??DisplayOne_7290_8
   \   0000005E   0x259E             MOVS     R5,#+158
   \   00000060   0xE02B             B.N      ??DisplayOne_7290_1
    254              else if(c == 'F')         dis = _DISP_7290_F;
   \                     ??DisplayOne_7290_8:
   \   00000062   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000064   0x2946             CMP      R1,#+70
   \   00000066   0xD101             BNE.N    ??DisplayOne_7290_9
   \   00000068   0x258E             MOVS     R5,#+142
   \   0000006A   0xE026             B.N      ??DisplayOne_7290_1
    255              else if(c == 'G')         dis = _DISP_7290_G;
   \                     ??DisplayOne_7290_9:
   \   0000006C   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   0000006E   0x2947             CMP      R1,#+71
   \   00000070   0xD101             BNE.N    ??DisplayOne_7290_10
   \   00000072   0x25BC             MOVS     R5,#+188
   \   00000074   0xE021             B.N      ??DisplayOne_7290_1
    256              else if(c == 'H')         dis = _DISP_7290_H;
   \                     ??DisplayOne_7290_10:
   \   00000076   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000078   0x2948             CMP      R1,#+72
   \   0000007A   0xD101             BNE.N    ??DisplayOne_7290_11
   \   0000007C   0x256E             MOVS     R5,#+110
   \   0000007E   0xE01C             B.N      ??DisplayOne_7290_1
    257              else if(c == 'J')         dis = _DISP_7290_J;
   \                     ??DisplayOne_7290_11:
   \   00000080   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000082   0x294A             CMP      R1,#+74
   \   00000084   0xD101             BNE.N    ??DisplayOne_7290_12
   \   00000086   0x2570             MOVS     R5,#+112
   \   00000088   0xE017             B.N      ??DisplayOne_7290_1
    258              else if(c == 'L')         dis = _DISP_7290_L;
   \                     ??DisplayOne_7290_12:
   \   0000008A   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   0000008C   0x294C             CMP      R1,#+76
   \   0000008E   0xD101             BNE.N    ??DisplayOne_7290_13
   \   00000090   0x251C             MOVS     R5,#+28
   \   00000092   0xE012             B.N      ??DisplayOne_7290_1
    259              else if(c == 'n')         dis = _DISP_7290_n;
   \                     ??DisplayOne_7290_13:
   \   00000094   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000096   0x296E             CMP      R1,#+110
   \   00000098   0xD101             BNE.N    ??DisplayOne_7290_14
   \   0000009A   0x252A             MOVS     R5,#+42
   \   0000009C   0xE00D             B.N      ??DisplayOne_7290_1
    260              else if(c == 'o')         dis = _DISP_7290_o;
   \                     ??DisplayOne_7290_14:
   \   0000009E   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   000000A0   0x296F             CMP      R1,#+111
   \   000000A2   0xD101             BNE.N    ??DisplayOne_7290_15
   \   000000A4   0x253A             MOVS     R5,#+58
   \   000000A6   0xE008             B.N      ??DisplayOne_7290_1
    261              else if(c == 'p')         dis = _DISP_7290_p;
   \                     ??DisplayOne_7290_15:
   \   000000A8   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   000000AA   0x2970             CMP      R1,#+112
   \   000000AC   0xD101             BNE.N    ??DisplayOne_7290_16
   \   000000AE   0x25CE             MOVS     R5,#+206
   \   000000B0   0xE003             B.N      ??DisplayOne_7290_1
    262              else if(c == 'q')         dis = _DISP_7290_q;
   \                     ??DisplayOne_7290_16:
   \   000000B2   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   000000B4   0x2971             CMP      R1,#+113
   \   000000B6   0xD100             BNE.N    ??DisplayOne_7290_1
   \   000000B8   0x25E6             MOVS     R5,#+230
    263            
    264              StartI2C_7290();
   \                     ??DisplayOne_7290_1:
   \   000000BA   0x.... 0x....      BL       StartI2C_7290
    265              WriteByteI2C_7290(SLVADDR_7290);
   \   000000BE   0x2070             MOVS     R0,#+112
   \   000000C0   0x.... 0x....      BL       WriteByteI2C_7290
    266              WackI2C_7290();
   \   000000C4   0x.... 0x....      BL       WackI2C_7290
    267          
    268              WriteByteI2C_7290(SUB_DP_RAM_7290 + pos);
   \   000000C8   0xF114 0x0010      ADDS     R0,R4,#+16
   \   000000CC   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000000CE   0x.... 0x....      BL       WriteByteI2C_7290
    269              WackI2C_7290();
   \   000000D2   0x.... 0x....      BL       WackI2C_7290
    270          
    271              WriteByteI2C_7290(dis);
   \   000000D6   0x0028             MOVS     R0,R5
   \   000000D8   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000000DA   0x.... 0x....      BL       WriteByteI2C_7290
    272              WackI2C_7290();
   \   000000DE   0x.... 0x....      BL       WackI2C_7290
    273          
    274              StopI2C_7290();
   \   000000E2   0x.... 0x....      BL       StopI2C_7290
    275              LongDelay_7290();
   \   000000E6   0x.... 0x....      BL       LongDelay_7290
    276          }
   \   000000EA   0xBD31             POP      {R0,R4,R5,PC}    ;; return
    277          /******************************************************************************
    278          * º¯ÊýÃû³Æ: DisplayValue_7290
    279          * º¯Êý¹¦ÄÜ: ÏÔÊ¾Ò»¸ö±äÁ¿(ÆäÖÐµÚ0Î»,¼´×î×ó±ßµÄÒ»Î»ÏÔÊ¾±äÁ¿Ãû³Æ,ÏÞ¶¨ÎªÒ»¸öASCII
    280          *           ×Ö·û;ºó3Î»ÎªÊýÖµ,·¶Î§-99~999).
    281          * Èë¿Ú²ÎÊý: name  ±äÁ¿Ãû³Æ(Ò»¸öASCII×Ö·û)
    282          *           value ±äÁ¿µÄÖµ(-99~999)
    283          ******************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    284          void DisplayValue_7290(unsigned char name,int value)
    285          {
   \                     DisplayValue_7290:
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0x000C             MOVS     R4,R1
    286              int uvalue;
    287            
    288              DisplayOne_7290(0, name);
   \   00000004   0x0001             MOVS     R1,R0
   \   00000006   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000008   0x2000             MOVS     R0,#+0
   \   0000000A   0x.... 0x....      BL       DisplayOne_7290
    289              if(value < 0)
   \   0000000E   0x2C00             CMP      R4,#+0
   \   00000010   0xD519             BPL.N    ??DisplayValue_7290_0
    290              {   /* ÏÔÊ¾¸ºÊý */
    291                  uvalue = -value;
   \   00000012   0x4264             RSBS     R4,R4,#+0
    292                  DisplayOne_7290(1, '-');
   \   00000014   0x212D             MOVS     R1,#+45
   \   00000016   0x2001             MOVS     R0,#+1
   \   00000018   0x.... 0x....      BL       DisplayOne_7290
    293                  DisplayOne_7290(2, '0'+uvalue/10);
   \   0000001C   0x200A             MOVS     R0,#+10
   \   0000001E   0xFB94 0xF0F0      SDIV     R0,R4,R0
   \   00000022   0xF110 0x0130      ADDS     R1,R0,#+48
   \   00000026   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000028   0x2002             MOVS     R0,#+2
   \   0000002A   0x.... 0x....      BL       DisplayOne_7290
    294                  DisplayOne_7290(3, '0'+uvalue%10);
   \   0000002E   0x200A             MOVS     R0,#+10
   \   00000030   0xFB94 0xF1F0      SDIV     R1,R4,R0
   \   00000034   0xFB00 0x4011      MLS      R0,R0,R1,R4
   \   00000038   0xF110 0x0130      ADDS     R1,R0,#+48
   \   0000003C   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   0000003E   0x2003             MOVS     R0,#+3
   \   00000040   0x.... 0x....      BL       DisplayOne_7290
   \   00000044   0xE021             B.N      ??DisplayValue_7290_1
    295              }
    296              else
    297              {   /* ÏÔÊ¾ÕýÊý */
    298                  DisplayOne_7290(1, '0'+value/100);
   \                     ??DisplayValue_7290_0:
   \   00000046   0x2064             MOVS     R0,#+100
   \   00000048   0xFB94 0xF0F0      SDIV     R0,R4,R0
   \   0000004C   0xF110 0x0130      ADDS     R1,R0,#+48
   \   00000050   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000052   0x2001             MOVS     R0,#+1
   \   00000054   0x.... 0x....      BL       DisplayOne_7290
    299                  DisplayOne_7290(2, '0'+(value/10)%10);
   \   00000058   0x200A             MOVS     R0,#+10
   \   0000005A   0xFB94 0xF0F0      SDIV     R0,R4,R0
   \   0000005E   0x210A             MOVS     R1,#+10
   \   00000060   0xFB90 0xF2F1      SDIV     R2,R0,R1
   \   00000064   0xFB01 0x0012      MLS      R0,R1,R2,R0
   \   00000068   0xF110 0x0130      ADDS     R1,R0,#+48
   \   0000006C   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   0000006E   0x2002             MOVS     R0,#+2
   \   00000070   0x.... 0x....      BL       DisplayOne_7290
    300                  DisplayOne_7290(3, '0'+value%10);
   \   00000074   0x200A             MOVS     R0,#+10
   \   00000076   0xFB94 0xF1F0      SDIV     R1,R4,R0
   \   0000007A   0xFB00 0x4011      MLS      R0,R0,R1,R4
   \   0000007E   0xF110 0x0130      ADDS     R1,R0,#+48
   \   00000082   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000084   0x2003             MOVS     R0,#+3
   \   00000086   0x.... 0x....      BL       DisplayOne_7290
    301              }
    302          }
   \                     ??DisplayValue_7290_1:
   \   0000008A   0xBD10             POP      {R4,PC}          ;; return
    303          /******************************************************************************
    304          * º¯ÊýÃû³Æ: ClearOne_7290
    305          * º¯Êý¹¦ÄÜ: Çå³ýÄ³Ò»Î»ÊýÂë¹ÜµÄÏÔÊ¾.
    306          * Èë¿Ú²ÎÊý: pos ±íÊ¾ÒªÇå³ýÄÄÒ»Î»ÊýÂë¹Ü(×î×ó±ßÎªµÚ0Î»)
    307          ******************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    308          void ClearOne_7290(unsigned char pos) 
    309          {
   \                     ClearOne_7290:
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0x0004             MOVS     R4,R0
    310              StartI2C_7290();
   \   00000004   0x.... 0x....      BL       StartI2C_7290
    311              WriteByteI2C_7290(SLVADDR_7290);
   \   00000008   0x2070             MOVS     R0,#+112
   \   0000000A   0x.... 0x....      BL       WriteByteI2C_7290
    312              WackI2C_7290();
   \   0000000E   0x.... 0x....      BL       WackI2C_7290
    313          
    314              WriteByteI2C_7290(SUB_DP_RAM_7290 + pos);
   \   00000012   0xF114 0x0010      ADDS     R0,R4,#+16
   \   00000016   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000018   0x.... 0x....      BL       WriteByteI2C_7290
    315              WackI2C_7290();
   \   0000001C   0x.... 0x....      BL       WackI2C_7290
    316          
    317              WriteByteI2C_7290(0);
   \   00000020   0x2000             MOVS     R0,#+0
   \   00000022   0x.... 0x....      BL       WriteByteI2C_7290
    318              WackI2C_7290();
   \   00000026   0x.... 0x....      BL       WackI2C_7290
    319          
    320              StopI2C_7290();
   \   0000002A   0x.... 0x....      BL       StopI2C_7290
    321              LongDelay_7290();
   \   0000002E   0x.... 0x....      BL       LongDelay_7290
    322          }
   \   00000032   0xBD10             POP      {R4,PC}          ;; return
    323          /*!
    324          **Name: KeyConvert
    325          **Description: ¼üÖµ×ª»»
    326          **Notes: 
    327          !
    328          unsigned char KeyConvert(unsigned char kkey)
    329          {
    330            unsigned char keyvalue;
    331              
    332            switch ( kkey )
    333            {
    334              case  17 :
    335                keyvalue = 1;
    336                break;
    337              case  25 :
    338                keyvalue = 2;
    339                break;      
    340              case  9  :
    341                keyvalue = 3;
    342                break;
    343              case  18 :
    344                keyvalue = 4;
    345                break; 
    346              case  26 :
    347                keyvalue = 5;
    348                break;
    349              case  10 :
    350                keyvalue = 6;
    351                break;      
    352              case  19 :
    353                keyvalue = 7;
    354                break;
    355              case  27 :
    356                keyvalue = 8;
    357                break;  
    358              case  11 :
    359                keyvalue = 9;
    360                break;
    361              case  20 :
    362                keyvalue = 10;      //N
    363                break;      
    364              case  28 :
    365                keyvalue = 0;
    366                break;
    367              case  12 :
    368                keyvalue = 11;      //Y
    369                break;   
    370            default:
    371              break;
    372            }
    373            
    374            return keyvalue;
    375          }
    376          */
    377          /******************************************************************************
    378          * º¯ÊýÃû³Æ: Readkey_7290
    379          * º¯Êý¹¦ÄÜ: ¶ÁÈ¡°´¼üÖµ.
    380          * ·µ»Ø²ÎÊý: °´¼ü¼üÖµ
    381          ******************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    382          unsigned char Readkey_7290(void)
    383          {
   \                     Readkey_7290:
   \   00000000   0xB510             PUSH     {R4,LR}
    384              unsigned char key;
    385          
    386              StartI2C_7290();
   \   00000002   0x.... 0x....      BL       StartI2C_7290
    387              WriteByteI2C_7290(SLVADDR_7290);    /* Ð´´Ó»úµØÖ·       */
   \   00000006   0x2070             MOVS     R0,#+112
   \   00000008   0x.... 0x....      BL       WriteByteI2C_7290
    388              WackI2C_7290();
   \   0000000C   0x.... 0x....      BL       WackI2C_7290
    389          
    390              WriteByteI2C_7290(SUB_KEY_7290);    /* Ð´¶ÁÈ¡»º³åÇøµØÖ· */
   \   00000010   0x2001             MOVS     R0,#+1
   \   00000012   0x.... 0x....      BL       WriteByteI2C_7290
    391              WackI2C_7290();
   \   00000016   0x.... 0x....      BL       WackI2C_7290
    392          
    393              StartI2C_7290();
   \   0000001A   0x.... 0x....      BL       StartI2C_7290
    394              WriteByteI2C_7290(SLVADDR_7290+0x01);
   \   0000001E   0x2071             MOVS     R0,#+113
   \   00000020   0x.... 0x....      BL       WriteByteI2C_7290
    395              WackI2C_7290();
   \   00000024   0x.... 0x....      BL       WackI2C_7290
    396          
    397              key = ReadByteI2C_7290();
   \   00000028   0x.... 0x....      BL       ReadByteI2C_7290
   \   0000002C   0x0004             MOVS     R4,R0
    398          
    399              StopI2C_7290();
   \   0000002E   0x.... 0x....      BL       StopI2C_7290
    400              LongDelay_7290();
   \   00000032   0x.... 0x....      BL       LongDelay_7290
    401          
    402              return key;
   \   00000036   0x0020             MOVS     R0,R4
   \   00000038   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000003A   0xBD10             POP      {R4,PC}          ;; return
    403          }
    404          
    405          /*!
    406          **Name: KeyConvert
    407          **Description: ¼üÖµ×ª»»
    408          **Notes: 
    409          !*/

   \                                 In section .text, align 2, keep-with-next
    410          unsigned char GetKeyValue(void)
    411          {
   \                     GetKeyValue:
   \   00000000   0xB580             PUSH     {R7,LR}
    412            unsigned char key;
    413            key = Readkey_7290();
   \   00000002   0x.... 0x....      BL       Readkey_7290
    414            switch(key)
   \   00000006   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000008   0x2801             CMP      R0,#+1
   \   0000000A   0xD01A             BEQ.N    ??GetKeyValue_0
   \   0000000C   0x2802             CMP      R0,#+2
   \   0000000E   0xD01E             BEQ.N    ??GetKeyValue_1
   \   00000010   0x2803             CMP      R0,#+3
   \   00000012   0xD022             BEQ.N    ??GetKeyValue_2
   \   00000014   0x2804             CMP      R0,#+4
   \   00000016   0xD026             BEQ.N    ??GetKeyValue_3
   \   00000018   0x2809             CMP      R0,#+9
   \   0000001A   0xD010             BEQ.N    ??GetKeyValue_4
   \   0000001C   0x280A             CMP      R0,#+10
   \   0000001E   0xD014             BEQ.N    ??GetKeyValue_5
   \   00000020   0x280B             CMP      R0,#+11
   \   00000022   0xD018             BEQ.N    ??GetKeyValue_6
   \   00000024   0x280C             CMP      R0,#+12
   \   00000026   0xD01A             BEQ.N    ??GetKeyValue_7
   \   00000028   0x2811             CMP      R0,#+17
   \   0000002A   0xD006             BEQ.N    ??GetKeyValue_8
   \   0000002C   0x2812             CMP      R0,#+18
   \   0000002E   0xD00A             BEQ.N    ??GetKeyValue_9
   \   00000030   0x2813             CMP      R0,#+19
   \   00000032   0xD00E             BEQ.N    ??GetKeyValue_10
   \   00000034   0x2814             CMP      R0,#+20
   \   00000036   0xD014             BEQ.N    ??GetKeyValue_11
   \   00000038   0xE017             B.N      ??GetKeyValue_12
    415            {
    416            case 0x11:
    417              return 1;
   \                     ??GetKeyValue_8:
   \   0000003A   0x2001             MOVS     R0,#+1
   \   0000003C   0xE016             B.N      ??GetKeyValue_13
    418            case 0x09:
    419              return 2;
   \                     ??GetKeyValue_4:
   \   0000003E   0x2002             MOVS     R0,#+2
   \   00000040   0xE014             B.N      ??GetKeyValue_13
    420            case 0x01:
    421              return 3;
   \                     ??GetKeyValue_0:
   \   00000042   0x2003             MOVS     R0,#+3
   \   00000044   0xE012             B.N      ??GetKeyValue_13
    422            case 0x12:
    423              return 4;
   \                     ??GetKeyValue_9:
   \   00000046   0x2004             MOVS     R0,#+4
   \   00000048   0xE010             B.N      ??GetKeyValue_13
    424            case 0x0A:
    425              return 5;
   \                     ??GetKeyValue_5:
   \   0000004A   0x2005             MOVS     R0,#+5
   \   0000004C   0xE00E             B.N      ??GetKeyValue_13
    426            case 0x02:
    427              return 6;
   \                     ??GetKeyValue_1:
   \   0000004E   0x2006             MOVS     R0,#+6
   \   00000050   0xE00C             B.N      ??GetKeyValue_13
    428            case 0x13:
    429              return 7;
   \                     ??GetKeyValue_10:
   \   00000052   0x2007             MOVS     R0,#+7
   \   00000054   0xE00A             B.N      ??GetKeyValue_13
    430            case 0x0B:
    431              return 8;
   \                     ??GetKeyValue_6:
   \   00000056   0x2008             MOVS     R0,#+8
   \   00000058   0xE008             B.N      ??GetKeyValue_13
    432            case 0x03:
    433              return 9;
   \                     ??GetKeyValue_2:
   \   0000005A   0x2009             MOVS     R0,#+9
   \   0000005C   0xE006             B.N      ??GetKeyValue_13
    434            case 0x0C:
    435              return 0;
   \                     ??GetKeyValue_7:
   \   0000005E   0x2000             MOVS     R0,#+0
   \   00000060   0xE004             B.N      ??GetKeyValue_13
    436            case 0x14:
    437              return 'N';
   \                     ??GetKeyValue_11:
   \   00000062   0x204E             MOVS     R0,#+78
   \   00000064   0xE002             B.N      ??GetKeyValue_13
    438            case 0x04:
    439              return 'Y';
   \                     ??GetKeyValue_3:
   \   00000066   0x2059             MOVS     R0,#+89
   \   00000068   0xE000             B.N      ??GetKeyValue_13
    440            default:
    441              return 'E';   //±íÊ¾error
   \                     ??GetKeyValue_12:
   \   0000006A   0x2045             MOVS     R0,#+69
   \                     ??GetKeyValue_13:
   \   0000006C   0xBD02             POP      {R1,PC}          ;; return
    442            }
    443          }

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6:
   \   00000000   0x400FF114         DC32     0x400ff114

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_1:
   \   00000000   0x400FF104         DC32     0x400ff104

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_2:
   \   00000000   0x400FF108         DC32     0x400ff108

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_3:
   \   00000000   0x400FF110         DC32     0x400ff110

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_4:
   \   00000000   0x4004D008         DC32     0x4004d008

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_5:
   \   00000000   0x4004D00C         DC32     0x4004d00c

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_6:
   \   00000000   0x4004D000         DC32     0x4004d000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_7:
   \   00000000   0x........         DC32     DigTab_7290
    444          /******************************************************************************
    445          * º¯ÊýÃû³Æ: SetParam_7290
    446          * º¯Êý¹¦ÄÜ: ÀûÓÃ7290½øÐÐ²ÎÊýÉè¶¨.
    447          * Èë¿Ú²ÎÊý: name   ²ÎÊýÃû³Æ(Ò»¸öASCII×Ö·û)
    448          *           value  ²ÎÊýµÄ³õÊ¼Öµ(0~9999)
    449          * ·µ»Ø²ÎÊý: Éè¶¨½á¹û(0-9999)
    450          ******************************************************************************
    451          void SetParam_7290( unsigned char name[], 
    452                              unsigned int  value,
    453                              unsigned int  row,
    454                              int16u_t* setparam )
    455          {
    456              unsigned char key, dat[4] = {0}, dis[5] = {0};
    457              unsigned int  pos = 0, flash = 0;
    458              int16u_t cnt1 = 0, cnt2 = 0;
    459              
    460              if(value < 1000) dat[0] = 0;
    461              else dat[0] = value / 1000;
    462              dat[1] = value / 100 % 10;
    463              dat[2] = value / 10 % 10;
    464              dat[3] = value % 10;
    465          
    466              dis[0] = dat[0] + 0x30;
    467              dis[1] = dat[1] + 0x30;
    468              dis[2] = dat[2] + 0x30;
    469              dis[3] = dat[3] + 0x30;
    470              dis[4] = '\0';
    471              
    472              
    473              * ²ÎÊýÏÔÊ¾ *
    474              OLED_P8x16Str(0, row, name); 
    475              OLED_P8x16Str(82, row, dis);
    476              
    477              do
    478              {        
    479          
    480                * µÈ´ý°´¼ü°´ÏÂ,ÉÁË¸µÈ´ý *
    481                   while(!TEST_KEY_7290()) 
    482                  {
    483                    cnt1++;
    484                    if(cnt1 == 100 && flash == 0)
    485                    {
    486                      cnt2 ++;
    487                      cnt1 = 0;
    488                      if(cnt2 == 10000)
    489                      {
    490                        OLED_P8x16_Clr_One(82+8*pos, row);
    491                        cnt1 = 0; cnt2 = 0;
    492                        flash = 1;
    493                      }
    494                    }
    495          
    496                    if(cnt1 == 100 && flash ==1)
    497                    {
    498                      cnt2 ++;
    499                      cnt1 = 0;
    500                      if(cnt2 == 10000)
    501                      {
    502                        OLED_P8x16Str(82, row, dis);
    503                        cnt1 = 0; cnt2 = 0;
    504                        flash = 0;
    505                      }
    506                    }
    507                  }
    508                  
    509                  * °´¼ü¶ÁÈ¡ *
    510                  key = Readkey_7290();
    511                  
    512                  key = KeyConvert(key);
    513                 
    514                  * ÐÞ¸Ä²ÎÊý²¢¸üÐÂÏÔÊ¾ *
    515                  if(key < 10)
    516                  {     
    517                      dat[pos] = key;
    518                      dis[pos] = dat[pos] + 0x30;
    519                      OLED_P8x16Str(82, row, dis);
    520                      if(++pos == 4) pos = 0;
    521                  }
    522              }
    523              while(key != 11);            * È·ÈÏ¼ü¶ÔÓ¦µÄ¼üÖµÎª11 *
    524              OLED_P8x16Str(82, row, dis);
    525              
    526              * ·µ»ØÉè¶¨½á¹û *
    527              *setparam = dat[0] * 1000 + dat[1] * 100 + dat[2] * 10 + dat[3];
    528                     
    529              //Delay_ms(500);
    530          }
    531          ******************************************************************************
    532          * º¯ÊýÃû³Æ: SetFloatParam_7290
    533          * º¯Êý¹¦ÄÜ: ÀûÓÃ7290½øÐÐ¸¡µã²ÎÊýÉè¶¨.
    534          * Èë¿Ú²ÎÊý: name   ²ÎÊýÃû³Æ(Ò»¸öASCII×Ö·û)
    535          *           value  ²ÎÊýµÄ³õÊ¼Öµ(00.00¸ñÊ½)
    536                      row    ÉèÖÃÓï¾äÔÚOLEDÏÔÊ¾µÄÐÐ(0~7)
    537          * ·µ»Ø²ÎÊý: Éè¶¨½á¹û(0-9999)
    538          ******************************************************************************
    539          char SetFloatParam_7290( unsigned char name[], 
    540                                   float  tempvalue,
    541                                   unsigned int  row,
    542                                   float* setparam )
    543          {
    544              unsigned char key, dat[5] = {0}, dis[6] = {0};
    545              unsigned int  pos = 0, flash = 0;
    546              int16u_t cnt1 = 0, cnt2 = 0;
    547              int16u_t value = 0;
    548              
    549              value = (int16u_t)(tempvalue * 100);
    550          
    551              if(value < 1000) dat[0] = 0;
    552              else dat[0] = value / 1000;
    553              dat[1] = value / 100 % 10;
    554              dat[3] = value / 10 % 10;
    555              dat[4] = value % 10;
    556          
    557              dis[0] = dat[0] + 0x30;
    558              dis[1] = dat[1] + 0x30;
    559              dis[2] = '.';
    560              dis[3] = dat[3] + 0x30;
    561              dis[4] = dat[4] + 0x30;
    562              dis[5] = '\0';
    563              
    564              
    565              * ²ÎÊýÏÔÊ¾ *
    566              OLED_P8x16Str(0, row, name); 
    567              OLED_P8x16Str(82, row, dis);
    568              
    569              do
    570              {        
    571                  * µÈ´ý°´¼ü°´ÏÂ *
    572                  while(!TEST_KEY_7290()) 
    573                  {
    574                    cnt1++;
    575                    if(cnt1 == 100 && flash == 0)
    576                    {
    577                      cnt2 ++;
    578                      cnt1 = 0;
    579                      if(cnt2 == 10000)
    580                      {
    581                        OLED_P8x16_Clr_One(82+8*pos, row);
    582                        cnt1 = 0; cnt2 = 0;
    583                        flash = 1;
    584                      }
    585                    }
    586          
    587                    if(cnt1 == 100 && flash ==1)
    588                    {
    589                      cnt2 ++;
    590                      cnt1 = 0;
    591                      if(cnt2 == 10000)
    592                      {
    593                        OLED_P8x16Str(82, row, dis);
    594                        cnt1 = 0; cnt2 = 0;
    595                        flash = 0;
    596                      }
    597                    }
    598                  }
    599          
    600                  * °´¼ü¶ÁÈ¡ *
    601                  key = Readkey_7290();
    602                  
    603                  if(key == 20)
    604                    return 1;
    605                  
    606                  key = KeyConvert(key);
    607                 
    608                  * ÐÞ¸Ä²ÎÊý²¢¸üÐÂÏÔÊ¾ *
    609                  if(key < 10)
    610                  {
    611                      dat[pos] = key;
    612                      dis[pos] = dat[pos] + 0x30;
    613                      OLED_P8x16Str(82, row, dis);
    614                      if(++pos == 5) pos = 0;
    615                      if(pos == 2) pos = 3;
    616                  }
    617              }
    618              while(key != 11);            * È·ÈÏ¼ü¶ÔÓ¦µÄ¼üÖµÎª11 *
    619              OLED_P8x16Str(82, row, dis);
    620              
    621              * ·µ»ØÉè¶¨½á¹û *
    622              *setparam = ((float)dat[0]) * 10 + ((float)dat[1])  + ((float)dat[3]) / 10 + ((float)dat[4]) / 100;
    623              return 0;
    624              //Delay_ms(500);
    625          }
    626          */

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
        8  ClearOne_7290
              8 -> LongDelay_7290
              8 -> StartI2C_7290
              8 -> StopI2C_7290
              8 -> WackI2C_7290
              8 -> WriteByteI2C_7290
       16  DisplayOne_7290
             16 -> LongDelay_7290
             16 -> StartI2C_7290
             16 -> StopI2C_7290
             16 -> WackI2C_7290
             16 -> WriteByteI2C_7290
        8  DisplayValue_7290
              8 -> DisplayOne_7290
        8  GetKeyValue
              8 -> Readkey_7290
        8  Init_7290
              8 -> LongDelay_7290
              8 -> StartI2C_7290
              8 -> StopI2C_7290
              8 -> WackI2C_7290
              8 -> WriteByteI2C_7290
        8  LongDelay_7290
       16  ReadByteI2C_7290
             16 -> ShortDelay_7290
        8  Readkey_7290
              8 -> LongDelay_7290
              8 -> ReadByteI2C_7290
              8 -> StartI2C_7290
              8 -> StopI2C_7290
              8 -> WackI2C_7290
              8 -> WriteByteI2C_7290
        8  ShortDelay_7290
        8  StartI2C_7290
              8 -> ShortDelay_7290
        8  StopI2C_7290
              8 -> ShortDelay_7290
        8  WackI2C_7290
              8 -> ShortDelay_7290
       16  WriteByteI2C_7290
             16 -> ShortDelay_7290


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable6
       4  ??DataTable6_1
       4  ??DataTable6_2
       4  ??DataTable6_3
       4  ??DataTable6_4
       4  ??DataTable6_5
       4  ??DataTable6_6
       4  ??DataTable6_7
      52  ClearOne_7290
      12  DigTab_7290
     236  DisplayOne_7290
     140  DisplayValue_7290
     110  GetKeyValue
      82  Init_7290
      44  LongDelay_7290
     218  ReadByteI2C_7290
      60  Readkey_7290
      38  ShortDelay_7290
     120  StartI2C_7290
     120  StopI2C_7290
     144  WackI2C_7290
     206  WriteByteI2C_7290

 
    12 bytes in section .rodata
 1 602 bytes in section .text
 
 1 602 bytes of CODE  memory
    12 bytes of CONST memory

Errors: none
Warnings: none
