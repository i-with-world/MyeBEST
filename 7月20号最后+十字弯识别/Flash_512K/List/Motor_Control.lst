###############################################################################
#                                                                             #
#                                                       14/Oct/2013  15:16:32 #
# IAR ANSI C/C++ Compiler V6.30.6.23336/W32 EVALUATION for ARM                #
# Copyright 1999-2012 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  thumb                                                    #
#    Endian       =  little                                                   #
#    Source file  =  C:\Users\qlalxx\Desktop\fighting\MyFunction\Motor_Contro #
#                    l.c                                                      #
#    Command line =  C:\Users\qlalxx\Desktop\fighting\MyFunction\Motor_Contro #
#                    l.c -D IAR -lCN C:\Users\qlalxx\Desktop\fighting\Flash_5 #
#                    12K\List\ -lB C:\Users\qlalxx\Desktop\fighting\Flash_512 #
#                    K\List\ -o C:\Users\qlalxx\Desktop\fighting\Flash_512K\O #
#                    bj\ --no_cse --no_unroll --no_inline --no_code_motion    #
#                    --no_tbaa --no_clustering --no_scheduling --debug        #
#                    --endian=little --cpu=Cortex-M4 -e --fpu=None            #
#                    --dlib_config "C:\Program Files\IAR Systems\Embedded     #
#                    Workbench 6.0 Evaluation\arm\INC\c\DLib_Config_Normal.h" #
#                     -I C:\Users\qlalxx\Desktop\fighting\Library\CPU\ -I     #
#                    C:\Users\qlalxx\Desktop\fighting\Library\Drivers\ADC\    #
#                    -I C:\Users\qlalxx\Desktop\fighting\Library\Drivers\FTM\ #
#                     -I C:\Users\qlalxx\Desktop\fighting\Library\Drivers\GPI #
#                    O\ -I C:\Users\qlalxx\Desktop\fighting\Library\Drivers\P #
#                    IT\ -I C:\Users\qlalxx\Desktop\fighting\MyFunction\ -I   #
#                    C:\Users\qlalxx\Desktop\fighting\SD_System\ -Ol          #
#    List file    =  C:\Users\qlalxx\Desktop\fighting\Flash_512K\List\Motor_C #
#                    ontrol.lst                                               #
#    Object file  =  C:\Users\qlalxx\Desktop\fighting\Flash_512K\Obj\Motor_Co #
#                    ntrol.o                                                  #
#                                                                             #
#                                                                             #
###############################################################################

C:\Users\qlalxx\Desktop\fighting\MyFunction\Motor_Control.c
      1          #include "AllHeaders.h"
      2          
      3          /********************电机输出相关量定义*********************/

   \                                 In section .bss, align 2
      4          int16s_t  ObjectSpeed=0;	                 //目标速度
   \                     ObjectSpeed:
   \   00000000                      DS8 2

   \                                 In section .bss, align 1
      5          int8u_t   closeMotorFlag = 0;
   \                     closeMotorFlag:
   \   00000000                      DS8 1

   \                                 In section .bss, align 2
      6          int16s_t  nLeftSpd = 0;
   \                     nLeftSpd:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
      7          int16s_t  nRightSpd = 0;
   \                     nRightSpd:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
      8          int16u_t  carCrazyCnt = 0;
   \                     carCrazyCnt:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
      9          int16s_t g_nLeftMotorOut;
   \                     g_nLeftMotorOut:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
     10          int16s_t g_nRightMotorOut;
   \                     g_nRightMotorOut:
   \   00000000                      DS8 2
     11          
     12          
     13          
     14          
     15          
     16          
     17          /*******************************************************************************
     18          * 函数名称：Motor_Control
     19          * 描    述：电机输出控制
     20          *******************************************************************************/

   \                                 In section .text, align 2, keep-with-next
     21          void Motor_Control(void) 
     22          {   
   \                     Motor_Control:
   \   00000000   0xB580             PUSH     {R7,LR}
     23           
     24            nLeftSpd = g_nLeftMotorOut;
   \   00000002   0x....             LDR.N    R0,??DataTable2
   \   00000004   0x....             LDR.N    R1,??DataTable2_1
   \   00000006   0x8809             LDRH     R1,[R1, #+0]
   \   00000008   0x8001             STRH     R1,[R0, #+0]
     25            nRightSpd = g_nRightMotorOut;
   \   0000000A   0x....             LDR.N    R0,??DataTable2_2
   \   0000000C   0x....             LDR.N    R1,??DataTable2_3
   \   0000000E   0x8809             LDRH     R1,[R1, #+0]
   \   00000010   0x8001             STRH     R1,[R0, #+0]
     26            
     27            if(nLeftSpd > 0) 		
   \   00000012   0x....             LDR.N    R0,??DataTable2
   \   00000014   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   00000018   0x2801             CMP      R0,#+1
   \   0000001A   0xDB05             BLT.N    ??Motor_Control_0
     28               nLeftSpd += MOTOR_OUT_DEADVAL_L;
   \   0000001C   0x....             LDR.N    R0,??DataTable2
   \   0000001E   0x8800             LDRH     R0,[R0, #+0]
   \   00000020   0x300F             ADDS     R0,R0,#+15
   \   00000022   0x....             LDR.N    R1,??DataTable2
   \   00000024   0x8008             STRH     R0,[R1, #+0]
   \   00000026   0xE009             B.N      ??Motor_Control_1
     29            else if(nLeftSpd < 0) 
   \                     ??Motor_Control_0:
   \   00000028   0x....             LDR.N    R0,??DataTable2
   \   0000002A   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   0000002E   0x2800             CMP      R0,#+0
   \   00000030   0xD504             BPL.N    ??Motor_Control_1
     30               nLeftSpd -= MOTOR_OUT_DEADVAL_L;  
   \   00000032   0x....             LDR.N    R0,??DataTable2
   \   00000034   0x8800             LDRH     R0,[R0, #+0]
   \   00000036   0x380F             SUBS     R0,R0,#+15
   \   00000038   0x....             LDR.N    R1,??DataTable2
   \   0000003A   0x8008             STRH     R0,[R1, #+0]
     31            if(nRightSpd > 0) 		
   \                     ??Motor_Control_1:
   \   0000003C   0x....             LDR.N    R0,??DataTable2_2
   \   0000003E   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   00000042   0x2801             CMP      R0,#+1
   \   00000044   0xDB05             BLT.N    ??Motor_Control_2
     32               nRightSpd += MOTOR_OUT_DEADVAL_R;
   \   00000046   0x....             LDR.N    R0,??DataTable2_2
   \   00000048   0x8800             LDRH     R0,[R0, #+0]
   \   0000004A   0x300A             ADDS     R0,R0,#+10
   \   0000004C   0x....             LDR.N    R1,??DataTable2_2
   \   0000004E   0x8008             STRH     R0,[R1, #+0]
   \   00000050   0xE009             B.N      ??Motor_Control_3
     33            else if(nRightSpd < 0) 
   \                     ??Motor_Control_2:
   \   00000052   0x....             LDR.N    R0,??DataTable2_2
   \   00000054   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   00000058   0x2800             CMP      R0,#+0
   \   0000005A   0xD504             BPL.N    ??Motor_Control_3
     34               nRightSpd -= MOTOR_OUT_DEADVAL_R;
   \   0000005C   0x....             LDR.N    R0,??DataTable2_2
   \   0000005E   0x8800             LDRH     R0,[R0, #+0]
   \   00000060   0x380A             SUBS     R0,R0,#+10
   \   00000062   0x....             LDR.N    R1,??DataTable2_2
   \   00000064   0x8008             STRH     R0,[R1, #+0]
     35           
     36            
     37            if( nRightSpd > MOTOR_SPEED_SET_MAX) nRightSpd = MOTOR_SPEED_SET_MAX; 
   \                     ??Motor_Control_3:
   \   00000066   0x....             LDR.N    R0,??DataTable2_2
   \   00000068   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   0000006C   0xF240 0x5115      MOVW     R1,#+1301
   \   00000070   0x4288             CMP      R0,R1
   \   00000072   0xDB03             BLT.N    ??Motor_Control_4
   \   00000074   0x....             LDR.N    R0,??DataTable2_2
   \   00000076   0xF240 0x5114      MOVW     R1,#+1300
   \   0000007A   0x8001             STRH     R1,[R0, #+0]
     38            if( nLeftSpd > MOTOR_SPEED_SET_MAX)  nLeftSpd = MOTOR_SPEED_SET_MAX;
   \                     ??Motor_Control_4:
   \   0000007C   0x....             LDR.N    R0,??DataTable2
   \   0000007E   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   00000082   0xF240 0x5115      MOVW     R1,#+1301
   \   00000086   0x4288             CMP      R0,R1
   \   00000088   0xDB03             BLT.N    ??Motor_Control_5
   \   0000008A   0x....             LDR.N    R0,??DataTable2
   \   0000008C   0xF240 0x5114      MOVW     R1,#+1300
   \   00000090   0x8001             STRH     R1,[R0, #+0]
     39            if( nRightSpd < MOTOR_SPEED_SET_MIN) nRightSpd = MOTOR_SPEED_SET_MIN; 
   \                     ??Motor_Control_5:
   \   00000092   0x....             LDR.N    R0,??DataTable2_2
   \   00000094   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   00000098   0x....             LDR.N    R1,??DataTable2_4  ;; 0xfffffaec
   \   0000009A   0x4288             CMP      R0,R1
   \   0000009C   0xDA02             BGE.N    ??Motor_Control_6
   \   0000009E   0x....             LDR.N    R0,??DataTable2_2
   \   000000A0   0x....             LDR.N    R1,??DataTable2_4  ;; 0xfffffaec
   \   000000A2   0x8001             STRH     R1,[R0, #+0]
     40            if( nLeftSpd < MOTOR_SPEED_SET_MIN)  nLeftSpd = MOTOR_SPEED_SET_MIN;
   \                     ??Motor_Control_6:
   \   000000A4   0x....             LDR.N    R0,??DataTable2
   \   000000A6   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   000000AA   0x....             LDR.N    R1,??DataTable2_4  ;; 0xfffffaec
   \   000000AC   0x4288             CMP      R0,R1
   \   000000AE   0xDA02             BGE.N    ??Motor_Control_7
   \   000000B0   0x....             LDR.N    R0,??DataTable2
   \   000000B2   0x....             LDR.N    R1,??DataTable2_4  ;; 0xfffffaec
   \   000000B4   0x8001             STRH     R1,[R0, #+0]
     41             
     42            Motor_Control_L();
   \                     ??Motor_Control_7:
   \   000000B6   0x.... 0x....      BL       Motor_Control_L
     43            Motor_Control_R();
   \   000000BA   0x.... 0x....      BL       Motor_Control_R
     44          }
   \   000000BE   0xBD01             POP      {R0,PC}          ;; return
     45          
     46          /*******************************************************************************
     47          * 函数名称：Motor_Control_L
     48          * 描    述：左电机输出控制
     49          *******************************************************************************/

   \                                 In section .text, align 2, keep-with-next
     50          void Motor_Control_L(void)
     51          {
   \                     Motor_Control_L:
   \   00000000   0xB580             PUSH     {R7,LR}
     52            static int8s_t direction_L = 1;
     53            
     54            if(nLeftSpd>=0) 
   \   00000002   0x....             LDR.N    R0,??DataTable2
   \   00000004   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   00000008   0x2800             CMP      R0,#+0
   \   0000000A   0xD436             BMI.N    ??Motor_Control_L_0
     55            {
     56              if(direction_L==1)
   \   0000000C   0x....             LDR.N    R0,??DataTable2_5
   \   0000000E   0xF990 0x0000      LDRSB    R0,[R0, #+0]
   \   00000012   0x2801             CMP      R0,#+1
   \   00000014   0xD10E             BNE.N    ??Motor_Control_L_1
     57              {
     58                FTM_setPWMDty(FTM0, 0, nLeftSpd);
   \   00000016   0x....             LDR.N    R0,??DataTable2
   \   00000018   0x8802             LDRH     R2,[R0, #+0]
   \   0000001A   0xB292             UXTH     R2,R2            ;; ZeroExt  R2,R2,#+16,#+16
   \   0000001C   0x2100             MOVS     R1,#+0
   \   0000001E   0x....             LDR.N    R0,??DataTable2_6  ;; 0x40038000
   \   00000020   0x.... 0x....      BL       FTM_setPWMDty
     59                FTM_setPWMDty(FTM0, 4, 0);
   \   00000024   0x2200             MOVS     R2,#+0
   \   00000026   0x2104             MOVS     R1,#+4
   \   00000028   0x....             LDR.N    R0,??DataTable2_6  ;; 0x40038000
   \   0000002A   0x.... 0x....      BL       FTM_setPWMDty
     60                direction_L=1;
   \   0000002E   0x....             LDR.N    R0,??DataTable2_5
   \   00000030   0x2101             MOVS     R1,#+1
   \   00000032   0x7001             STRB     R1,[R0, #+0]
     61              }
     62              if(direction_L==-1)
   \                     ??Motor_Control_L_1:
   \   00000034   0x....             LDR.N    R0,??DataTable2_5
   \   00000036   0xF990 0x0000      LDRSB    R0,[R0, #+0]
   \   0000003A   0xF05F 0x31FF      MOVS     R1,#-1
   \   0000003E   0x4288             CMP      R0,R1
   \   00000040   0xD11B             BNE.N    ??Motor_Control_L_0
     63              {
     64                FTM_setPWMDty(FTM0, 0, 0);
   \   00000042   0x2200             MOVS     R2,#+0
   \   00000044   0x2100             MOVS     R1,#+0
   \   00000046   0x....             LDR.N    R0,??DataTable2_6  ;; 0x40038000
   \   00000048   0x.... 0x....      BL       FTM_setPWMDty
     65                FTM_setPWMDty(FTM0, 4, 0);
   \   0000004C   0x2200             MOVS     R2,#+0
   \   0000004E   0x2104             MOVS     R1,#+4
   \   00000050   0x....             LDR.N    R0,??DataTable2_6  ;; 0x40038000
   \   00000052   0x.... 0x....      BL       FTM_setPWMDty
     66                
     67                Delay1(60);
   \   00000056   0x203C             MOVS     R0,#+60
   \   00000058   0x.... 0x....      BL       Delay1
     68                
     69                FTM_setPWMDty(FTM0, 0, nLeftSpd);
   \   0000005C   0x....             LDR.N    R0,??DataTable2
   \   0000005E   0x8802             LDRH     R2,[R0, #+0]
   \   00000060   0xB292             UXTH     R2,R2            ;; ZeroExt  R2,R2,#+16,#+16
   \   00000062   0x2100             MOVS     R1,#+0
   \   00000064   0x....             LDR.N    R0,??DataTable2_6  ;; 0x40038000
   \   00000066   0x.... 0x....      BL       FTM_setPWMDty
     70                FTM_setPWMDty(FTM0, 4, 0);
   \   0000006A   0x2200             MOVS     R2,#+0
   \   0000006C   0x2104             MOVS     R1,#+4
   \   0000006E   0x....             LDR.N    R0,??DataTable2_6  ;; 0x40038000
   \   00000070   0x.... 0x....      BL       FTM_setPWMDty
     71                direction_L=1;
   \   00000074   0x....             LDR.N    R0,??DataTable2_5
   \   00000076   0x2101             MOVS     R1,#+1
   \   00000078   0x7001             STRB     R1,[R0, #+0]
     72              } 
     73            }
     74            if(nLeftSpd<0)
   \                     ??Motor_Control_L_0:
   \   0000007A   0x....             LDR.N    R0,??DataTable2
   \   0000007C   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   00000080   0x2800             CMP      R0,#+0
   \   00000082   0xD53C             BPL.N    ??Motor_Control_L_2
     75            {
     76              if(direction_L==1)
   \   00000084   0x....             LDR.N    R0,??DataTable2_5
   \   00000086   0xF990 0x0000      LDRSB    R0,[R0, #+0]
   \   0000008A   0x2801             CMP      R0,#+1
   \   0000008C   0xD11E             BNE.N    ??Motor_Control_L_3
     77              {
     78                FTM_setPWMDty(FTM0, 0, 0);
   \   0000008E   0x2200             MOVS     R2,#+0
   \   00000090   0x2100             MOVS     R1,#+0
   \   00000092   0x....             LDR.N    R0,??DataTable2_6  ;; 0x40038000
   \   00000094   0x.... 0x....      BL       FTM_setPWMDty
     79                FTM_setPWMDty(FTM0, 4, 0);
   \   00000098   0x2200             MOVS     R2,#+0
   \   0000009A   0x2104             MOVS     R1,#+4
   \   0000009C   0x....             LDR.N    R0,??DataTable2_6  ;; 0x40038000
   \   0000009E   0x.... 0x....      BL       FTM_setPWMDty
     80                
     81                Delay1(60);
   \   000000A2   0x203C             MOVS     R0,#+60
   \   000000A4   0x.... 0x....      BL       Delay1
     82                
     83                FTM_setPWMDty(FTM0, 0, 0);
   \   000000A8   0x2200             MOVS     R2,#+0
   \   000000AA   0x2100             MOVS     R1,#+0
   \   000000AC   0x....             LDR.N    R0,??DataTable2_6  ;; 0x40038000
   \   000000AE   0x.... 0x....      BL       FTM_setPWMDty
     84                FTM_setPWMDty(FTM0, 4, -nLeftSpd);
   \   000000B2   0x....             LDR.N    R0,??DataTable2
   \   000000B4   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   000000B8   0x4242             RSBS     R2,R0,#+0
   \   000000BA   0xB292             UXTH     R2,R2            ;; ZeroExt  R2,R2,#+16,#+16
   \   000000BC   0x2104             MOVS     R1,#+4
   \   000000BE   0x....             LDR.N    R0,??DataTable2_6  ;; 0x40038000
   \   000000C0   0x.... 0x....      BL       FTM_setPWMDty
     85                direction_L=-1;  
   \   000000C4   0x....             LDR.N    R0,??DataTable2_5
   \   000000C6   0xF05F 0x31FF      MOVS     R1,#-1
   \   000000CA   0x7001             STRB     R1,[R0, #+0]
     86              }
     87              if(direction_L==-1)
   \                     ??Motor_Control_L_3:
   \   000000CC   0x....             LDR.N    R0,??DataTable2_5
   \   000000CE   0xF990 0x0000      LDRSB    R0,[R0, #+0]
   \   000000D2   0xF05F 0x31FF      MOVS     R1,#-1
   \   000000D6   0x4288             CMP      R0,R1
   \   000000D8   0xD111             BNE.N    ??Motor_Control_L_2
     88              {
     89                FTM_setPWMDty(FTM0, 0, 0);
   \   000000DA   0x2200             MOVS     R2,#+0
   \   000000DC   0x2100             MOVS     R1,#+0
   \   000000DE   0x....             LDR.N    R0,??DataTable2_6  ;; 0x40038000
   \   000000E0   0x.... 0x....      BL       FTM_setPWMDty
     90                FTM_setPWMDty(FTM0, 4, -nLeftSpd);
   \   000000E4   0x....             LDR.N    R0,??DataTable2
   \   000000E6   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   000000EA   0x4242             RSBS     R2,R0,#+0
   \   000000EC   0xB292             UXTH     R2,R2            ;; ZeroExt  R2,R2,#+16,#+16
   \   000000EE   0x2104             MOVS     R1,#+4
   \   000000F0   0x....             LDR.N    R0,??DataTable2_6  ;; 0x40038000
   \   000000F2   0x.... 0x....      BL       FTM_setPWMDty
     91                direction_L=-1;
   \   000000F6   0x....             LDR.N    R0,??DataTable2_5
   \   000000F8   0xF05F 0x31FF      MOVS     R1,#-1
   \   000000FC   0x7001             STRB     R1,[R0, #+0]
     92              }
     93            }
     94          }
   \                     ??Motor_Control_L_2:
   \   000000FE   0xBD01             POP      {R0,PC}          ;; return

   \                                 In section .data, align 1
   \                     ??direction_L:
   \   00000000   0x01               DC8 1
     95          
     96          /*******************************************************************************
     97          * 函数名称：Motor_Control_R
     98          * 描    述：右电机输出控制
     99          *******************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    100          void Motor_Control_R(void)
    101          {
   \                     Motor_Control_R:
   \   00000000   0xB580             PUSH     {R7,LR}
    102            static int8s_t direction_R = 1;
    103            
    104            if(nRightSpd>=0) 
   \   00000002   0x....             LDR.N    R0,??DataTable2_2
   \   00000004   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   00000008   0x2800             CMP      R0,#+0
   \   0000000A   0xD436             BMI.N    ??Motor_Control_R_0
    105            {
    106              if(direction_R==1)
   \   0000000C   0x....             LDR.N    R0,??DataTable2_7
   \   0000000E   0xF990 0x0000      LDRSB    R0,[R0, #+0]
   \   00000012   0x2801             CMP      R0,#+1
   \   00000014   0xD10E             BNE.N    ??Motor_Control_R_1
    107              {       
    108                FTM_setPWMDty(FTM0, 2, nRightSpd);
   \   00000016   0x....             LDR.N    R0,??DataTable2_2
   \   00000018   0x8802             LDRH     R2,[R0, #+0]
   \   0000001A   0xB292             UXTH     R2,R2            ;; ZeroExt  R2,R2,#+16,#+16
   \   0000001C   0x2102             MOVS     R1,#+2
   \   0000001E   0x....             LDR.N    R0,??DataTable2_6  ;; 0x40038000
   \   00000020   0x.... 0x....      BL       FTM_setPWMDty
    109                FTM_setPWMDty(FTM0, 6, 0);
   \   00000024   0x2200             MOVS     R2,#+0
   \   00000026   0x2106             MOVS     R1,#+6
   \   00000028   0x....             LDR.N    R0,??DataTable2_6  ;; 0x40038000
   \   0000002A   0x.... 0x....      BL       FTM_setPWMDty
    110                direction_R=1;
   \   0000002E   0x....             LDR.N    R0,??DataTable2_7
   \   00000030   0x2101             MOVS     R1,#+1
   \   00000032   0x7001             STRB     R1,[R0, #+0]
    111              }
    112              if(direction_R==-1)
   \                     ??Motor_Control_R_1:
   \   00000034   0x....             LDR.N    R0,??DataTable2_7
   \   00000036   0xF990 0x0000      LDRSB    R0,[R0, #+0]
   \   0000003A   0xF05F 0x31FF      MOVS     R1,#-1
   \   0000003E   0x4288             CMP      R0,R1
   \   00000040   0xD11B             BNE.N    ??Motor_Control_R_0
    113              {
    114                FTM_setPWMDty(FTM0, 2, 0);
   \   00000042   0x2200             MOVS     R2,#+0
   \   00000044   0x2102             MOVS     R1,#+2
   \   00000046   0x....             LDR.N    R0,??DataTable2_6  ;; 0x40038000
   \   00000048   0x.... 0x....      BL       FTM_setPWMDty
    115                FTM_setPWMDty(FTM0, 6, 0); 
   \   0000004C   0x2200             MOVS     R2,#+0
   \   0000004E   0x2106             MOVS     R1,#+6
   \   00000050   0x....             LDR.N    R0,??DataTable2_6  ;; 0x40038000
   \   00000052   0x.... 0x....      BL       FTM_setPWMDty
    116                
    117                Delay1(60); 
   \   00000056   0x203C             MOVS     R0,#+60
   \   00000058   0x.... 0x....      BL       Delay1
    118                
    119                FTM_setPWMDty(FTM0, 2, nRightSpd);
   \   0000005C   0x....             LDR.N    R0,??DataTable2_2
   \   0000005E   0x8802             LDRH     R2,[R0, #+0]
   \   00000060   0xB292             UXTH     R2,R2            ;; ZeroExt  R2,R2,#+16,#+16
   \   00000062   0x2102             MOVS     R1,#+2
   \   00000064   0x....             LDR.N    R0,??DataTable2_6  ;; 0x40038000
   \   00000066   0x.... 0x....      BL       FTM_setPWMDty
    120                FTM_setPWMDty(FTM0, 6, 0);
   \   0000006A   0x2200             MOVS     R2,#+0
   \   0000006C   0x2106             MOVS     R1,#+6
   \   0000006E   0x....             LDR.N    R0,??DataTable2_6  ;; 0x40038000
   \   00000070   0x.... 0x....      BL       FTM_setPWMDty
    121                direction_R=1;
   \   00000074   0x....             LDR.N    R0,??DataTable2_7
   \   00000076   0x2101             MOVS     R1,#+1
   \   00000078   0x7001             STRB     R1,[R0, #+0]
    122              } 
    123            }
    124            if(nRightSpd<0)
   \                     ??Motor_Control_R_0:
   \   0000007A   0x....             LDR.N    R0,??DataTable2_2
   \   0000007C   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   00000080   0x2800             CMP      R0,#+0
   \   00000082   0xD53C             BPL.N    ??Motor_Control_R_2
    125            {
    126              if(direction_R==1)
   \   00000084   0x....             LDR.N    R0,??DataTable2_7
   \   00000086   0xF990 0x0000      LDRSB    R0,[R0, #+0]
   \   0000008A   0x2801             CMP      R0,#+1
   \   0000008C   0xD11E             BNE.N    ??Motor_Control_R_3
    127              {
    128                FTM_setPWMDty(FTM0, 2, 0);
   \   0000008E   0x2200             MOVS     R2,#+0
   \   00000090   0x2102             MOVS     R1,#+2
   \   00000092   0x....             LDR.N    R0,??DataTable2_6  ;; 0x40038000
   \   00000094   0x.... 0x....      BL       FTM_setPWMDty
    129                FTM_setPWMDty(FTM0, 6, 0); 
   \   00000098   0x2200             MOVS     R2,#+0
   \   0000009A   0x2106             MOVS     R1,#+6
   \   0000009C   0x....             LDR.N    R0,??DataTable2_6  ;; 0x40038000
   \   0000009E   0x.... 0x....      BL       FTM_setPWMDty
    130                
    131                Delay1(60); 
   \   000000A2   0x203C             MOVS     R0,#+60
   \   000000A4   0x.... 0x....      BL       Delay1
    132                
    133                FTM_setPWMDty(FTM0, 2, 0);
   \   000000A8   0x2200             MOVS     R2,#+0
   \   000000AA   0x2102             MOVS     R1,#+2
   \   000000AC   0x....             LDR.N    R0,??DataTable2_6  ;; 0x40038000
   \   000000AE   0x.... 0x....      BL       FTM_setPWMDty
    134                FTM_setPWMDty(FTM0, 6, -nRightSpd);
   \   000000B2   0x....             LDR.N    R0,??DataTable2_2
   \   000000B4   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   000000B8   0x4242             RSBS     R2,R0,#+0
   \   000000BA   0xB292             UXTH     R2,R2            ;; ZeroExt  R2,R2,#+16,#+16
   \   000000BC   0x2106             MOVS     R1,#+6
   \   000000BE   0x....             LDR.N    R0,??DataTable2_6  ;; 0x40038000
   \   000000C0   0x.... 0x....      BL       FTM_setPWMDty
    135                direction_R=-1;  
   \   000000C4   0x....             LDR.N    R0,??DataTable2_7
   \   000000C6   0xF05F 0x31FF      MOVS     R1,#-1
   \   000000CA   0x7001             STRB     R1,[R0, #+0]
    136              }
    137              if(direction_R==-1)
   \                     ??Motor_Control_R_3:
   \   000000CC   0x....             LDR.N    R0,??DataTable2_7
   \   000000CE   0xF990 0x0000      LDRSB    R0,[R0, #+0]
   \   000000D2   0xF05F 0x31FF      MOVS     R1,#-1
   \   000000D6   0x4288             CMP      R0,R1
   \   000000D8   0xD111             BNE.N    ??Motor_Control_R_2
    138              {
    139                FTM_setPWMDty(FTM0, 2, 0);
   \   000000DA   0x2200             MOVS     R2,#+0
   \   000000DC   0x2102             MOVS     R1,#+2
   \   000000DE   0x....             LDR.N    R0,??DataTable2_6  ;; 0x40038000
   \   000000E0   0x.... 0x....      BL       FTM_setPWMDty
    140                FTM_setPWMDty(FTM0, 6, -nRightSpd);
   \   000000E4   0x....             LDR.N    R0,??DataTable2_2
   \   000000E6   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   000000EA   0x4242             RSBS     R2,R0,#+0
   \   000000EC   0xB292             UXTH     R2,R2            ;; ZeroExt  R2,R2,#+16,#+16
   \   000000EE   0x2106             MOVS     R1,#+6
   \   000000F0   0x....             LDR.N    R0,??DataTable2_6  ;; 0x40038000
   \   000000F2   0x.... 0x....      BL       FTM_setPWMDty
    141                direction_R=-1;
   \   000000F6   0x....             LDR.N    R0,??DataTable2_7
   \   000000F8   0xF05F 0x31FF      MOVS     R1,#-1
   \   000000FC   0x7001             STRB     R1,[R0, #+0]
    142              }
    143            }
    144          }
   \                     ??Motor_Control_R_2:
   \   000000FE   0xBD01             POP      {R0,PC}          ;; return

   \                                 In section .data, align 1
   \                     ??direction_R:
   \   00000000   0x01               DC8 1

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2:
   \   00000000   0x........         DC32     nLeftSpd

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_1:
   \   00000000   0x........         DC32     g_nLeftMotorOut

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_2:
   \   00000000   0x........         DC32     nRightSpd

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_3:
   \   00000000   0x........         DC32     g_nRightMotorOut

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_4:
   \   00000000   0xFFFFFAEC         DC32     0xfffffaec

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_5:
   \   00000000   0x........         DC32     ??direction_L

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_6:
   \   00000000   0x40038000         DC32     0x40038000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_7:
   \   00000000   0x........         DC32     ??direction_R

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
        8  Motor_Control
             8 -> Motor_Control_L
             8 -> Motor_Control_R
        8  Motor_Control_L
             8 -> Delay1
             8 -> FTM_setPWMDty
        8  Motor_Control_R
             8 -> Delay1
             8 -> FTM_setPWMDty


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable2
       4  ??DataTable2_1
       4  ??DataTable2_2
       4  ??DataTable2_3
       4  ??DataTable2_4
       4  ??DataTable2_5
       4  ??DataTable2_6
       4  ??DataTable2_7
     192  Motor_Control
     256  Motor_Control_L
     256  Motor_Control_R
       2  ObjectSpeed
       2  carCrazyCnt
       1  closeMotorFlag
       1  direction_L
       1  direction_R
       2  g_nLeftMotorOut
       2  g_nRightMotorOut
       2  nLeftSpd
       2  nRightSpd

 
  13 bytes in section .bss
   2 bytes in section .data
 736 bytes in section .text
 
 736 bytes of CODE memory
  15 bytes of DATA memory

Errors: none
Warnings: none
