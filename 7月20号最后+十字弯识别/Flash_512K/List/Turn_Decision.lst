###############################################################################
#                                                                             #
#                                                       22/Jul/2015  10:59:25 #
# IAR ANSI C/C++ Compiler V6.30.6.23336/W32 EVALUATION for ARM                #
# Copyright 1999-2012 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  thumb                                                    #
#    Endian       =  little                                                   #
#    Source file  =  C:\Users\dong\Desktop\7ÔÂ20ºÅ×îºó+Ê®×ÖÍäÊ¶±ð\Make_Desici #
#                    on\Turn_Decision.c                                       #
#    Command line =  C:\Users\dong\Desktop\7ÔÂ20ºÅ×îºó+Ê®×ÖÍäÊ¶±ð\Make_Desici #
#                    on\Turn_Decision.c -D IAR -lCN                           #
#                    C:\Users\dong\Desktop\7ÔÂ20ºÅ×îºó+Ê®×ÖÍäÊ¶±ð\Flash_512K\ #
#                    List\ -lB C:\Users\dong\Desktop\7ÔÂ20ºÅ×îºó+Ê®×ÖÍäÊ¶±ð\F #
#                    lash_512K\List\ -o C:\Users\dong\Desktop\7ÔÂ20ºÅ×îºó+Ê®× #
#                    ÖÍäÊ¶±ð\Flash_512K\Obj\ --no_cse --no_unroll             #
#                    --no_inline --no_code_motion --no_tbaa --no_clustering   #
#                    --no_scheduling --debug --endian=little --cpu=Cortex-M4  #
#                    -e --char_is_signed --fpu=None --dlib_config             #
#                    "C:\Program Files\IAR Systems\Embedded Workbench 6.0     #
#                    Evaluation\arm\INC\c\DLib_Config_Normal.h" -I            #
#                    C:\Users\dong\Desktop\7ÔÂ20ºÅ×îºó+Ê®×ÖÍäÊ¶±ð\Library\CPU #
#                    \ -I C:\Users\dong\Desktop\7ÔÂ20ºÅ×îºó+Ê®×ÖÍäÊ¶±ð\Librar #
#                    y\Drivers\ADC\ -I C:\Users\dong\Desktop\7ÔÂ20ºÅ×îºó+Ê®×Ö #
#                    ÍäÊ¶±ð\Library\Drivers\FTM\ -I                           #
#                    C:\Users\dong\Desktop\7ÔÂ20ºÅ×îºó+Ê®×ÖÍäÊ¶±ð\Library\Dri #
#                    vers\GPIO\ -I C:\Users\dong\Desktop\7ÔÂ20ºÅ×îºó+Ê®×ÖÍäÊ¶ #
#                    ±ð\Library\Drivers\PIT\ -I C:\Users\dong\Desktop\7ÔÂ20ºÅ #
#                    ×îºó+Ê®×ÖÍäÊ¶±ð\Library\Drivers\I2C\ -I                  #
#                    C:\Users\dong\Desktop\7ÔÂ20ºÅ×îºó+Ê®×ÖÍäÊ¶±ð\Library\Dri #
#                    vers\UART\ -I C:\Users\dong\Desktop\7ÔÂ20ºÅ×îºó+Ê®×ÖÍäÊ¶ #
#                    ±ð\Library\Drivers\FTFL\ -I                              #
#                    C:\Users\dong\Desktop\7ÔÂ20ºÅ×îºó+Ê®×ÖÍäÊ¶±ð\MyFunction\ #
#                     -I C:\Users\dong\Desktop\7ÔÂ20ºÅ×îºó+Ê®×ÖÍäÊ¶±ð\SD_Syst #
#                    em\ -I C:\Users\dong\Desktop\7ÔÂ20ºÅ×îºó+Ê®×ÖÍäÊ¶±ð\Dela #
#                    y\ -I C:\Users\dong\Desktop\7ÔÂ20ºÅ×îºó+Ê®×ÖÍäÊ¶±ð\Syste #
#                    m_Init\ -I C:\Users\dong\Desktop\7ÔÂ20ºÅ×îºó+Ê®×ÖÍäÊ¶±ð\ #
#                    OLED\ -I C:\Users\dong\Desktop\7ÔÂ20ºÅ×îºó+Ê®×ÖÍäÊ¶±ð\ZL #
#                    G7290\ -I C:\Users\dong\Desktop\7ÔÂ20ºÅ×îºó+Ê®×ÖÍäÊ¶±ð\S #
#                    imple_AD\ -I C:\Users\dong\Desktop\7ÔÂ20ºÅ×îºó+Ê®×ÖÍäÊ¶± #
#                    ð\Make_Desicion\ -I C:\Users\dong\Desktop\7ÔÂ20ºÅ×îºó+Ê® #
#                    ×ÖÍäÊ¶±ð\Make_Desicion\Judge_Way\ -I                     #
#                    C:\Users\dong\Desktop\7ÔÂ20ºÅ×îºó+Ê®×ÖÍäÊ¶±ð\Make_Desici #
#                    on\Speed_Control\ -I C:\Users\dong\Desktop\7ÔÂ20ºÅ×îºó+Ê #
#                    ®×ÖÍäÊ¶±ð\Source\ -I C:\Users\dong\Desktop\7ÔÂ20ºÅ×îºó+Ê #
#                    ®×ÖÍäÊ¶±ð\Peripheral_Oparation\ -I                       #
#                    C:\Users\dong\Desktop\7ÔÂ20ºÅ×îºó+Ê®×ÖÍäÊ¶±ð\Balance_con #
#                    trol\ -Ol                                                #
#    List file    =  C:\Users\dong\Desktop\7ÔÂ20ºÅ×îºó+Ê®×ÖÍäÊ¶±ð\Flash_512K\ #
#                    List\Turn_Decision.lst                                   #
#    Object file  =  C:\Users\dong\Desktop\7ÔÂ20ºÅ×îºó+Ê®×ÖÍäÊ¶±ð\Flash_512K\ #
#                    Obj\Turn_Decision.o                                      #
#                                                                             #
#                                                                             #
###############################################################################

C:\Users\dong\Desktop\7ÔÂ20ºÅ×îºó+Ê®×ÖÍäÊ¶±ð\Make_Desicion\Turn_Decision.c
      1          #include "AllHeaders.h"
      2          

   \                                 In section .data, align 4
      3          PID_Param ServePID={0,0,0,0,0,0,Serve_P,Serve_D,Serve_D_R,Serve_I,0.0};
   \                     ServePID:
   \   00000000   0x0000 0x0000      DC16 0, 0, 0, 0, 0, 0
   \              0x0000 0x0000
   \              0x0000 0x0000
   \   0000000C   0x3F266666         DC32 3F266666H, 3BA3D70AH, 0H, 0H, 0H
   \              0x3BA3D70A   
   \              0x00000000   
   \              0x00000000   
   \              0x00000000   
      4          

   \                                 In section .bss, align 4
      5          int16s_t g_Gyro_X2[GYRO_NUM]={0};
   \                     g_Gyro_X2:
   \   00000000                      DS8 8

   \                                 In section .bss, align 2
      6          int16s_t g_GyroX2 = 0;
   \                     g_GyroX2:
   \   00000000                      DS8 2

   \                                 In section .bss, align 1
      7          int8u_t g_Gyro_Cnt2=0;
   \                     g_Gyro_Cnt2:
   \   00000000                      DS8 1

   \                                 In section .bss, align 2
      8          int16s_t Diff_Err_Last;
   \                     Diff_Err_Last:
   \   00000000                      DS8 2

   \                                 In section .bss, align 4
      9          float Diff_I_Value_Keep;
   \                     Diff_I_Value_Keep:
   \   00000000                      DS8 4
     10          
     11          //µ÷ÊÔÓÃ±äÁ¿

   \                                 In section .data, align 4
     12          float Diff_P =6.5,Diff_I = 0.01,Diff_D = 0.05;
   \                     Diff_P:
   \   00000000   0x40D00000         DC32 40D00000H

   \                                 In section .data, align 4
   \                     Diff_I:
   \   00000000   0x3C23D70A         DC32 3C23D70AH

   \                                 In section .data, align 4
   \                     Diff_D:
   \   00000000   0x3D4CCCCD         DC32 3D4CCCCDH
     13          //µ÷ÊÔÓÃ±äÁ¿
     14          

   \                                 In section .text, align 2, keep-with-next
     15          void MovingAverageFilter2(int16s_t gyroval)
     16          {
     17            int8u_t i;
     18            
     19            g_GyroX2 = 0;
   \                     MovingAverageFilter2:
   \   00000000   0x....             LDR.N    R1,??DataTable3
   \   00000002   0x2200             MOVS     R2,#+0
   \   00000004   0x800A             STRH     R2,[R1, #+0]
     20            g_Gyro_X2[g_Gyro_Cnt2++]=gyroval;
   \   00000006   0x....             LDR.N    R1,??DataTable3_1
   \   00000008   0x7809             LDRB     R1,[R1, #+0]
   \   0000000A   0x....             LDR.N    R2,??DataTable3_2
   \   0000000C   0xF822 0x0011      STRH     R0,[R2, R1, LSL #+1]
   \   00000010   0x....             LDR.N    R0,??DataTable3_1
   \   00000012   0x7800             LDRB     R0,[R0, #+0]
   \   00000014   0x1C40             ADDS     R0,R0,#+1
   \   00000016   0x....             LDR.N    R1,??DataTable3_1
   \   00000018   0x7008             STRB     R0,[R1, #+0]
     21            
     22            if(g_Gyro_Cnt2>=GYRO_NUM)g_Gyro_Cnt2=0;
   \   0000001A   0x....             LDR.N    R0,??DataTable3_1
   \   0000001C   0x7800             LDRB     R0,[R0, #+0]
   \   0000001E   0x2803             CMP      R0,#+3
   \   00000020   0xD302             BCC.N    ??MovingAverageFilter2_0
   \   00000022   0x....             LDR.N    R0,??DataTable3_1
   \   00000024   0x2100             MOVS     R1,#+0
   \   00000026   0x7001             STRB     R1,[R0, #+0]
     23             
     24            for(i=0;i<GYRO_NUM;i++)
   \                     ??MovingAverageFilter2_0:
   \   00000028   0x2000             MOVS     R0,#+0
   \   0000002A   0xE009             B.N      ??MovingAverageFilter2_1
     25              g_GyroX2+=g_Gyro_X2[i];
   \                     ??MovingAverageFilter2_2:
   \   0000002C   0x....             LDR.N    R1,??DataTable3
   \   0000002E   0x8809             LDRH     R1,[R1, #+0]
   \   00000030   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000032   0x....             LDR.N    R2,??DataTable3_2
   \   00000034   0xF832 0x2010      LDRH     R2,[R2, R0, LSL #+1]
   \   00000038   0x1851             ADDS     R1,R2,R1
   \   0000003A   0x....             LDR.N    R2,??DataTable3
   \   0000003C   0x8011             STRH     R1,[R2, #+0]
   \   0000003E   0x1C40             ADDS     R0,R0,#+1
   \                     ??MovingAverageFilter2_1:
   \   00000040   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000042   0x2803             CMP      R0,#+3
   \   00000044   0xD3F2             BCC.N    ??MovingAverageFilter2_2
     26            g_GyroX2/=GYRO_NUM;
   \   00000046   0x....             LDR.N    R0,??DataTable3
   \   00000048   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   0000004C   0x2103             MOVS     R1,#+3
   \   0000004E   0xFB90 0xF0F1      SDIV     R0,R0,R1
   \   00000052   0x....             LDR.N    R1,??DataTable3
   \   00000054   0x8008             STRH     R0,[R1, #+0]
     27            
     28          }
   \   00000056   0x4770             BX       LR               ;; return
     29          
     30          //===============================================================
     31          //º¯ÊýÃû£ºPID_Calculate
     32          //×÷ÓÃ£ºÔöÁ¿Ê½PD¼ÆËã
     33          //===============================================================

   \                                 In section .text, align 2, keep-with-next
     34          void PID_Calculate(PID_Param* p_pidParam)
     35          {
   \                     PID_Calculate:
   \   00000000   0xB5F0             PUSH     {R4-R7,LR}
   \   00000002   0x0004             MOVS     R4,R0
     36            float P_Value,D_Value,I_Value,D_Value_Revise;
     37            float PID_temp;
     38            
     39            //MovingAverageFilter2(Gyro_Y);
     40            
     41            p_pidParam->Error_Now = p_pidParam->MeasuredValue;
   \   00000004   0x8820             LDRH     R0,[R4, #+0]
   \   00000006   0x80A0             STRH     R0,[R4, #+4]
     42            //p_pidParam->Error_Now = 0;
     43            P_Value = p_pidParam->P_Gain * (p_pidParam->Error_Now - p_pidParam->Error_Last);
   \   00000008   0xF9B4 0x0004      LDRSH    R0,[R4, #+4]
   \   0000000C   0xF9B4 0x1006      LDRSH    R1,[R4, #+6]
   \   00000010   0x1A40             SUBS     R0,R0,R1
   \   00000012   0x.... 0x....      BL       __aeabi_i2f
   \   00000016   0x68E1             LDR      R1,[R4, #+12]
   \   00000018   0x.... 0x....      BL       __aeabi_fmul
   \   0000001C   0x0005             MOVS     R5,R0
     44            I_Value = p_pidParam->I_Gain * (p_pidParam->Error_Now);
   \   0000001E   0xF9B4 0x0004      LDRSH    R0,[R4, #+4]
   \   00000022   0x.... 0x....      BL       __aeabi_i2f
   \   00000026   0x69A1             LDR      R1,[R4, #+24]
   \   00000028   0x.... 0x....      BL       __aeabi_fmul
   \   0000002C   0x0006             MOVS     R6,R0
     45            //D_Value_Revise= p_pidParam->D_Gain_Revise * g_GyroX2;
     46            D_Value= p_pidParam->D_Gain * (p_pidParam->Error_Now - 2*p_pidParam->Error_Last + p_pidParam->Error_Thelast);
   \   0000002E   0xF9B4 0x0004      LDRSH    R0,[R4, #+4]
   \   00000032   0xF9B4 0x1006      LDRSH    R1,[R4, #+6]
   \   00000036   0xEBB0 0x0041      SUBS     R0,R0,R1, LSL #+1
   \   0000003A   0xF9B4 0x1008      LDRSH    R1,[R4, #+8]
   \   0000003E   0x1840             ADDS     R0,R0,R1
   \   00000040   0x.... 0x....      BL       __aeabi_i2f
   \   00000044   0x6921             LDR      R1,[R4, #+16]
   \   00000046   0x.... 0x....      BL       __aeabi_fmul
   \   0000004A   0x0007             MOVS     R7,R0
     47            
     48            //¶ÔPID²ÎÊýÏÞ·ù
     49             if(P_Value>=2000)
   \   0000004C   0x0028             MOVS     R0,R5
   \   0000004E   0x....             LDR.N    R1,??DataTable3_3  ;; 0x44fa0000
   \   00000050   0x.... 0x....      BL       __aeabi_cfrcmple
   \   00000054   0xD801             BHI.N    ??PID_Calculate_0
     50               P_Value=2000;
   \   00000056   0x....             LDR.N    R5,??DataTable3_3  ;; 0x44fa0000
   \   00000058   0xE005             B.N      ??PID_Calculate_1
     51             else
     52                if(P_Value<=-2000)
   \                     ??PID_Calculate_0:
   \   0000005A   0x0028             MOVS     R0,R5
   \   0000005C   0x....             LDR.N    R1,??DataTable3_4  ;; 0xc4f9ffff
   \   0000005E   0x.... 0x....      BL       __aeabi_cfcmple
   \   00000062   0xD200             BCS.N    ??PID_Calculate_1
     53                  P_Value=-2000;
   \   00000064   0x....             LDR.N    R5,??DataTable3_5  ;; 0xc4fa0000
     54             
     55             if(D_Value>=2000)
   \                     ??PID_Calculate_1:
   \   00000066   0x0038             MOVS     R0,R7
   \   00000068   0x....             LDR.N    R1,??DataTable3_3  ;; 0x44fa0000
   \   0000006A   0x.... 0x....      BL       __aeabi_cfrcmple
   \   0000006E   0xD801             BHI.N    ??PID_Calculate_2
     56               D_Value=2000;
   \   00000070   0x....             LDR.N    R7,??DataTable3_3  ;; 0x44fa0000
   \   00000072   0xE005             B.N      ??PID_Calculate_3
     57             else
     58                if(D_Value<=-2000)
   \                     ??PID_Calculate_2:
   \   00000074   0x0038             MOVS     R0,R7
   \   00000076   0x....             LDR.N    R1,??DataTable3_4  ;; 0xc4f9ffff
   \   00000078   0x.... 0x....      BL       __aeabi_cfcmple
   \   0000007C   0xD200             BCS.N    ??PID_Calculate_3
     59                  D_Value=-2000;
   \   0000007E   0x....             LDR.N    R7,??DataTable3_5  ;; 0xc4fa0000
     60             
     61             if(I_Value>=2000)
   \                     ??PID_Calculate_3:
   \   00000080   0x0030             MOVS     R0,R6
   \   00000082   0x....             LDR.N    R1,??DataTable3_3  ;; 0x44fa0000
   \   00000084   0x.... 0x....      BL       __aeabi_cfrcmple
   \   00000088   0xD801             BHI.N    ??PID_Calculate_4
     62               I_Value=2000;
   \   0000008A   0x....             LDR.N    R6,??DataTable3_3  ;; 0x44fa0000
   \   0000008C   0xE005             B.N      ??PID_Calculate_5
     63             else
     64                if(I_Value<=-2000)
   \                     ??PID_Calculate_4:
   \   0000008E   0x0030             MOVS     R0,R6
   \   00000090   0x....             LDR.N    R1,??DataTable3_4  ;; 0xc4f9ffff
   \   00000092   0x.... 0x....      BL       __aeabi_cfcmple
   \   00000096   0xD200             BCS.N    ??PID_Calculate_5
     65                  I_Value=-2000;
   \   00000098   0x....             LDR.N    R6,??DataTable3_5  ;; 0xc4fa0000
     66             
     67             p_pidParam->Error_Thelast = p_pidParam->Error_Last;
   \                     ??PID_Calculate_5:
   \   0000009A   0x88E0             LDRH     R0,[R4, #+6]
   \   0000009C   0x8120             STRH     R0,[R4, #+8]
     68             p_pidParam->Error_Last = p_pidParam->Error_Now;
   \   0000009E   0x88A0             LDRH     R0,[R4, #+4]
   \   000000A0   0x80E0             STRH     R0,[R4, #+6]
     69             PID_temp = P_Value + D_Value + I_Value;
   \   000000A2   0x0028             MOVS     R0,R5
   \   000000A4   0x0039             MOVS     R1,R7
   \   000000A6   0x.... 0x....      BL       __aeabi_fadd
   \   000000AA   0x0031             MOVS     R1,R6
   \   000000AC   0x.... 0x....      BL       __aeabi_fadd
     70             //PID_temp = P_Value+D_Value_Revise;
     71             
     72             p_pidParam->valueOutput += PID_temp;
   \   000000B0   0x69E1             LDR      R1,[R4, #+28]
   \   000000B2   0x.... 0x....      BL       __aeabi_fadd
   \   000000B6   0x61E0             STR      R0,[R4, #+28]
     73          }
   \   000000B8   0xBDF0             POP      {R4-R7,PC}       ;; return
     74          //============================================================
     75          //º¯ÊýÃû£ºServe_Act
     76          //×÷ÓÃ£º¶æ»ú¶¯×÷
     77          //============================================================

   \                                 In section .text, align 2, keep-with-next
     78          int16s_t Turn_Exchange()
     79          {
   \                     Turn_Exchange:
   \   00000000   0xB580             PUSH     {R7,LR}
     80            float turn_Pwm;
     81            //Read_ITG3200D_Y();
     82            PID_Calculate(&ServePID);    //PD¼ÆËãÆ«²î
   \   00000002   0x....             LDR.N    R0,??DataTable3_6
   \   00000004   0x.... 0x....      BL       PID_Calculate
     83            
     84            turn_Pwm = BLACK_POSITION_RATIO * ServePID.valueOutput;
   \   00000008   0x....             LDR.N    R0,??DataTable3_6
   \   0000000A   0x69C0             LDR      R0,[R0, #+28]
   \   0000000C   0x.... 0x....      BL       __aeabi_f2d
   \   00000010   0x....             LDR.N    R2,??DataTable3_7  ;; 0x9999999a
   \   00000012   0x....             LDR.N    R3,??DataTable3_8  ;; 0x3fa99999
   \   00000014   0x.... 0x....      BL       __aeabi_dmul
   \   00000018   0x.... 0x....      BL       __aeabi_d2f
     85            if(turn_Pwm > 300)
   \   0000001C   0x....             LDR.N    R1,??DataTable3_9  ;; 0x43960001
   \   0000001E   0x.... 0x....      BL       __aeabi_cfrcmple
   \   00000022   0xD800             BHI.N    ??Turn_Exchange_0
     86              turn_Pwm = 300;
   \   00000024   0x....             LDR.N    R0,??DataTable3_10  ;; 0x43960000
     87            if(turn_Pwm < -300)
   \                     ??Turn_Exchange_0:
   \   00000026   0x....             LDR.N    R1,??DataTable3_11  ;; 0xc3960000
   \   00000028   0x.... 0x....      BL       __aeabi_cfcmple
   \   0000002C   0xD200             BCS.N    ??Turn_Exchange_1
     88              turn_Pwm = -300;
   \   0000002E   0x....             LDR.N    R0,??DataTable3_11  ;; 0xc3960000
     89            
     90            return((int16s_t)turn_Pwm);
   \                     ??Turn_Exchange_1:
   \   00000030   0x.... 0x....      BL       __aeabi_f2iz
   \   00000034   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   00000036   0xBD02             POP      {R1,PC}          ;; return
     91          }
     92          
     93          //============================================================
     94          //º¯ÊýÃû£ºÁ½ÂÖÊµ¼Ê²îËÙ¼ÆËã
     95          //×÷ÓÃ£º¼ÆËãÁ½ÂÖÊµ¼Ê²îËÙ
     96          //============================================================

   \                                 In section .text, align 2, keep-with-next
     97          int16s_t SpeedDiff_PID(int16s_t pulse1,int16s_t pulse2)
     98          {
   \                     SpeedDiff_PID:
   \   00000000   0xB570             PUSH     {R4-R6,LR}
     99            int16s_t Diff_Pulse;                                 //Á½ÂÖ²îËÙ
    100            int16s_t Err_Diff;                                  //Êµ¼Ê²îËÙÓëÄ¿±ê²îËÙÎó²î
    101            float P_Value,D_Value,I_Value;
    102            float turn_Pwm;
    103            
    104            Diff_Pulse = pulse1 - pulse2;                      //¼ÆËãÁ½ÂÖ²îËÙ
   \   00000002   0x1A44             SUBS     R4,R0,R1
    105            Err_Diff = Diff_Pulse -  Turn_Exchange();           //Êµ²â²îËÙÓëÄ¿±ê²îËÙÎó²î
   \   00000004   0x.... 0x....      BL       Turn_Exchange
   \   00000008   0x1A24             SUBS     R4,R4,R0
    106            P_Value = Diff_P*Err_Diff;
   \   0000000A   0xB224             SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
   \   0000000C   0x0020             MOVS     R0,R4
   \   0000000E   0x.... 0x....      BL       __aeabi_i2f
   \   00000012   0x....             LDR.N    R1,??DataTable3_12
   \   00000014   0x6809             LDR      R1,[R1, #+0]
   \   00000016   0x.... 0x....      BL       __aeabi_fmul
   \   0000001A   0x0005             MOVS     R5,R0
    107            D_Value = Diff_D*(Err_Diff - Diff_Err_Last);
   \   0000001C   0xB224             SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
   \   0000001E   0x....             LDR.N    R0,??DataTable3_13
   \   00000020   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   00000024   0x1A20             SUBS     R0,R4,R0
   \   00000026   0x.... 0x....      BL       __aeabi_i2f
   \   0000002A   0x....             LDR.N    R1,??DataTable3_14
   \   0000002C   0x6809             LDR      R1,[R1, #+0]
   \   0000002E   0x.... 0x....      BL       __aeabi_fmul
   \   00000032   0x0006             MOVS     R6,R0
    108            I_Value = Diff_I*Err_Diff;
   \   00000034   0xB224             SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
   \   00000036   0x0020             MOVS     R0,R4
   \   00000038   0x.... 0x....      BL       __aeabi_i2f
   \   0000003C   0x....             LDR.N    R1,??DataTable3_15
   \   0000003E   0x6809             LDR      R1,[R1, #+0]
   \   00000040   0x.... 0x....      BL       __aeabi_fmul
   \   00000044   0x0001             MOVS     R1,R0
    109            Diff_I_Value_Keep += I_Value;
   \   00000046   0x....             LDR.N    R0,??DataTable3_16
   \   00000048   0x6800             LDR      R0,[R0, #+0]
   \   0000004A   0x.... 0x....      BL       __aeabi_fadd
   \   0000004E   0x....             LDR.N    R1,??DataTable3_16
   \   00000050   0x6008             STR      R0,[R1, #+0]
    110            Diff_Err_Last = Err_Diff;
   \   00000052   0x....             LDR.N    R0,??DataTable3_13
   \   00000054   0x8004             STRH     R4,[R0, #+0]
    111            if(Diff_I_Value_Keep > 200)
   \   00000056   0x....             LDR.N    R0,??DataTable3_16
   \   00000058   0x6800             LDR      R0,[R0, #+0]
   \   0000005A   0x....             LDR.N    R1,??DataTable3_17  ;; 0x43480001
   \   0000005C   0x.... 0x....      BL       __aeabi_cfrcmple
   \   00000060   0xD802             BHI.N    ??SpeedDiff_PID_0
    112              Diff_I_Value_Keep = 200;
   \   00000062   0x....             LDR.N    R0,??DataTable3_16
   \   00000064   0x....             LDR.N    R1,??DataTable3_18  ;; 0x43480000
   \   00000066   0x6001             STR      R1,[R0, #+0]
    113            
    114            turn_Pwm = P_Value + D_Value + Diff_I_Value_Keep;            //PID¼ÆËã
   \                     ??SpeedDiff_PID_0:
   \   00000068   0x0028             MOVS     R0,R5
   \   0000006A   0x0031             MOVS     R1,R6
   \   0000006C   0x.... 0x....      BL       __aeabi_fadd
   \   00000070   0x....             LDR.N    R1,??DataTable3_16
   \   00000072   0x6809             LDR      R1,[R1, #+0]
   \   00000074   0x.... 0x....      BL       __aeabi_fadd
    115            return((int16s_t)turn_Pwm);
   \   00000078   0x.... 0x....      BL       __aeabi_f2iz
   \   0000007C   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   0000007E   0xBD70             POP      {R4-R6,PC}       ;; return
    116          }

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3:
   \   00000000   0x........         DC32     g_GyroX2

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_1:
   \   00000000   0x........         DC32     g_Gyro_Cnt2

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_2:
   \   00000000   0x........         DC32     g_Gyro_X2

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_3:
   \   00000000   0x44FA0000         DC32     0x44fa0000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_4:
   \   00000000   0xC4F9FFFF         DC32     0xc4f9ffff

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_5:
   \   00000000   0xC4FA0000         DC32     0xc4fa0000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_6:
   \   00000000   0x........         DC32     ServePID

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_7:
   \   00000000   0x9999999A         DC32     0x9999999a

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_8:
   \   00000000   0x3FA99999         DC32     0x3fa99999

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_9:
   \   00000000   0x43960001         DC32     0x43960001

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_10:
   \   00000000   0x43960000         DC32     0x43960000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_11:
   \   00000000   0xC3960000         DC32     0xc3960000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_12:
   \   00000000   0x........         DC32     Diff_P

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_13:
   \   00000000   0x........         DC32     Diff_Err_Last

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_14:
   \   00000000   0x........         DC32     Diff_D

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_15:
   \   00000000   0x........         DC32     Diff_I

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_16:
   \   00000000   0x........         DC32     Diff_I_Value_Keep

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_17:
   \   00000000   0x43480001         DC32     0x43480001

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_18:
   \   00000000   0x43480000         DC32     0x43480000

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
        0  MovingAverageFilter2
       20  PID_Calculate
             20 -> __aeabi_cfcmple
             20 -> __aeabi_cfrcmple
             20 -> __aeabi_fadd
             20 -> __aeabi_fmul
             20 -> __aeabi_i2f
       16  SpeedDiff_PID
             16 -> Turn_Exchange
             16 -> __aeabi_cfrcmple
             16 -> __aeabi_f2iz
             16 -> __aeabi_fadd
             16 -> __aeabi_fmul
             16 -> __aeabi_i2f
        8  Turn_Exchange
              8 -> PID_Calculate
              8 -> __aeabi_cfcmple
              8 -> __aeabi_cfrcmple
              8 -> __aeabi_d2f
              8 -> __aeabi_dmul
              8 -> __aeabi_f2d
              8 -> __aeabi_f2iz


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable3
       4  ??DataTable3_1
       4  ??DataTable3_10
       4  ??DataTable3_11
       4  ??DataTable3_12
       4  ??DataTable3_13
       4  ??DataTable3_14
       4  ??DataTable3_15
       4  ??DataTable3_16
       4  ??DataTable3_17
       4  ??DataTable3_18
       4  ??DataTable3_2
       4  ??DataTable3_3
       4  ??DataTable3_4
       4  ??DataTable3_5
       4  ??DataTable3_6
       4  ??DataTable3_7
       4  ??DataTable3_8
       4  ??DataTable3_9
       4  Diff_D
       2  Diff_Err_Last
       4  Diff_I
       4  Diff_I_Value_Keep
       4  Diff_P
      88  MovingAverageFilter2
     186  PID_Calculate
      32  ServePID
     128  SpeedDiff_PID
      56  Turn_Exchange
       2  g_GyroX2
       1  g_Gyro_Cnt2
       8  g_Gyro_X2

 
  17 bytes in section .bss
  44 bytes in section .data
 534 bytes in section .text
 
 534 bytes of CODE memory
  61 bytes of DATA memory

Errors: none
Warnings: 1
