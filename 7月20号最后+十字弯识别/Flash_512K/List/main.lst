###############################################################################
#                                                                             #
#                                                       22/Jul/2015  10:59:29 #
# IAR ANSI C/C++ Compiler V6.30.6.23336/W32 EVALUATION for ARM                #
# Copyright 1999-2012 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  thumb                                                    #
#    Endian       =  little                                                   #
#    Source file  =  C:\Users\dong\Desktop\7ÔÂ20ºÅ×îºó+Ê®×ÖÍäÊ¶±ð\Source\main #
#                    .c                                                       #
#    Command line =  C:\Users\dong\Desktop\7ÔÂ20ºÅ×îºó+Ê®×ÖÍäÊ¶±ð\Source\main #
#                    .c -D IAR -lCN C:\Users\dong\Desktop\7ÔÂ20ºÅ×îºó+Ê®×ÖÍäÊ #
#                    ¶±ð\Flash_512K\List\ -lB C:\Users\dong\Desktop\7ÔÂ20ºÅ×î #
#                    ºó+Ê®×ÖÍäÊ¶±ð\Flash_512K\List\ -o                        #
#                    C:\Users\dong\Desktop\7ÔÂ20ºÅ×îºó+Ê®×ÖÍäÊ¶±ð\Flash_512K\ #
#                    Obj\ --no_cse --no_unroll --no_inline --no_code_motion   #
#                    --no_tbaa --no_clustering --no_scheduling --debug        #
#                    --endian=little --cpu=Cortex-M4 -e --char_is_signed      #
#                    --fpu=None --dlib_config "C:\Program Files\IAR           #
#                    Systems\Embedded Workbench 6.0                           #
#                    Evaluation\arm\INC\c\DLib_Config_Normal.h" -I            #
#                    C:\Users\dong\Desktop\7ÔÂ20ºÅ×îºó+Ê®×ÖÍäÊ¶±ð\Library\CPU #
#                    \ -I C:\Users\dong\Desktop\7ÔÂ20ºÅ×îºó+Ê®×ÖÍäÊ¶±ð\Librar #
#                    y\Drivers\ADC\ -I C:\Users\dong\Desktop\7ÔÂ20ºÅ×îºó+Ê®×Ö #
#                    ÍäÊ¶±ð\Library\Drivers\FTM\ -I                           #
#                    C:\Users\dong\Desktop\7ÔÂ20ºÅ×îºó+Ê®×ÖÍäÊ¶±ð\Library\Dri #
#                    vers\GPIO\ -I C:\Users\dong\Desktop\7ÔÂ20ºÅ×îºó+Ê®×ÖÍäÊ¶ #
#                    ±ð\Library\Drivers\PIT\ -I C:\Users\dong\Desktop\7ÔÂ20ºÅ #
#                    ×îºó+Ê®×ÖÍäÊ¶±ð\Library\Drivers\I2C\ -I                  #
#                    C:\Users\dong\Desktop\7ÔÂ20ºÅ×îºó+Ê®×ÖÍäÊ¶±ð\Library\Dri #
#                    vers\UART\ -I C:\Users\dong\Desktop\7ÔÂ20ºÅ×îºó+Ê®×ÖÍäÊ¶ #
#                    ±ð\Library\Drivers\FTFL\ -I                              #
#                    C:\Users\dong\Desktop\7ÔÂ20ºÅ×îºó+Ê®×ÖÍäÊ¶±ð\MyFunction\ #
#                     -I C:\Users\dong\Desktop\7ÔÂ20ºÅ×îºó+Ê®×ÖÍäÊ¶±ð\SD_Syst #
#                    em\ -I C:\Users\dong\Desktop\7ÔÂ20ºÅ×îºó+Ê®×ÖÍäÊ¶±ð\Dela #
#                    y\ -I C:\Users\dong\Desktop\7ÔÂ20ºÅ×îºó+Ê®×ÖÍäÊ¶±ð\Syste #
#                    m_Init\ -I C:\Users\dong\Desktop\7ÔÂ20ºÅ×îºó+Ê®×ÖÍäÊ¶±ð\ #
#                    OLED\ -I C:\Users\dong\Desktop\7ÔÂ20ºÅ×îºó+Ê®×ÖÍäÊ¶±ð\ZL #
#                    G7290\ -I C:\Users\dong\Desktop\7ÔÂ20ºÅ×îºó+Ê®×ÖÍäÊ¶±ð\S #
#                    imple_AD\ -I C:\Users\dong\Desktop\7ÔÂ20ºÅ×îºó+Ê®×ÖÍäÊ¶± #
#                    ð\Make_Desicion\ -I C:\Users\dong\Desktop\7ÔÂ20ºÅ×îºó+Ê® #
#                    ×ÖÍäÊ¶±ð\Make_Desicion\Judge_Way\ -I                     #
#                    C:\Users\dong\Desktop\7ÔÂ20ºÅ×îºó+Ê®×ÖÍäÊ¶±ð\Make_Desici #
#                    on\Speed_Control\ -I C:\Users\dong\Desktop\7ÔÂ20ºÅ×îºó+Ê #
#                    ®×ÖÍäÊ¶±ð\Source\ -I C:\Users\dong\Desktop\7ÔÂ20ºÅ×îºó+Ê #
#                    ®×ÖÍäÊ¶±ð\Peripheral_Oparation\ -I                       #
#                    C:\Users\dong\Desktop\7ÔÂ20ºÅ×îºó+Ê®×ÖÍäÊ¶±ð\Balance_con #
#                    trol\ -Ol                                                #
#    List file    =  C:\Users\dong\Desktop\7ÔÂ20ºÅ×îºó+Ê®×ÖÍäÊ¶±ð\Flash_512K\ #
#                    List\main.lst                                            #
#    Object file  =  C:\Users\dong\Desktop\7ÔÂ20ºÅ×îºó+Ê®×ÖÍäÊ¶±ð\Flash_512K\ #
#                    Obj\main.o                                               #
#                                                                             #
#                                                                             #
###############################################################################

C:\Users\dong\Desktop\7ÔÂ20ºÅ×îºó+Ê®×ÖÍäÊ¶±ð\Source\main.c
      1          
      2          #include "AllHeaders.h"
      3          /***************************************³ÌÐòÓÃ±äÁ¿******************************/

   \                                 In section .bss, align 4
      4          int timeRef;        //Ê±¼ä»ù×¼£¬1Ms
   \                     timeRef:
   \   00000000                      DS8 4

   \                                 In section .bss, align 1
      5          int8u_t TimePeriod_cnt;   //Ê±¼äÆ¬±äÁ¿
   \                     TimePeriod_cnt:
   \   00000000                      DS8 1

   \                                 In section .bss, align 2
      6          volatile int16u_t SysTick;   /*ÏµÍ³Ê±¼ä»ù×¼(Æäµ¥Î»ÔÚPlatform.hÖÐÅäÖÃ)*/
   \                     SysTick:
   \   00000000                      DS8 2
      7          

   \                                 In section .bss, align 1
      8          int8u_t Motor_Count;   //µç»ú¼ÆÊý
   \                     Motor_Count:
   \   00000000                      DS8 1

   \                                 In section .bss, align 1
      9          int8u_t CcdGet_Allow;
   \                     CcdGet_Allow:
   \   00000000                      DS8 1

   \                                 In section .data, align 1
     10          int8u_t  StartStopFlag = 1;   //Æô¶¯Í£³µ±êÖ¾
   \                     StartStopFlag:
   \   00000000   0x01               DC8 1
     11          

   \                                 In section .bss, align 4
     12          int SDerite_cnt=0;      //Ð´¿¨Êý
   \                     SDerite_cnt:
   \   00000000                      DS8 4

   \                                 In section .bss, align 2
     13          int16u_t Forward_Dty;
   \                     Forward_Dty:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
     14          int16s_t L_MotorSpeed;            //×óµç»úËÙ¶È
   \                     L_MotorSpeed:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
     15          int16s_t R_MotorSpeed;            //ÓÒµç»úËÙ¶È
   \                     R_MotorSpeed:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
     16          int16s_t L_MotorSpeed_temp;            //×óµç»úËÙ¶È
   \                     L_MotorSpeed_temp:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
     17          int16s_t R_MotorSpeed_temp;            //ÓÒµç»úËÙ¶È
   \                     R_MotorSpeed_temp:
   \   00000000                      DS8 2
     18          
     19          
     20          void Car_Start(void);
     21          /*************************************µ÷ÊÔÓÃÁÙÊ±±äÁ¿****************************/
     22          

   \                                 In section .text, align 4, keep-with-next
     23          void main(void) 
     24          {
   \                     main:
   \   00000000   0xB580             PUSH     {R7,LR}
     25            DisableInterrupts();                               //³ÌÐòÒ»¿ªÊ¼ÐèÒª¹Ø±ÕËùÓÐÖÐ¶Ï£¬·ÀÖ¹µ¥Æ¬»ú³õÊ¼»¯¹ý³ÌÖÐ±»Ä³¸öÖÐ¶Ï´ò¶Ï
   \   00000002   0xB672             CPSID i          
     26            /***************************µ÷ÓÃ³õÊ¼»¯º¯Êý*******************************/
     27            delay_ms(100);
   \   00000004   0x2064             MOVS     R0,#+100
   \   00000006   0x.... 0x....      BL       delay_ms
     28            System_Init();
   \   0000000A   0x.... 0x....      BL       System_Init
     29            Deal_Switch();
   \   0000000E   0x.... 0x....      BL       Deal_Switch
     30            
     31            EnableInterrupts();                               //ÔÊÐíÖÐ¶Ï£¬ÓÃµ½ÊµÊ±Ê±ÖÓ¶¨Ê±ÖÐ¶Ï¡¢¶¨Ê±Æ÷Òç³öÖÐ¶ÏµÈÖÐ¶ÏµÄ»°£¬±ØÐëÔÊÐí×ÜÖÐ¶Ï
   \   00000012   0xB662             CPSIE i          
     32          #if (FUNC_MUSK==1)
     33            SetVariable();      //ÔÚÕâÀïÉèÖÃ°´¼ü²ÎÊý
   \   00000014   0x.... 0x....      BL       SetVariable
     34          #else
     35            PIT_setTime(0,1000,1,3);
     36            NormalSpeed = 70;
     37          #endif
     38             
     39            ONBUZZER();
   \   00000018   0x2201             MOVS     R2,#+1
   \   0000001A   0x210F             MOVS     R1,#+15
   \   0000001C   0x....             LDR.N    R0,??DataTable1  ;; 0x400ff000
   \   0000001E   0x.... 0x....      BL       GPIO_SetPinStat
     40            delay_ms(50);
   \   00000022   0x2032             MOVS     R0,#+50
   \   00000024   0x.... 0x....      BL       delay_ms
     41            OFFBUZZER();
   \   00000028   0x2200             MOVS     R2,#+0
   \   0000002A   0x210F             MOVS     R1,#+15
   \   0000002C   0x....             LDR.N    R0,??DataTable1  ;; 0x400ff000
   \   0000002E   0x.... 0x....      BL       GPIO_SetPinStat
     42            /*************************************µ÷ÊÔ´úÂëÇø*****************************/
     43            //JudgeWay(1);
     44            /*************************************µ÷ÊÔ´úÂëÇø½áÊø*****************************/
     45            for(;;)
     46            {
     47            /*************************************µ÷ÊÔ´úÂëÇø*****************************/
     48            
     49            /*************************************µ÷ÊÔ´úÂëÇø½áÊø*****************************/
     50          
     51              Car_Start();
   \                     ??main_0:
   \   00000032   0x.... 0x....      BL       Car_Start
     52              if(timeRef>=10)           //10MsÖ´ÐÐÒ»´Î
   \   00000036   0x....             LDR.N    R0,??DataTable1_1
   \   00000038   0x6800             LDR      R0,[R0, #+0]
   \   0000003A   0x280A             CMP      R0,#+10
   \   0000003C   0xDB04             BLT.N    ??main_1
     53              {
     54                timeRef=0;
   \   0000003E   0x....             LDR.N    R0,??DataTable1_1
   \   00000040   0x2100             MOVS     R1,#+0
   \   00000042   0x6001             STR      R1,[R0, #+0]
     55                
     56                Peripheral_Oparation();         //Ö´ÐÐÓ²¼þ²Ù×÷£¬°üÀ¨Ð´SD¿¨ÒÔ¼°Ð´Òº¾§
   \   00000044   0x.... 0x....      BL       Peripheral_Oparation
     57              }
     58              if(CcdGet_Allow==1)    //Ïàµ±ÓÚµÚ1Ê±¼äÆ¬
   \                     ??main_1:
   \   00000048   0x....             LDR.N    R0,??DataTable1_2
   \   0000004A   0x7800             LDRB     R0,[R0, #+0]
   \   0000004C   0x2801             CMP      R0,#+1
   \   0000004E   0xD1F0             BNE.N    ??main_0
     59              {
     60                TSL1401_GetASSILine(&ASSI_CCD);       //µÃµ½ÈüµÀÐÅÏ¢
   \   00000050   0x....             LDR.N    R0,??DataTable1_3
   \   00000052   0x.... 0x....      BL       TSL1401_GetASSILine
     61                TSL1401_GetLine(&MAIN_CCD);       //µÃµ½ÈüµÀÐÅÏ¢
   \   00000056   0x....             LDR.N    R0,??DataTable1_4
   \   00000058   0x.... 0x....      BL       TSL1401_GetLine
     62                
     63                CcdGet_Allow = 0;      //²É¼¯ÍêÇåÁãÔÊÐíÎ»£¬µÈ´ýÏÂÒ»´Î²É¼¯
   \   0000005C   0x....             LDR.N    R0,??DataTable1_2
   \   0000005E   0x2100             MOVS     R1,#+0
   \   00000060   0x7001             STRB     R1,[R0, #+0]
   \   00000062   0xE7E6             B.N      ??main_0
     64              }
     65              
     66            }
     67          }
     68          

   \                                 In section .text, align 2, keep-with-next
     69          void PIT0_Isr(void)
     70          {
   \                     PIT0_Isr:
   \   00000000   0xB580             PUSH     {R7,LR}
     71            PIT_clearIntFlg(TIMER0);
   \   00000002   0x2000             MOVS     R0,#+0
   \   00000004   0x.... 0x....      BL       PIT_clearIntFlg
     72            timeRef++;          //ÏµÍ³Ê±¼ä»ù×¼+1
   \   00000008   0x....             LDR.N    R0,??DataTable1_1
   \   0000000A   0x6800             LDR      R0,[R0, #+0]
   \   0000000C   0x1C40             ADDS     R0,R0,#+1
   \   0000000E   0x....             LDR.N    R1,??DataTable1_1
   \   00000010   0x6008             STR      R0,[R1, #+0]
     73            SysTick++;          //ÏµÍ³Ê±¼ä»ù×¼+1
   \   00000012   0x....             LDR.N    R0,??DataTable1_5
   \   00000014   0x8800             LDRH     R0,[R0, #+0]
   \   00000016   0x1C40             ADDS     R0,R0,#+1
   \   00000018   0x....             LDR.N    R1,??DataTable1_5
   \   0000001A   0x8008             STRH     R0,[R1, #+0]
     74            
     75            if(SysTick>10000)
   \   0000001C   0x....             LDR.N    R0,??DataTable1_5
   \   0000001E   0x8800             LDRH     R0,[R0, #+0]
   \   00000020   0xF242 0x7111      MOVW     R1,#+10001
   \   00000024   0x4288             CMP      R0,R1
   \   00000026   0xD303             BCC.N    ??PIT0_Isr_0
     76              SysTick = 10000;
   \   00000028   0x....             LDR.N    R0,??DataTable1_5
   \   0000002A   0xF242 0x7110      MOVW     R1,#+10000
   \   0000002E   0x8001             STRH     R1,[R0, #+0]
     77            TimePeriod_cnt++;       //Ê±¼äÆ¬±äÁ¿¼ÆÊý
   \                     ??PIT0_Isr_0:
   \   00000030   0x....             LDR.N    R0,??DataTable1_6
   \   00000032   0x7800             LDRB     R0,[R0, #+0]
   \   00000034   0x1C40             ADDS     R0,R0,#+1
   \   00000036   0x....             LDR.N    R1,??DataTable1_6
   \   00000038   0x7008             STRB     R0,[R1, #+0]
     78            
     79            if(TimePeriod_cnt>=TIME_PERIOD_NUM)         /*µÚ0Ê±¼äÆ¬ µÃµ½³µÌå½Ç¶È0.6-0.7ms(²É¼¯µ¥ÖáÊý¾Ý)*/
   \   0000003A   0x....             LDR.N    R0,??DataTable1_6
   \   0000003C   0x7800             LDRB     R0,[R0, #+0]
   \   0000003E   0x2805             CMP      R0,#+5
   \   00000040   0xD309             BCC.N    ??PIT0_Isr_1
     80            {
     81              
     82              TimePeriod_cnt=0;
   \   00000042   0x....             LDR.N    R0,??DataTable1_6
   \   00000044   0x2100             MOVS     R1,#+0
   \   00000046   0x7001             STRB     R1,[R0, #+0]
     83              
     84              Read_ITG3200D();      //¶ÁÍÓÂÝÒÇ²ÎÊý
   \   00000048   0x.... 0x....      BL       Read_ITG3200D
     85              Read_MMA8451Q();      //¶Á¼ÓËÙ¶È¼Æ²ÎÊý
   \   0000004C   0x.... 0x....      BL       Read_MMA8451Q
     86              
     87              Balance_Get();
   \   00000050   0x.... 0x....      BL       Balance_Get
   \   00000054   0xE054             B.N      ??PIT0_Isr_2
     88              //GoCreazy_Angle();         //½Ç¶È±£»¤
     89            }
     90            else if(TimePeriod_cnt==1)                /*µÚ1Ê±¼äÆ¬ ²âËÙ <1us*/
   \                     ??PIT0_Isr_1:
   \   00000056   0x....             LDR.N    R0,??DataTable1_6
   \   00000058   0x7800             LDRB     R0,[R0, #+0]
   \   0000005A   0x2801             CMP      R0,#+1
   \   0000005C   0xD115             BNE.N    ??PIT0_Isr_3
     91            {
     92          
     93              FTM_readQUADValue(FTM1,&R_MotorSpeed);//²âËÙ
   \   0000005E   0x....             LDR.N    R1,??DataTable1_7
   \   00000060   0x....             LDR.N    R0,??DataTable1_8  ;; 0x40039000
   \   00000062   0x.... 0x....      BL       FTM_readQUADValue
     94              FTM_readQUADValue(FTM2,&L_MotorSpeed);//²âËÙ
   \   00000066   0x....             LDR.N    R1,??DataTable1_9
   \   00000068   0x....             LDR.N    R0,??DataTable1_10  ;; 0x400b8000
   \   0000006A   0x.... 0x....      BL       FTM_readQUADValue
     95              Measure_Length();                             //²â³¤£¨Ö±½Ç¼ì²â´¦Àí£©
   \   0000006E   0x.... 0x....      BL       Measure_Length
     96          
     97              GoCreazy_Protect(L_MotorSpeed,R_MotorSpeed);        //·è³å±£»¤
   \   00000072   0x....             LDR.N    R0,??DataTable1_7
   \   00000074   0xF9B0 0x1000      LDRSH    R1,[R0, #+0]
   \   00000078   0x....             LDR.N    R0,??DataTable1_9
   \   0000007A   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   0000007E   0x.... 0x....      BL       GoCreazy_Protect
     98              CcdGet_Allow = 1;   //ÔÚ´ËÊ±¼äÆ¬ÔÊÐíCCD²É¼¯Í¼Ïñ
   \   00000082   0x....             LDR.N    R0,??DataTable1_2
   \   00000084   0x2101             MOVS     R1,#+1
   \   00000086   0x7001             STRB     R1,[R0, #+0]
   \   00000088   0xE03A             B.N      ??PIT0_Isr_2
     99          
    100             }
    101            else if(TimePeriod_cnt==2)              /*µÚ2Ê±¼äÆ¬ ËÙ¶È¿ØÖÆ1.1-5us*/
   \                     ??PIT0_Isr_3:
   \   0000008A   0x....             LDR.N    R0,??DataTable1_6
   \   0000008C   0x7800             LDRB     R0,[R0, #+0]
   \   0000008E   0x2802             CMP      R0,#+2
   \   00000090   0xD125             BNE.N    ??PIT0_Isr_4
    102            {
    103              Motor_Count++;
   \   00000092   0x....             LDR.N    R0,??DataTable1_11
   \   00000094   0x7800             LDRB     R0,[R0, #+0]
   \   00000096   0x1C40             ADDS     R0,R0,#+1
   \   00000098   0x....             LDR.N    R1,??DataTable1_11
   \   0000009A   0x7008             STRB     R0,[R1, #+0]
    104              if(Motor_Count>=CAR_MOTOR_PERIOD_LIMIT)         //Ã¿100msÖ´ÐÐÒ»´ÎËÙ¶È¾ö²ß
   \   0000009C   0x....             LDR.N    R0,??DataTable1_11
   \   0000009E   0x7800             LDRB     R0,[R0, #+0]
   \   000000A0   0x2814             CMP      R0,#+20
   \   000000A2   0xD312             BCC.N    ??PIT0_Isr_5
    105              {
    106                Motor_Count=0;
   \   000000A4   0x....             LDR.N    R0,??DataTable1_11
   \   000000A6   0x2100             MOVS     R1,#+0
   \   000000A8   0x7001             STRB     R1,[R0, #+0]
    107                
    108                L_MotorSpeed_temp = L_MotorSpeed;
   \   000000AA   0x....             LDR.N    R0,??DataTable1_12
   \   000000AC   0x....             LDR.N    R1,??DataTable1_9
   \   000000AE   0x8809             LDRH     R1,[R1, #+0]
   \   000000B0   0x8001             STRH     R1,[R0, #+0]
    109                R_MotorSpeed_temp = R_MotorSpeed;
   \   000000B2   0x....             LDR.N    R0,??DataTable1_13
   \   000000B4   0x....             LDR.N    R1,??DataTable1_7
   \   000000B6   0x8809             LDRH     R1,[R1, #+0]
   \   000000B8   0x8001             STRH     R1,[R0, #+0]
    110                
    111                SpeedControl(L_MotorSpeed_temp,R_MotorSpeed_temp);
   \   000000BA   0x....             LDR.N    R0,??DataTable1_13
   \   000000BC   0xF9B0 0x1000      LDRSH    R1,[R0, #+0]
   \   000000C0   0x....             LDR.N    R0,??DataTable1_12
   \   000000C2   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   000000C6   0x.... 0x....      BL       SpeedControl
    112              }
    113              Speed_PI_OUT();             //ËÙ¶È·Ö²½Êä³ö£¬·ÀÖ¹¹ý³å
   \                     ??PIT0_Isr_5:
   \   000000CA   0x.... 0x....      BL       Speed_PI_OUT
    114              
    115              Read_ITG3200D_Y();                  //ÈüµÀÊ¶±ðÓÃÍÓÂÝÒÇYÖá
   \   000000CE   0x.... 0x....      BL       Read_ITG3200D_Y
    116              JudgeWay(Gyro_Y);     //ÈüµÀÊ¶±ð
   \   000000D2   0x....             LDR.N    R0,??DataTable1_14
   \   000000D4   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   000000D8   0x.... 0x....      BL       JudgeWay
   \   000000DC   0xE010             B.N      ??PIT0_Isr_2
    117              
    118            }
    119            else if(TimePeriod_cnt==3)              /*µÚ3Ê±¼äÆ¬ ´¦ÀíÍ¼Ïñ180~240us*/
   \                     ??PIT0_Isr_4:
   \   000000DE   0x....             LDR.N    R0,??DataTable1_6
   \   000000E0   0x7800             LDRB     R0,[R0, #+0]
   \   000000E2   0x2803             CMP      R0,#+3
   \   000000E4   0xD106             BNE.N    ??PIT0_Isr_6
    120            {
    121              Deal_Black(&ASSI_CCD);
   \   000000E6   0x....             LDR.N    R0,??DataTable1_3
   \   000000E8   0x.... 0x....      BL       Deal_Black
    122              Deal_Black(&MAIN_CCD);
   \   000000EC   0x....             LDR.N    R0,??DataTable1_4
   \   000000EE   0x.... 0x....      BL       Deal_Black
   \   000000F2   0xE005             B.N      ??PIT0_Isr_2
    123            }
    124            else if(TimePeriod_cnt==4)              /*µÚ4Ê±¼äÆ¬ ½Ç¶È¿ØÖÆ£¬Êä³ö×ÜPWM Ô¼10us*/
   \                     ??PIT0_Isr_6:
   \   000000F4   0x....             LDR.N    R0,??DataTable1_6
   \   000000F6   0x7800             LDRB     R0,[R0, #+0]
   \   000000F8   0x2804             CMP      R0,#+4
   \   000000FA   0xD101             BNE.N    ??PIT0_Isr_2
    125            {
    126              
    127              CarAngleControl();
   \   000000FC   0x.... 0x....      BL       CarAngleControl
    128            }
    129            
    130          }
   \                     ??PIT0_Isr_2:
   \   00000100   0xBD01             POP      {R0,PC}          ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1:
   \   00000000   0x400FF000         DC32     0x400ff000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_1:
   \   00000000   0x........         DC32     timeRef

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_2:
   \   00000000   0x........         DC32     CcdGet_Allow

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_3:
   \   00000000   0x........         DC32     ASSI_CCD

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_4:
   \   00000000   0x........         DC32     MAIN_CCD

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_5:
   \   00000000   0x........         DC32     SysTick

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_6:
   \   00000000   0x........         DC32     TimePeriod_cnt

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_7:
   \   00000000   0x........         DC32     R_MotorSpeed

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_8:
   \   00000000   0x40039000         DC32     0x40039000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_9:
   \   00000000   0x........         DC32     L_MotorSpeed

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_10:
   \   00000000   0x400B8000         DC32     0x400b8000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_11:
   \   00000000   0x........         DC32     Motor_Count

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_12:
   \   00000000   0x........         DC32     L_MotorSpeed_temp

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_13:
   \   00000000   0x........         DC32     R_MotorSpeed_temp

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_14:
   \   00000000   0x........         DC32     Gyro_Y
    131          
    132          
    133          
    134              

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
        8  PIT0_Isr
             8 -> Balance_Get
             8 -> CarAngleControl
             8 -> Deal_Black
             8 -> FTM_readQUADValue
             8 -> GoCreazy_Protect
             8 -> JudgeWay
             8 -> Measure_Length
             8 -> PIT_clearIntFlg
             8 -> Read_ITG3200D
             8 -> Read_ITG3200D_Y
             8 -> Read_MMA8451Q
             8 -> SpeedControl
             8 -> Speed_PI_OUT
        8  main
             8 -> Car_Start
             8 -> Deal_Switch
             8 -> GPIO_SetPinStat
             8 -> Peripheral_Oparation
             8 -> SetVariable
             8 -> System_Init
             8 -> TSL1401_GetASSILine
             8 -> TSL1401_GetLine
             8 -> delay_ms


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable1
       4  ??DataTable1_1
       4  ??DataTable1_10
       4  ??DataTable1_11
       4  ??DataTable1_12
       4  ??DataTable1_13
       4  ??DataTable1_14
       4  ??DataTable1_2
       4  ??DataTable1_3
       4  ??DataTable1_4
       4  ??DataTable1_5
       4  ??DataTable1_6
       4  ??DataTable1_7
       4  ??DataTable1_8
       4  ??DataTable1_9
       1  CcdGet_Allow
       2  Forward_Dty
       2  L_MotorSpeed
       2  L_MotorSpeed_temp
       1  Motor_Count
     258  PIT0_Isr
       2  R_MotorSpeed
       2  R_MotorSpeed_temp
       4  SDerite_cnt
       1  StartStopFlag
       2  SysTick
       1  TimePeriod_cnt
     100  main
       4  timeRef

 
  23 bytes in section .bss
   1 byte  in section .data
 418 bytes in section .text
 
 418 bytes of CODE memory
  24 bytes of DATA memory

Errors: none
Warnings: none
