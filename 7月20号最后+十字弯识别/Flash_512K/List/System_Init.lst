###############################################################################
#                                                                             #
#                                                       22/Jul/2015  10:59:27 #
# IAR ANSI C/C++ Compiler V6.30.6.23336/W32 EVALUATION for ARM                #
# Copyright 1999-2012 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  thumb                                                    #
#    Endian       =  little                                                   #
#    Source file  =  C:\Users\dong\Desktop\7ÔÂ20ºÅ×îºó+Ê®×ÖÍäÊ¶±ð\System_Init #
#                    \System_Init.c                                           #
#    Command line =  C:\Users\dong\Desktop\7ÔÂ20ºÅ×îºó+Ê®×ÖÍäÊ¶±ð\System_Init #
#                    \System_Init.c -D IAR -lCN C:\Users\dong\Desktop\7ÔÂ20ºÅ #
#                    ×îºó+Ê®×ÖÍäÊ¶±ð\Flash_512K\List\ -lB                     #
#                    C:\Users\dong\Desktop\7ÔÂ20ºÅ×îºó+Ê®×ÖÍäÊ¶±ð\Flash_512K\ #
#                    List\ -o C:\Users\dong\Desktop\7ÔÂ20ºÅ×îºó+Ê®×ÖÍäÊ¶±ð\Fl #
#                    ash_512K\Obj\ --no_cse --no_unroll --no_inline           #
#                    --no_code_motion --no_tbaa --no_clustering               #
#                    --no_scheduling --debug --endian=little --cpu=Cortex-M4  #
#                    -e --char_is_signed --fpu=None --dlib_config             #
#                    "C:\Program Files\IAR Systems\Embedded Workbench 6.0     #
#                    Evaluation\arm\INC\c\DLib_Config_Normal.h" -I            #
#                    C:\Users\dong\Desktop\7ÔÂ20ºÅ×îºó+Ê®×ÖÍäÊ¶±ð\Library\CPU #
#                    \ -I C:\Users\dong\Desktop\7ÔÂ20ºÅ×îºó+Ê®×ÖÍäÊ¶±ð\Librar #
#                    y\Drivers\ADC\ -I C:\Users\dong\Desktop\7ÔÂ20ºÅ×îºó+Ê®×Ö #
#                    ÍäÊ¶±ð\Library\Drivers\FTM\ -I                           #
#                    C:\Users\dong\Desktop\7ÔÂ20ºÅ×îºó+Ê®×ÖÍäÊ¶±ð\Library\Dri #
#                    vers\GPIO\ -I C:\Users\dong\Desktop\7ÔÂ20ºÅ×îºó+Ê®×ÖÍäÊ¶ #
#                    ±ð\Library\Drivers\PIT\ -I C:\Users\dong\Desktop\7ÔÂ20ºÅ #
#                    ×îºó+Ê®×ÖÍäÊ¶±ð\Library\Drivers\I2C\ -I                  #
#                    C:\Users\dong\Desktop\7ÔÂ20ºÅ×îºó+Ê®×ÖÍäÊ¶±ð\Library\Dri #
#                    vers\UART\ -I C:\Users\dong\Desktop\7ÔÂ20ºÅ×îºó+Ê®×ÖÍäÊ¶ #
#                    ±ð\Library\Drivers\FTFL\ -I                              #
#                    C:\Users\dong\Desktop\7ÔÂ20ºÅ×îºó+Ê®×ÖÍäÊ¶±ð\MyFunction\ #
#                     -I C:\Users\dong\Desktop\7ÔÂ20ºÅ×îºó+Ê®×ÖÍäÊ¶±ð\SD_Syst #
#                    em\ -I C:\Users\dong\Desktop\7ÔÂ20ºÅ×îºó+Ê®×ÖÍäÊ¶±ð\Dela #
#                    y\ -I C:\Users\dong\Desktop\7ÔÂ20ºÅ×îºó+Ê®×ÖÍäÊ¶±ð\Syste #
#                    m_Init\ -I C:\Users\dong\Desktop\7ÔÂ20ºÅ×îºó+Ê®×ÖÍäÊ¶±ð\ #
#                    OLED\ -I C:\Users\dong\Desktop\7ÔÂ20ºÅ×îºó+Ê®×ÖÍäÊ¶±ð\ZL #
#                    G7290\ -I C:\Users\dong\Desktop\7ÔÂ20ºÅ×îºó+Ê®×ÖÍäÊ¶±ð\S #
#                    imple_AD\ -I C:\Users\dong\Desktop\7ÔÂ20ºÅ×îºó+Ê®×ÖÍäÊ¶± #
#                    ð\Make_Desicion\ -I C:\Users\dong\Desktop\7ÔÂ20ºÅ×îºó+Ê® #
#                    ×ÖÍäÊ¶±ð\Make_Desicion\Judge_Way\ -I                     #
#                    C:\Users\dong\Desktop\7ÔÂ20ºÅ×îºó+Ê®×ÖÍäÊ¶±ð\Make_Desici #
#                    on\Speed_Control\ -I C:\Users\dong\Desktop\7ÔÂ20ºÅ×îºó+Ê #
#                    ®×ÖÍäÊ¶±ð\Source\ -I C:\Users\dong\Desktop\7ÔÂ20ºÅ×îºó+Ê #
#                    ®×ÖÍäÊ¶±ð\Peripheral_Oparation\ -I                       #
#                    C:\Users\dong\Desktop\7ÔÂ20ºÅ×îºó+Ê®×ÖÍäÊ¶±ð\Balance_con #
#                    trol\ -Ol                                                #
#    List file    =  C:\Users\dong\Desktop\7ÔÂ20ºÅ×îºó+Ê®×ÖÍäÊ¶±ð\Flash_512K\ #
#                    List\System_Init.lst                                     #
#    Object file  =  C:\Users\dong\Desktop\7ÔÂ20ºÅ×îºó+Ê®×ÖÍäÊ¶±ð\Flash_512K\ #
#                    Obj\System_Init.o                                        #
#                                                                             #
#                                                                             #
###############################################################################

C:\Users\dong\Desktop\7ÔÂ20ºÅ×îºó+Ê®×ÖÍäÊ¶±ð\System_Init\System_Init.c
      1          #include "AllHeaders.h"
      2          
      3          /*******************************************************************************
      4          * º¯ÊýÃû£ºCCD_Init(void)
      5          * Ãè  Êö£ºÍê³É¶ÔCCDÓÐ¹ØÒý½ÅµÄ³õÊ¼»¯
      6          ********************************************************************************/

   \                                 In section .text, align 2, keep-with-next
      7          void CCD_Init(void)
      8          {
   \                     CCD_Init:
   \   00000000   0xB580             PUSH     {R7,LR}
      9            //CCD port init
     10            GPIO_SetPinMod(PORTE, 24,0);                               // ÅäÖÃÏàÓ¦Òý½ÅµÄ¹¦ÄÜºÅ,ADC0_SE17 ¶¨CCD²É¼¯
   \   00000002   0x2200             MOVS     R2,#+0
   \   00000004   0x2118             MOVS     R1,#+24
   \   00000006   0x....             LDR.N    R0,??DataTable4  ;; 0x400ff100
   \   00000008   0x.... 0x....      BL       GPIO_SetPinMod
     11            GPIO_SetPinMod(PORTE, 25,0);                               // ÅäÖÃÏàÓ¦Òý½ÅµÄ¹¦ÄÜºÅ,ADC0_SE18 ¶¨CCD²É¼¯
   \   0000000C   0x2200             MOVS     R2,#+0
   \   0000000E   0x2119             MOVS     R1,#+25
   \   00000010   0x....             LDR.N    R0,??DataTable4  ;; 0x400ff100
   \   00000012   0x.... 0x....      BL       GPIO_SetPinMod
     12          
     13            GPIO_SetPinMod(PORTE,6,1);                             
   \   00000016   0x2201             MOVS     R2,#+1
   \   00000018   0x2106             MOVS     R1,#+6
   \   0000001A   0x....             LDR.N    R0,??DataTable4  ;; 0x400ff100
   \   0000001C   0x.... 0x....      BL       GPIO_SetPinMod
     14            GPIO_SetPinDir(PORTE,6,1);                               // ÉèÖÃPTE6¿ÚÎªÊä³ö£¬SIÐÅºÅ
   \   00000020   0x2201             MOVS     R2,#+1
   \   00000022   0x2106             MOVS     R1,#+6
   \   00000024   0x....             LDR.N    R0,??DataTable4  ;; 0x400ff100
   \   00000026   0x.... 0x....      BL       GPIO_SetPinDir
     15            GPIO_SetPinMod(PORTE,17,1);
   \   0000002A   0x2201             MOVS     R2,#+1
   \   0000002C   0x2111             MOVS     R1,#+17
   \   0000002E   0x....             LDR.N    R0,??DataTable4  ;; 0x400ff100
   \   00000030   0x.... 0x....      BL       GPIO_SetPinMod
     16            GPIO_SetPinDir(PORTE,17,1);                                // ÉèÖÃPTE17¿ÚÎªÊä³ö£¬CLKÐÅºÅ
   \   00000034   0x2201             MOVS     R2,#+1
   \   00000036   0x2111             MOVS     R1,#+17
   \   00000038   0x....             LDR.N    R0,??DataTable4  ;; 0x400ff100
   \   0000003A   0x.... 0x....      BL       GPIO_SetPinDir
     17            
     18            GPIO_SetPinMod(PORTD,1,1);                             
   \   0000003E   0x2201             MOVS     R2,#+1
   \   00000040   0x2101             MOVS     R1,#+1
   \   00000042   0x....             LDR.N    R0,??DataTable4_1  ;; 0x400ff0c0
   \   00000044   0x.... 0x....      BL       GPIO_SetPinMod
     19            GPIO_SetPinDir(PORTD,1,1);                               // ÉèÖÃPTD1¿ÚÎªÊä³ö£¬SIÐÅºÅ
   \   00000048   0x2201             MOVS     R2,#+1
   \   0000004A   0x2101             MOVS     R1,#+1
   \   0000004C   0x....             LDR.N    R0,??DataTable4_1  ;; 0x400ff0c0
   \   0000004E   0x.... 0x....      BL       GPIO_SetPinDir
     20            GPIO_SetPinMod(PORTD,3,1);
   \   00000052   0x2201             MOVS     R2,#+1
   \   00000054   0x2103             MOVS     R1,#+3
   \   00000056   0x....             LDR.N    R0,??DataTable4_1  ;; 0x400ff0c0
   \   00000058   0x.... 0x....      BL       GPIO_SetPinMod
     21            GPIO_SetPinDir(PORTD,3,1);                                // ÉèÖÃPTD3¿ÚÎªÊä³ö£¬CLKÐÅºÅ
   \   0000005C   0x2201             MOVS     R2,#+1
   \   0000005E   0x2103             MOVS     R1,#+3
   \   00000060   0x....             LDR.N    R0,??DataTable4_1  ;; 0x400ff0c0
   \   00000062   0x.... 0x....      BL       GPIO_SetPinDir
     22            //CCD ADC module init
     23            ADC_ClockCtrl(ADC0);
   \   00000066   0x....             LDR.N    R0,??DataTable4_2  ;; 0x4003b000
   \   00000068   0x.... 0x....      BL       ADC_ClockCtrl
     24            //ADC_SetCFG1(ADC0, 1, 0, 1);                        // ADC ²ÉÑù¾«¶È8Î»£¬Ê±ÖÓÆµÂÊ48MHZ/2£¨×ÜÏßÊ±ÖÓ£©/2
     25            ADC_SetCFG1(ADC0, 0, 0, 0);                        // ADC ²ÉÑù¾«¶È8Î»£¬Ê±ÖÓÆµÂÊ48MHZ£¨×ÜÏßÊ±ÖÓ£©
   \   0000006C   0x2300             MOVS     R3,#+0
   \   0000006E   0x2200             MOVS     R2,#+0
   \   00000070   0x2100             MOVS     R1,#+0
   \   00000072   0x....             LDR.N    R0,??DataTable4_2  ;; 0x4003b000
   \   00000074   0x.... 0x....      BL       ADC_SetCFG1
     26            ADC_SetCFG2(ADC0, 0, 0, 3);                        //µÚ¶þ¸ö²ÎÊýÑ¡ÔñADC A»òB
   \   00000078   0x2303             MOVS     R3,#+3
   \   0000007A   0x2200             MOVS     R2,#+0
   \   0000007C   0x2100             MOVS     R1,#+0
   \   0000007E   0x....             LDR.N    R0,??DataTable4_2  ;; 0x4003b000
   \   00000080   0x.... 0x....      BL       ADC_SetCFG2
     27            ADC_SetSC(ADC0, 1, 0, 0);                          // Ó²¼þÆ½¾ùÂË²¨²ÉÑù´ÎÊýÎª 8£¬²éÑ¯·½Ê½ 8MHZ²ÉÑùÂÊ 6¸öÊ±ÖÓÖÜÆÚÍê³ÉÒ»´Î×ª»»
   \   00000084   0x2300             MOVS     R3,#+0
   \   00000086   0x2200             MOVS     R2,#+0
   \   00000088   0x2101             MOVS     R1,#+1
   \   0000008A   0x....             LDR.N    R0,??DataTable4_2  ;; 0x4003b000
   \   0000008C   0x.... 0x....      BL       ADC_SetSC
     28          }
   \   00000090   0xBD01             POP      {R0,PC}          ;; return
     29          
     30          /*******************************************************************************
     31          * º¯ÊýÃû³Æ£ºServo_Init(void)
     32          * Ãè    Êö£ºÉèÖÃ¶æ»ú¿ØÖÆ PWM Ä£¿é                                         
     33          *******************************************************************************
     34          void Servo_Init(void)                           //Íê³É¶ÔPWM0µÄ³õÊ¼»¯£¬ÓÃÓÚ¿ØÖÆ×ªÏò¶æ»ú
     35          { 
     36            GPIO_SetPinMod(PORTA, 13, 3);                       // ÅäÖÃÏàÓ¦Òý½ÅµÄ¹¦ÄÜºÅ,FTM1_CH1
     37            FTM_initPWM(FTM1, 1, 4);                           // ÅäÖÃ PWM Ê±ÖÓºÍ·ÖÆµÊý
     38            FTM_enablePWMCh(FTM1, 1, 0, 14999, 0);             // PWM  ÆµÂÊ 200K Hz
     39            FTM_setPWMDty(FTM1, 1, dutyMid);                         // ÅäÖÃ PWM Õ¼¿Õ±È
     40            
     41            
     42          }
     43          */
     44          /*******************************************************************************
     45          * º¯ÊýÃû³Æ£ºMotor_Init
     46          * Ãè    Êö£ºÉèÖÃµç»ú¿ØÖÆ PWM Ä£¿é                                         
     47          *******************************************************************************/

   \                                 In section .text, align 2, keep-with-next
     48          void Motor_Init(void) 
     49          { 
   \                     Motor_Init:
   \   00000000   0xB580             PUSH     {R7,LR}
     50            FTM_initPWM(FTM0, 1, 5);
   \   00000002   0x2205             MOVS     R2,#+5
   \   00000004   0x2101             MOVS     R1,#+1
   \   00000006   0x....             LDR.N    R0,??DataTable4_3  ;; 0x40038000
   \   00000008   0x.... 0x....      BL       FTM_initPWM
     51            
     52            GPIO_SetPinMod(PORTD, 6, 4);                       // ÅäÖÃÏàÓ¦Òý½ÅµÄ¹¦ÄÜºÅ,FTM0_CH6
   \   0000000C   0x2204             MOVS     R2,#+4
   \   0000000E   0x2106             MOVS     R1,#+6
   \   00000010   0x....             LDR.N    R0,??DataTable4_1  ;; 0x400ff0c0
   \   00000012   0x.... 0x....      BL       GPIO_SetPinMod
     53            GPIO_SetPinMod(PORTC, 3, 4);                       // ÅäÖÃÏàÓ¦Òý½ÅµÄ¹¦ÄÜºÅ,FTM0_CH2
   \   00000016   0x2204             MOVS     R2,#+4
   \   00000018   0x2103             MOVS     R1,#+3
   \   0000001A   0x....             LDR.N    R0,??DataTable4_4  ;; 0x400ff080
   \   0000001C   0x.... 0x....      BL       GPIO_SetPinMod
     54            GPIO_SetPinMod(PORTD, 4, 4);                       // ÅäÖÃÏàÓ¦Òý½ÅµÄ¹¦ÄÜºÅ,FTM0_CH4
   \   00000020   0x2204             MOVS     R2,#+4
   \   00000022   0x2104             MOVS     R1,#+4
   \   00000024   0x....             LDR.N    R0,??DataTable4_1  ;; 0x400ff0c0
   \   00000026   0x.... 0x....      BL       GPIO_SetPinMod
     55            GPIO_SetPinMod(PORTC, 1, 4);                       // ÅäÖÃÏàÓ¦Òý½ÅµÄ¹¦ÄÜºÅ,FTM0_CH0
   \   0000002A   0x2204             MOVS     R2,#+4
   \   0000002C   0x2101             MOVS     R1,#+1
   \   0000002E   0x....             LDR.N    R0,??DataTable4_4  ;; 0x400ff080
   \   00000030   0x.... 0x....      BL       GPIO_SetPinMod
     56            
     57            FTM_enablePWMCh(FTM0, 0, 0, 500, 0);               // PWM  ÆµÂÊ 600-->10KHZ
   \   00000034   0x2000             MOVS     R0,#+0
   \   00000036   0x9000             STR      R0,[SP, #+0]
   \   00000038   0xF44F 0x73FA      MOV      R3,#+500
   \   0000003C   0x2200             MOVS     R2,#+0
   \   0000003E   0x2100             MOVS     R1,#+0
   \   00000040   0x....             LDR.N    R0,??DataTable4_3  ;; 0x40038000
   \   00000042   0x.... 0x....      BL       FTM_enablePWMCh
     58            FTM_enablePWMCh(FTM0, 2, 0, 500, 0);
   \   00000046   0x2000             MOVS     R0,#+0
   \   00000048   0x9000             STR      R0,[SP, #+0]
   \   0000004A   0xF44F 0x73FA      MOV      R3,#+500
   \   0000004E   0x2200             MOVS     R2,#+0
   \   00000050   0x2102             MOVS     R1,#+2
   \   00000052   0x....             LDR.N    R0,??DataTable4_3  ;; 0x40038000
   \   00000054   0x.... 0x....      BL       FTM_enablePWMCh
     59            FTM_enablePWMCh(FTM0, 4, 0, 500, 0);               // PWM  ÆµÂÊ 600-->10KHZ
   \   00000058   0x2000             MOVS     R0,#+0
   \   0000005A   0x9000             STR      R0,[SP, #+0]
   \   0000005C   0xF44F 0x73FA      MOV      R3,#+500
   \   00000060   0x2200             MOVS     R2,#+0
   \   00000062   0x2104             MOVS     R1,#+4
   \   00000064   0x....             LDR.N    R0,??DataTable4_3  ;; 0x40038000
   \   00000066   0x.... 0x....      BL       FTM_enablePWMCh
     60            FTM_enablePWMCh(FTM0, 6, 0, 500, 0);
   \   0000006A   0x2000             MOVS     R0,#+0
   \   0000006C   0x9000             STR      R0,[SP, #+0]
   \   0000006E   0xF44F 0x73FA      MOV      R3,#+500
   \   00000072   0x2200             MOVS     R2,#+0
   \   00000074   0x2106             MOVS     R1,#+6
   \   00000076   0x....             LDR.N    R0,??DataTable4_3  ;; 0x40038000
   \   00000078   0x.... 0x....      BL       FTM_enablePWMCh
     61            
     62            FTM_setPWMDty(FTM0, 0, 0);                         // ³õÊ¼»¯ PWM Õ¼¿Õ±È
   \   0000007C   0x2200             MOVS     R2,#+0
   \   0000007E   0x2100             MOVS     R1,#+0
   \   00000080   0x....             LDR.N    R0,??DataTable4_3  ;; 0x40038000
   \   00000082   0x.... 0x....      BL       FTM_setPWMDty
     63            FTM_setPWMDty(FTM0, 2, 0);
   \   00000086   0x2200             MOVS     R2,#+0
   \   00000088   0x2102             MOVS     R1,#+2
   \   0000008A   0x....             LDR.N    R0,??DataTable4_3  ;; 0x40038000
   \   0000008C   0x.... 0x....      BL       FTM_setPWMDty
     64            FTM_setPWMDty(FTM0, 4, 0);                         // ³õÊ¼»¯ PWM Õ¼¿Õ±È
   \   00000090   0x2200             MOVS     R2,#+0
   \   00000092   0x2104             MOVS     R1,#+4
   \   00000094   0x....             LDR.N    R0,??DataTable4_3  ;; 0x40038000
   \   00000096   0x.... 0x....      BL       FTM_setPWMDty
     65            FTM_setPWMDty(FTM0, 6, 0);
   \   0000009A   0x2200             MOVS     R2,#+0
   \   0000009C   0x2106             MOVS     R1,#+6
   \   0000009E   0x....             LDR.N    R0,??DataTable4_3  ;; 0x40038000
   \   000000A0   0x.... 0x....      BL       FTM_setPWMDty
     66          }
   \   000000A4   0xBD01             POP      {R0,PC}          ;; return
     67          
     68          /*******************************************************************************
     69          * º¯ÊýÃû³Æ£ºBuzzer_Init
     70          * Ãè    Êö£ºÉèÖÃ·äÃùÆ÷Ä£¿é                                         
     71          *******************************************************************************/

   \                                 In section .text, align 2, keep-with-next
     72          void Buzzer_Init(void)
     73          {
   \                     Buzzer_Init:
   \   00000000   0xB580             PUSH     {R7,LR}
     74            GPIO_SetPinMod(PORTA, 15, 1);                   // ÅäÖÃÏàÓ¦Òý½ÅµÄ¹¦ÄÜºÅ
   \   00000002   0x2201             MOVS     R2,#+1
   \   00000004   0x210F             MOVS     R1,#+15
   \   00000006   0x....             LDR.N    R0,??DataTable4_5  ;; 0x400ff000
   \   00000008   0x.... 0x....      BL       GPIO_SetPinMod
     75            GPIO_SetPinDir(PORTA, 15, 1);
   \   0000000C   0x2201             MOVS     R2,#+1
   \   0000000E   0x210F             MOVS     R1,#+15
   \   00000010   0x....             LDR.N    R0,??DataTable4_5  ;; 0x400ff000
   \   00000012   0x.... 0x....      BL       GPIO_SetPinDir
     76            GPIO_SetPinDriveStrgth(PORTA, 15, 1);           //ÉèÖÃÇ¿Çý¶¯Ä£Ê½
   \   00000016   0x2201             MOVS     R2,#+1
   \   00000018   0x210F             MOVS     R1,#+15
   \   0000001A   0x....             LDR.N    R0,??DataTable4_5  ;; 0x400ff000
   \   0000001C   0x.... 0x....      BL       GPIO_SetPinDriveStrgth
     77          }
   \   00000020   0xBD01             POP      {R0,PC}          ;; return
     78          
     79          /*******************************************************************************
     80          * º¯ÊýÃû³Æ£ºSwitch_Init
     81          * Ãè    Êö£ºÉèÖÃ·äÃùÆ÷Ä£¿é                                         
     82          *******************************************************************************/

   \                                 In section .text, align 2, keep-with-next
     83          void Switch_Init(void)
     84          {
   \                     Switch_Init:
   \   00000000   0xB580             PUSH     {R7,LR}
     85            GPIO_SetPinMod(PORTB, 23, 1);                   // ÅäÖÃÏàÓ¦Òý½ÅµÄ¹¦ÄÜºÅ
   \   00000002   0x2201             MOVS     R2,#+1
   \   00000004   0x2117             MOVS     R1,#+23
   \   00000006   0x....             LDR.N    R0,??DataTable4_6  ;; 0x400ff040
   \   00000008   0x.... 0x....      BL       GPIO_SetPinMod
     86            GPIO_SetPinDir(PORTB, 23, 0);                   // ÅäÖÃÏàÓ¦Òý½ÅµÄ·½Ïò
   \   0000000C   0x2200             MOVS     R2,#+0
   \   0000000E   0x2117             MOVS     R1,#+23
   \   00000010   0x....             LDR.N    R0,??DataTable4_6  ;; 0x400ff040
   \   00000012   0x.... 0x....      BL       GPIO_SetPinDir
     87            
     88            GPIO_SetPinMod(PORTB, 22, 1);                   // ÅäÖÃÏàÓ¦Òý½ÅµÄ¹¦ÄÜºÅ
   \   00000016   0x2201             MOVS     R2,#+1
   \   00000018   0x2116             MOVS     R1,#+22
   \   0000001A   0x....             LDR.N    R0,??DataTable4_6  ;; 0x400ff040
   \   0000001C   0x.... 0x....      BL       GPIO_SetPinMod
     89            GPIO_SetPinDir(PORTB, 22, 0);                   // ÅäÖÃÏàÓ¦Òý½ÅµÄ·½Ïò
   \   00000020   0x2200             MOVS     R2,#+0
   \   00000022   0x2116             MOVS     R1,#+22
   \   00000024   0x....             LDR.N    R0,??DataTable4_6  ;; 0x400ff040
   \   00000026   0x.... 0x....      BL       GPIO_SetPinDir
     90            
     91            GPIO_SetPinMod(PORTB, 21, 1);                   // ÅäÖÃÏàÓ¦Òý½ÅµÄ¹¦ÄÜºÅ
   \   0000002A   0x2201             MOVS     R2,#+1
   \   0000002C   0x2115             MOVS     R1,#+21
   \   0000002E   0x....             LDR.N    R0,??DataTable4_6  ;; 0x400ff040
   \   00000030   0x.... 0x....      BL       GPIO_SetPinMod
     92            GPIO_SetPinDir(PORTB, 21, 0);                   // ÅäÖÃÏàÓ¦Òý½ÅµÄ·½Ïò
   \   00000034   0x2200             MOVS     R2,#+0
   \   00000036   0x2115             MOVS     R1,#+21
   \   00000038   0x....             LDR.N    R0,??DataTable4_6  ;; 0x400ff040
   \   0000003A   0x.... 0x....      BL       GPIO_SetPinDir
     93            
     94            GPIO_SetPinMod(PORTB, 20, 1);                   // ÅäÖÃÏàÓ¦Òý½ÅµÄ¹¦ÄÜºÅ
   \   0000003E   0x2201             MOVS     R2,#+1
   \   00000040   0x2114             MOVS     R1,#+20
   \   00000042   0x....             LDR.N    R0,??DataTable4_6  ;; 0x400ff040
   \   00000044   0x.... 0x....      BL       GPIO_SetPinMod
     95            GPIO_SetPinDir(PORTB, 20, 0);                   // ÅäÖÃÏàÓ¦Òý½ÅµÄ·½Ïò
   \   00000048   0x2200             MOVS     R2,#+0
   \   0000004A   0x2114             MOVS     R1,#+20
   \   0000004C   0x....             LDR.N    R0,??DataTable4_6  ;; 0x400ff040
   \   0000004E   0x.... 0x....      BL       GPIO_SetPinDir
     96            
     97            
     98            GPIO_SetPinMod(PORTC, 15, 1);                   // ÅäÖÃÏàÓ¦Òý½ÅµÄ¹¦ÄÜºÅ
   \   00000052   0x2201             MOVS     R2,#+1
   \   00000054   0x210F             MOVS     R1,#+15
   \   00000056   0x....             LDR.N    R0,??DataTable4_4  ;; 0x400ff080
   \   00000058   0x.... 0x....      BL       GPIO_SetPinMod
     99            GPIO_SetPinDir(PORTC, 15, 0);                   // ÅäÖÃÏàÓ¦Òý½ÅµÄ·½Ïò
   \   0000005C   0x2200             MOVS     R2,#+0
   \   0000005E   0x210F             MOVS     R1,#+15
   \   00000060   0x....             LDR.N    R0,??DataTable4_4  ;; 0x400ff080
   \   00000062   0x.... 0x....      BL       GPIO_SetPinDir
    100            
    101            GPIO_SetPinMod(PORTC, 14, 1);                   // ÅäÖÃÏàÓ¦Òý½ÅµÄ¹¦ÄÜºÅ
   \   00000066   0x2201             MOVS     R2,#+1
   \   00000068   0x210E             MOVS     R1,#+14
   \   0000006A   0x....             LDR.N    R0,??DataTable4_4  ;; 0x400ff080
   \   0000006C   0x.... 0x....      BL       GPIO_SetPinMod
    102            GPIO_SetPinDir(PORTC, 14, 0);                   // ÅäÖÃÏàÓ¦Òý½ÅµÄ·½Ïò
   \   00000070   0x2200             MOVS     R2,#+0
   \   00000072   0x210E             MOVS     R1,#+14
   \   00000074   0x....             LDR.N    R0,??DataTable4_4  ;; 0x400ff080
   \   00000076   0x.... 0x....      BL       GPIO_SetPinDir
    103            
    104            GPIO_SetPinMod(PORTC, 13, 1);                   // ÅäÖÃÏàÓ¦Òý½ÅµÄ¹¦ÄÜºÅ
   \   0000007A   0x2201             MOVS     R2,#+1
   \   0000007C   0x210D             MOVS     R1,#+13
   \   0000007E   0x....             LDR.N    R0,??DataTable4_4  ;; 0x400ff080
   \   00000080   0x.... 0x....      BL       GPIO_SetPinMod
    105            GPIO_SetPinDir(PORTC, 13, 0);                   // ÅäÖÃÏàÓ¦Òý½ÅµÄ·½Ïò
   \   00000084   0x2200             MOVS     R2,#+0
   \   00000086   0x210D             MOVS     R1,#+13
   \   00000088   0x....             LDR.N    R0,??DataTable4_4  ;; 0x400ff080
   \   0000008A   0x.... 0x....      BL       GPIO_SetPinDir
    106            
    107            GPIO_SetPinMod(PORTC, 12, 1);                   // ÅäÖÃÏàÓ¦Òý½ÅµÄ¹¦ÄÜºÅ
   \   0000008E   0x2201             MOVS     R2,#+1
   \   00000090   0x210C             MOVS     R1,#+12
   \   00000092   0x....             LDR.N    R0,??DataTable4_4  ;; 0x400ff080
   \   00000094   0x.... 0x....      BL       GPIO_SetPinMod
    108            GPIO_SetPinDir(PORTC, 12, 0);                   // ÅäÖÃÏàÓ¦Òý½ÅµÄ·½Ïò
   \   00000098   0x2200             MOVS     R2,#+0
   \   0000009A   0x210C             MOVS     R1,#+12
   \   0000009C   0x....             LDR.N    R0,??DataTable4_4  ;; 0x400ff080
   \   0000009E   0x.... 0x....      BL       GPIO_SetPinDir
    109            
    110          
    111          }
   \   000000A2   0xBD01             POP      {R0,PC}          ;; return
    112          
    113          /*******************************************************************************
    114          * º¯ÊýÃû³Æ£ºUART_Init
    115          * Ãè    Êö£ºÓÃ»§¸½¼ÓµÄ³õÊ¼»¯´úÂë                                         
    116          *******************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    117          void UART_Init(void)
    118          {
    119          #if BLOOTH_EN
    120            GPIO_SetPinMod(PORTB,16,3);
    121            GPIO_SetPinMod(PORTB,17,3);
    122            
    123            UART_Selt(UART0_BASE_PTR);
    124            UART_Set(UART0_BASE_PTR,8,9600);
    125            EN_INTUART0();   //¿ª´®¿ÚÖÐ¶Ï
    126          
    127          #endif
    128          }
   \                     UART_Init:
   \   00000000   0x4770             BX       LR               ;; return
    129          
    130          /*******************************************************************************
    131          * º¯ÊýÃû³Æ£ºQUAT_Init
    132          * Ãè    Êö£ºÓÃ»§¸½¼ÓµÄ³õÊ¼»¯´úÂë                                         
    133          *******************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    134          void QUAT_Init(void)
    135          {
   \                     QUAT_Init:
   \   00000000   0xB580             PUSH     {R7,LR}
    136            GPIO_SetPinMod(PORTB,18,6);
   \   00000002   0x2206             MOVS     R2,#+6
   \   00000004   0x2112             MOVS     R1,#+18
   \   00000006   0x....             LDR.N    R0,??DataTable4_6  ;; 0x400ff040
   \   00000008   0x.... 0x....      BL       GPIO_SetPinMod
    137            GPIO_SetPinMod(PORTB,19,6);
   \   0000000C   0x2206             MOVS     R2,#+6
   \   0000000E   0x2113             MOVS     R1,#+19
   \   00000010   0x....             LDR.N    R0,??DataTable4_6  ;; 0x400ff040
   \   00000012   0x.... 0x....      BL       GPIO_SetPinMod
    138            GPIO_SetPinMod(PORTA,12,7);
   \   00000016   0x2207             MOVS     R2,#+7
   \   00000018   0x210C             MOVS     R1,#+12
   \   0000001A   0x....             LDR.N    R0,??DataTable4_5  ;; 0x400ff000
   \   0000001C   0x.... 0x....      BL       GPIO_SetPinMod
    139            GPIO_SetPinMod(PORTA,13,7);
   \   00000020   0x2207             MOVS     R2,#+7
   \   00000022   0x210D             MOVS     R1,#+13
   \   00000024   0x....             LDR.N    R0,??DataTable4_5  ;; 0x400ff000
   \   00000026   0x.... 0x....      BL       GPIO_SetPinMod
    140          
    141            FTM_initQUAD(FTM1, 1, 0, 65535);                   // ÅäÖÃÕý½»½âÂëÄ£¿é²ÎÊý
   \   0000002A   0xF64F 0x73FF      MOVW     R3,#+65535
   \   0000002E   0x2200             MOVS     R2,#+0
   \   00000030   0x2101             MOVS     R1,#+1
   \   00000032   0x....             LDR.N    R0,??DataTable4_7  ;; 0x40039000
   \   00000034   0x.... 0x....      BL       FTM_initQUAD
    142            FTM_enableQUAD(FTM1);                              // Ê¹ÄÜÕý½»½âÂë
   \   00000038   0x....             LDR.N    R0,??DataTable4_7  ;; 0x40039000
   \   0000003A   0x.... 0x....      BL       FTM_enableQUAD
    143            
    144            FTM_initQUAD(FTM2, 1, 0, 65535);                   // ÅäÖÃÕý½»½âÂëÄ£¿é²ÎÊý
   \   0000003E   0xF64F 0x73FF      MOVW     R3,#+65535
   \   00000042   0x2200             MOVS     R2,#+0
   \   00000044   0x2101             MOVS     R1,#+1
   \   00000046   0x....             LDR.N    R0,??DataTable4_8  ;; 0x400b8000
   \   00000048   0x.... 0x....      BL       FTM_initQUAD
    145            FTM_enableQUAD(FTM2);                              // Ê¹ÄÜÕý½»½âÂë
   \   0000004C   0x....             LDR.N    R0,??DataTable4_8  ;; 0x400b8000
   \   0000004E   0x.... 0x....      BL       FTM_enableQUAD
    146          }
   \   00000052   0xBD01             POP      {R0,PC}          ;; return
    147          /*******************************************************************************
    148          * º¯ÊýÃû³Æ£ºUser_Init
    149          * Ãè    Êö£ºÓÃ»§¸½¼ÓµÄ³õÊ¼»¯´úÂë                                         
    150          *******************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    151          void User_Init(void)
    152          {
   \                     User_Init:
   \   00000000   0xB580             PUSH     {R7,LR}
    153          #if OLED_EN
    154            OLED_Init();
   \   00000002   0x.... 0x....      BL       OLED_Init
    155            OLED_Clear();
   \   00000006   0x.... 0x....      BL       OLED_Clear
    156            OLED_Refresh_Gram();
   \   0000000A   0x.... 0x....      BL       OLED_Refresh_Gram
    157          #endif 
    158           
    159          #if (FUNC_MUSK==0)
    160            SD_System_Init();
    161          #endif
    162          #if (FUNC_MUSK==1)
    163            Init_7290();
   \   0000000E   0x.... 0x....      BL       Init_7290
    164            //°´¼üÖÐ¶ÏÉè¶¨
    165            EnableInt_Kinetis(91);    //¿ªPORTEµÄÖÐ¶Ï
   \   00000012   0x205B             MOVS     R0,#+91
   \   00000014   0x.... 0x....      BL       EnableInt_Kinetis
    166            SetIntPri_Kinetis(91,2);    //Éè¶¨ÖÐ¶ÏÓÅÏÈ¼¶
   \   00000018   0x2102             MOVS     R1,#+2
   \   0000001A   0x205B             MOVS     R0,#+91
   \   0000001C   0x.... 0x....      BL       SetIntPri_Kinetis
    167          #endif
    168            //I2C³õÊ¼»¯
    169            I2C_Driver_Init();
   \   00000020   0x.... 0x....      BL       I2C_Driver_Init
    170            //ÑÓÊ±Ö®ºó³õÊ¼»¯¼ÓËÙ¶È¼ÆºÍÍÓÂÝÒÇ
    171            delay_ms(40);
   \   00000024   0x2028             MOVS     R0,#+40
   \   00000026   0x.... 0x....      BL       delay_ms
    172            SetScaleRange();
   \   0000002A   0x.... 0x....      BL       SetScaleRange
    173            MMA8451Q_init();
   \   0000002E   0x.... 0x....      BL       MMA8451Q_init
    174          
    175          }
   \   00000032   0xBD01             POP      {R0,PC}          ;; return
    176          
    177          /*******************************************************************************
    178          * º¯ÊýÃû³Æ: System_Init                          
    179          * Ãè    Êö£ºµ÷ÓÃ¸÷Ä£¿é³õÊ¼»¯º¯Êý 
    180          *******************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    181          void System_Init(void)
    182          {
   \                     System_Init:
   \   00000000   0xB580             PUSH     {R7,LR}
    183            CCD_Init();
   \   00000002   0x.... 0x....      BL       CCD_Init
    184            Motor_Init();
   \   00000006   0x.... 0x....      BL       Motor_Init
    185            Buzzer_Init();
   \   0000000A   0x.... 0x....      BL       Buzzer_Init
    186            Switch_Init();
   \   0000000E   0x.... 0x....      BL       Switch_Init
    187            UART_Init();
   \   00000012   0x.... 0x....      BL       UART_Init
    188            QUAT_Init();
   \   00000016   0x.... 0x....      BL       QUAT_Init
    189            User_Init();
   \   0000001A   0x.... 0x....      BL       User_Init
    190            
    191          }
   \   0000001E   0xBD01             POP      {R0,PC}          ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4:
   \   00000000   0x400FF100         DC32     0x400ff100

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_1:
   \   00000000   0x400FF0C0         DC32     0x400ff0c0

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_2:
   \   00000000   0x4003B000         DC32     0x4003b000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_3:
   \   00000000   0x40038000         DC32     0x40038000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_4:
   \   00000000   0x400FF080         DC32     0x400ff080

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_5:
   \   00000000   0x400FF000         DC32     0x400ff000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_6:
   \   00000000   0x400FF040         DC32     0x400ff040

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_7:
   \   00000000   0x40039000         DC32     0x40039000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_8:
   \   00000000   0x400B8000         DC32     0x400b8000

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
        8  Buzzer_Init
             8 -> GPIO_SetPinDir
             8 -> GPIO_SetPinDriveStrgth
             8 -> GPIO_SetPinMod
        8  CCD_Init
             8 -> ADC_ClockCtrl
             8 -> ADC_SetCFG1
             8 -> ADC_SetCFG2
             8 -> ADC_SetSC
             8 -> GPIO_SetPinDir
             8 -> GPIO_SetPinMod
        8  Motor_Init
             8 -> FTM_enablePWMCh
             8 -> FTM_initPWM
             8 -> FTM_setPWMDty
             8 -> GPIO_SetPinMod
        8  QUAT_Init
             8 -> FTM_enableQUAD
             8 -> FTM_initQUAD
             8 -> GPIO_SetPinMod
        8  Switch_Init
             8 -> GPIO_SetPinDir
             8 -> GPIO_SetPinMod
        8  System_Init
             8 -> Buzzer_Init
             8 -> CCD_Init
             8 -> Motor_Init
             8 -> QUAT_Init
             8 -> Switch_Init
             8 -> UART_Init
             8 -> User_Init
        0  UART_Init
        8  User_Init
             8 -> EnableInt_Kinetis
             8 -> I2C_Driver_Init
             8 -> Init_7290
             8 -> MMA8451Q_init
             8 -> OLED_Clear
             8 -> OLED_Init
             8 -> OLED_Refresh_Gram
             8 -> SetIntPri_Kinetis
             8 -> SetScaleRange
             8 -> delay_ms


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable4
       4  ??DataTable4_1
       4  ??DataTable4_2
       4  ??DataTable4_3
       4  ??DataTable4_4
       4  ??DataTable4_5
       4  ??DataTable4_6
       4  ??DataTable4_7
       4  ??DataTable4_8
      34  Buzzer_Init
     146  CCD_Init
     166  Motor_Init
      84  QUAT_Init
     164  Switch_Init
      32  System_Init
       2  UART_Init
      52  User_Init

 
 716 bytes in section .text
 
 716 bytes of CODE memory

Errors: none
Warnings: none
